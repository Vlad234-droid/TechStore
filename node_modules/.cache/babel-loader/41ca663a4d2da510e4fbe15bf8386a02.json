{"ast":null,"code":"/* eslint-disable no-extra-boolean-cast */\nimport axios from 'axios';\nimport { message } from 'antd';\nimport { getHeaders } from '../headers';\nconst BASE_ENDPOINT = '/customers';\nexport const createCustomer = (credentials, history) => {\n  axios.post(BASE_ENDPOINT, credentials).then(res => {\n    if (res.status === 200) {\n      history.push('/');\n      message.info('New account created successfully');\n    }\n  }).catch(error => {\n    if (error.response) {\n      const requestMessage = error.response.data.message;\n      message.error(`Error: ${requestMessage}`);\n    }\n  });\n};\nexport const changePassword = passwords => {\n  const headers = getHeaders();\n  const res = axios.put(`${BASE_ENDPOINT}/password`, passwords, {\n    headers\n  }).then(data => {\n    if (data.status === 200) {\n      if (data.data.message === 'Password successfully changed') {\n        message.success('Your password have been changed');\n      }\n\n      if (data.data.password === 'Password does not match') {\n        message.error('Old password is wrong ');\n      }\n    }\n  }).catch(error => {\n    if (error.response) {\n      const requestMessage = error.response.data.message;\n      message.error(`Error: ${requestMessage}`);\n    }\n  });\n  return res;\n};\nexport const updateCustomer = credentials => {\n  const headers = getHeaders();\n  const res = axios.put(BASE_ENDPOINT, credentials, {\n    headers\n  }).then(data => {\n    if (data.status === 200) {\n      message.success('Your contact information has been changed');\n    }\n  }).catch(error => error.response);\n  return res;\n};\nexport const getCustomer = () => {\n  const headers = getHeaders();\n  const res = axios.get(`${BASE_ENDPOINT}/customer`, {\n    headers\n  }).then(data => data).catch(error => error.response);\n  return res;\n};","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/store/customer/middleware.js"],"names":["axios","message","getHeaders","BASE_ENDPOINT","createCustomer","credentials","history","post","then","res","status","push","info","catch","error","response","requestMessage","data","changePassword","passwords","headers","put","success","password","updateCustomer","getCustomer","get"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B;AAEA,MAAMC,aAAa,GAAG,YAAtB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,WAAD,EAAcC,OAAd,KAA0B;AACtDN,EAAAA,KAAK,CAACO,IAAN,CAAWJ,aAAX,EAA0BE,WAA1B,EACGG,IADH,CACSC,GAAD,IAAS;AACb,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBJ,MAAAA,OAAO,CAACK,IAAR,CAAa,GAAb;AACAV,MAAAA,OAAO,CAACW,IAAR,CAAa,kCAAb;AACD;AACF,GANH,EAOGC,KAPH,CAOUC,KAAD,IAAW;AAChB,QAAIA,KAAK,CAACC,QAAV,EAAoB;AAClB,YAAMC,cAAc,GAAGF,KAAK,CAACC,QAAN,CAAeE,IAAf,CAAoBhB,OAA3C;AACAA,MAAAA,OAAO,CAACa,KAAR,CAAe,UAASE,cAAe,EAAvC;AACD;AACF,GAZH;AAaD,CAdM;AAgBP,OAAO,MAAME,cAAc,GAAIC,SAAD,IAAe;AAC3C,QAAMC,OAAO,GAAGlB,UAAU,EAA1B;AACA,QAAMO,GAAG,GAAGT,KAAK,CAACqB,GAAN,CAAW,GAAElB,aAAc,WAA3B,EAAuCgB,SAAvC,EAAkD;AAACC,IAAAA;AAAD,GAAlD,EACTZ,IADS,CACHS,IAAD,IAAU;AACd,QAAIA,IAAI,CAACP,MAAL,KAAgB,GAApB,EAAyB;AACvB,UAAIO,IAAI,CAACA,IAAL,CAAUhB,OAAV,KAAsB,+BAA1B,EAA2D;AACzDA,QAAAA,OAAO,CAACqB,OAAR,CAAgB,iCAAhB;AACD;;AACD,UAAIL,IAAI,CAACA,IAAL,CAAUM,QAAV,KAAuB,yBAA3B,EAAsD;AACpDtB,QAAAA,OAAO,CAACa,KAAR,CAAc,wBAAd;AACD;AACF;AACF,GAVS,EAWTD,KAXS,CAWFC,KAAD,IAAW;AAChB,QAAIA,KAAK,CAACC,QAAV,EAAoB;AAClB,YAAMC,cAAc,GAAGF,KAAK,CAACC,QAAN,CAAeE,IAAf,CAAoBhB,OAA3C;AACAA,MAAAA,OAAO,CAACa,KAAR,CAAe,UAASE,cAAe,EAAvC;AACD;AACF,GAhBS,CAAZ;AAiBA,SAAOP,GAAP;AACD,CApBM;AAsBP,OAAO,MAAMe,cAAc,GAAInB,WAAD,IAAiB;AAC7C,QAAMe,OAAO,GAAGlB,UAAU,EAA1B;AACA,QAAMO,GAAG,GAAGT,KAAK,CAACqB,GAAN,CAAUlB,aAAV,EAAyBE,WAAzB,EAAsC;AAACe,IAAAA;AAAD,GAAtC,EACTZ,IADS,CACHS,IAAD,IAAU;AACd,QAAIA,IAAI,CAACP,MAAL,KAAgB,GAApB,EAAyB;AACvBT,MAAAA,OAAO,CAACqB,OAAR,CAAgB,2CAAhB;AACD;AACF,GALS,EAMTT,KANS,CAMFC,KAAD,IAAWA,KAAK,CAACC,QANd,CAAZ;AAOA,SAAON,GAAP;AACD,CAVM;AAYP,OAAO,MAAMgB,WAAW,GAAG,MAAM;AAC/B,QAAML,OAAO,GAAGlB,UAAU,EAA1B;AACA,QAAMO,GAAG,GAAGT,KAAK,CAAC0B,GAAN,CAAW,GAAEvB,aAAc,WAA3B,EAAuC;AAACiB,IAAAA;AAAD,GAAvC,EACTZ,IADS,CACHS,IAAD,IAAWA,IADP,EAETJ,KAFS,CAEFC,KAAD,IAAWA,KAAK,CAACC,QAFd,CAAZ;AAIA,SAAON,GAAP;AACD,CAPM","sourcesContent":["/* eslint-disable no-extra-boolean-cast */\nimport axios from 'axios'\nimport { message } from 'antd'\nimport { getHeaders } from '../headers'\n\nconst BASE_ENDPOINT = '/customers'\n\nexport const createCustomer = (credentials, history) => {\n  axios.post(BASE_ENDPOINT, credentials)\n    .then((res) => {\n      if (res.status === 200) {\n        history.push('/')\n        message.info('New account created successfully')\n      }\n    })\n    .catch((error) => {\n      if (error.response) {\n        const requestMessage = error.response.data.message\n        message.error(`Error: ${requestMessage}`)\n      }\n    })\n}\n\nexport const changePassword = (passwords) => {\n  const headers = getHeaders();\n  const res = axios.put(`${BASE_ENDPOINT}/password`, passwords, {headers})\n    .then((data) => {\n      if (data.status === 200) {\n        if (data.data.message === 'Password successfully changed') {\n          message.success('Your password have been changed')\n        }\n        if (data.data.password === 'Password does not match') {\n          message.error('Old password is wrong ')\n        }\n      }\n    })\n    .catch((error) => {\n      if (error.response) {\n        const requestMessage = error.response.data.message\n        message.error(`Error: ${requestMessage}`)\n      }\n    })\n  return res\n}\n\nexport const updateCustomer = (credentials) => {\n  const headers = getHeaders();\n  const res = axios.put(BASE_ENDPOINT, credentials, {headers})\n    .then((data) => {\n      if (data.status === 200) {\n        message.success('Your contact information has been changed')\n      }\n    })\n    .catch((error) => error.response)\n  return res\n}\n\nexport const getCustomer = () => {\n  const headers = getHeaders();\n  const res = axios.get(`${BASE_ENDPOINT}/customer`, {headers})\n    .then((data) => (data))\n    .catch((error) => error.response)\n    \n  return res\n}"]},"metadata":{},"sourceType":"module"}