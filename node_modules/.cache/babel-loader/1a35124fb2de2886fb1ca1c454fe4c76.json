{"ast":null,"code":"/* eslint-disable no-underscore-dangle */\nimport { message } from 'antd';\nimport axios from 'axios';\nimport { addCartToLS, decreaseQuantityLS, getCartLS, increaseQuantityLS, removeFromCartLS } from '../../utils/cartLS';\nimport { setCart, decreaseQuantityCreator, addToCartCreator, removeFromCartCreator, clearCartCreator, increaseQuantityCreator, getBranches, getShippingCostCreator, getOrderCreator, clearOrderCreator } from './actionCreator';\nimport { DOMAIN, getHeaders } from '../general';\nconst BASE_ENDPOINT = `${DOMAIN}/cart`;\nexport const addToCart = (product, quantity) => (dispatch, getStore) => {\n  const {\n    cart: {\n      products\n    },\n    auth: {\n      isLogin\n    }\n  } = getStore();\n  const productId = product._id;\n  let updatedCart = [];\n  const itemInCartAndLS = products ? products.find(el => el.product._id === productId) : null;\n\n  if (itemInCartAndLS) {\n    updatedCart = products.map(el => {\n      if (el.product._id === itemInCartAndLS.product._id) {\n        return { ...el,\n          cartQuantity: el.cartQuantity + quantity\n        };\n      }\n\n      return el;\n    });\n  } else {\n    updatedCart = [...products, {\n      product: productId,\n      cartQuantity: quantity\n    }];\n  }\n\n  if (isLogin) {\n    const headers = getHeaders();\n    axios.put(BASE_ENDPOINT, {\n      products: updatedCart\n    }, {\n      headers\n    }).then(updatedCart => {\n      dispatch(addToCartCreator(updatedCart.data));\n      message.success('Product has been added to cart');\n    }).catch(error => error.response);\n  } else {\n    addCartToLS(product, quantity);\n    dispatch(setCart({\n      products: getCartLS()\n    }));\n    message.success('Product has been added to cart');\n  }\n};\nexport const getCart = () => (dispatch, getStore) => {\n  const {\n    auth: {\n      isLogin\n    }\n  } = getStore();\n\n  if (isLogin) {\n    const headers = getHeaders();\n    axios.get(BASE_ENDPOINT, {\n      headers\n    }).then(cart => {\n      if (cart.data !== null) {\n        dispatch(setCart(cart.data));\n      }\n    }).catch(err => err.response);\n  } else {\n    dispatch(setCart({\n      products: getCartLS()\n    }));\n  }\n};\nexport const increaseQuantity = product => (dispatch, getStore) => {\n  const {\n    auth: {\n      isLogin\n    }\n  } = getStore();\n\n  if (isLogin) {\n    const headers = getHeaders();\n    axios.put(`${BASE_ENDPOINT}/${product._id}`, null, {\n      headers\n    }).then(updatedCart => {\n      dispatch(increaseQuantityCreator(updatedCart.data));\n    }).catch(error => error.response);\n  } else {\n    dispatch(increaseQuantityCreator({\n      products: increaseQuantityLS(product._id)\n    }));\n  }\n};\nexport const decreaseQuantity = productID => (dispatch, getStore) => {\n  const {\n    auth: {\n      isLogin\n    }\n  } = getStore();\n\n  if (isLogin) {\n    const headers = getHeaders();\n    axios.delete(`${BASE_ENDPOINT}/product/${productID}`, {\n      headers\n    }).then(updatedCart => {\n      dispatch(decreaseQuantityCreator(updatedCart.data));\n    }).catch(error => error.response);\n  } else {\n    dispatch(decreaseQuantityCreator({\n      products: decreaseQuantityLS(productID)\n    }));\n  }\n};\nexport const removeFromCart = productID => (dispatch, getStore) => {\n  const {\n    auth: {\n      isLogin\n    }\n  } = getStore();\n\n  if (isLogin) {\n    const headers = getHeaders();\n    axios.delete(`${BASE_ENDPOINT}/${productID}`, {\n      headers\n    }).then(result => {\n      dispatch(removeFromCartCreator(result.data));\n    }).catch(error => error.response);\n  } else {\n    dispatch(removeFromCartCreator({\n      products: removeFromCartLS(productID)\n    }));\n  }\n};\nexport const clearCart = () => (dispatch, getStore) => {\n  const {\n    auth: {\n      isLogin\n    }\n  } = getStore();\n\n  if (isLogin) {\n    const headers = getHeaders();\n    axios.delete(BASE_ENDPOINT, {\n      headers\n    }).then(() => {\n      dispatch(clearCartCreator());\n    }).catch(err => err.response);\n  } else {\n    dispatch(clearCartCreator());\n    localStorage.removeItem('cart');\n  }\n};\nexport const getCity = props => dispatch => {\n  axios.post('https://api.novaposhta.ua/v2.0/json/', {\n    modelName: 'AddressGeneral',\n    calledMethod: 'getWarehouses',\n    methodProperties: {\n      Language: 'ru',\n      CityRef: props\n    },\n    apiKey: '469ae707669208ac6f2d113fc7edbe13'\n  }).then(data => {\n    const dataBranches = data.data.data.map(item => ({\n      branchName: item.DescriptionRu,\n      branchRef: item.Ref\n    }));\n    dispatch(getBranches(dataBranches));\n  }).catch(error => error.response);\n};\nexport const getShippingCost = recipientCityRef => dispatch => {\n  axios.post('https://api.novaposhta.ua/v2.0/json/', {\n    modelName: 'InternetDocument',\n    calledMethod: 'getDocumentPrice',\n    methodProperties: {\n      CitySender: '8d5a980d-391c-11dd-90d9-001a92567626',\n      CityRecipient: recipientCityRef.current.props.value,\n      Weight: '10',\n      ServiceType: 'DoorsDoors',\n      Cost: '100',\n      CargoType: 'Cargo',\n      SeatsAmount: '10',\n      PackCalculate: {\n        PackCount: '1',\n        PackRef: '1499fa4a-d26e-11e1-95e4-0026b97ed48a'\n      },\n      RedeliveryCalculate: {\n        CargoType: 'Money',\n        Amount: '100'\n      }\n    },\n    apiKey: '469ae707669208ac6f2d113fc7edbe13'\n  }).then(data => {\n    dispatch(getShippingCostCreator(data.data.data[0].Cost));\n  }).catch(error => error.response);\n};\nexport const PlaceOrder = (products, isLogin, values, customer, shippingCost, valuePaymentInfo) => dispatch => {\n  dispatch(clearOrderCreator()); // eslint-disable-next-line prefer-const\n\n  let body = {\n    canceled: false,\n    deliveryAddress: JSON.stringify({\n      country: values.country,\n      city: values.recipientCity,\n      branch: values.recipientBranch\n    }),\n    shipping: JSON.stringify(shippingCost),\n    paymentInfo: JSON.stringify(valuePaymentInfo),\n    status: 'not shipped',\n    email: values.email,\n    mobile: values.phoneNumber,\n    firstName: values.firstName,\n    letterSubject: `${values.firstName}, thank you for order!`,\n    letterHtml: '<h1>Your order is placed. Our manager will contact you soon.</h1>'\n  };\n\n  if (isLogin) {\n    body.customerId = customer;\n  } else {\n    body.products = JSON.stringify(products);\n  }\n\n  axios.post(`${DOMAIN}/orders`, body).then(newOrder => {\n    dispatch(getOrderCreator(newOrder.data.order));\n    dispatch(clearCart());\n  }).catch(err => err.response);\n};\nexport const getCartServer = async () => {\n  const headers = getHeaders();\n  const cartState = [];\n  await axios.get(BASE_ENDPOINT, {\n    headers\n  }).then(res => {\n    const {\n      data,\n      status\n    } = res;\n    if (data && status === 200) cartState.push(...data.products);\n  }).catch(err => err.response);\n  return cartState;\n};\nexport const addLSToServer = () => async dispatch => {\n  const cartLS = JSON.parse(localStorage.getItem('cart')) || [];\n  let products = await getCartServer();\n\n  if (cartLS.length > 0 && products.length === 0) {\n    products = cartLS;\n  } else {\n    cartLS.forEach(el => {\n      const itemInCartAndLS = products.find(item => item.product._id === el.product._id);\n\n      if (itemInCartAndLS) {\n        itemInCartAndLS.cartQuantity += el.cartQuantity;\n      } else {\n        products.push(el);\n      }\n    });\n  }\n\n  const updatedCartForServer = products.map(item => ({\n    product: item.product._id,\n    cartQuantity: item.cartQuantity\n  }));\n  const headers = getHeaders();\n  axios.put(BASE_ENDPOINT, {\n    products: updatedCartForServer\n  }, {\n    headers\n  }).then(updatedCart => {\n    if (updatedCart.status === 200) {\n      localStorage.removeItem('cart');\n      dispatch(addToCartCreator(updatedCart.data));\n    }\n  }).catch(error => error.response);\n};","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/store/cart/middleware.js"],"names":["message","axios","addCartToLS","decreaseQuantityLS","getCartLS","increaseQuantityLS","removeFromCartLS","setCart","decreaseQuantityCreator","addToCartCreator","removeFromCartCreator","clearCartCreator","increaseQuantityCreator","getBranches","getShippingCostCreator","getOrderCreator","clearOrderCreator","DOMAIN","getHeaders","BASE_ENDPOINT","addToCart","product","quantity","dispatch","getStore","cart","products","auth","isLogin","productId","_id","updatedCart","itemInCartAndLS","find","el","map","cartQuantity","headers","put","then","data","success","catch","error","response","getCart","get","err","increaseQuantity","decreaseQuantity","productID","delete","removeFromCart","result","clearCart","localStorage","removeItem","getCity","props","post","modelName","calledMethod","methodProperties","Language","CityRef","apiKey","dataBranches","item","branchName","DescriptionRu","branchRef","Ref","getShippingCost","recipientCityRef","CitySender","CityRecipient","current","value","Weight","ServiceType","Cost","CargoType","SeatsAmount","PackCalculate","PackCount","PackRef","RedeliveryCalculate","Amount","PlaceOrder","values","customer","shippingCost","valuePaymentInfo","body","canceled","deliveryAddress","JSON","stringify","country","city","recipientCity","branch","recipientBranch","shipping","paymentInfo","status","email","mobile","phoneNumber","firstName","letterSubject","letterHtml","customerId","newOrder","order","getCartServer","cartState","res","push","addLSToServer","cartLS","parse","getItem","length","forEach","updatedCartForServer"],"mappings":"AAAA;AACA,SAASA,OAAT,QAAwB,MAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,WADF,EACeC,kBADf,EACmCC,SADnC,EAC8CC,kBAD9C,EACkEC,gBADlE,QAEO,oBAFP;AAGA,SACEC,OADF,EAEEC,uBAFF,EAGEC,gBAHF,EAIEC,qBAJF,EAKEC,gBALF,EAMEC,uBANF,EAOEC,WAPF,EAQEC,sBARF,EASEC,eATF,EAUEC,iBAVF,QAWO,iBAXP;AAYA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,YAAnC;AAEA,MAAMC,aAAa,GAAI,GAAEF,MAAO,OAAhC;AAEA,OAAO,MAAMG,SAAS,GAAG,CAACC,OAAD,EAAUC,QAAV,KAAuB,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACtE,QAAM;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF,KAAR;AAAsBC,IAAAA,IAAI,EAAE;AAACC,MAAAA;AAAD;AAA5B,MAA0CJ,QAAQ,EAAxD;AACA,QAAMK,SAAS,GAAGR,OAAO,CAACS,GAA1B;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,QAAMC,eAAe,GAAGN,QAAQ,GAAGA,QAAQ,CAACO,IAAT,CAAeC,EAAD,IAAQA,EAAE,CAACb,OAAH,CAAWS,GAAX,KAAmBD,SAAzC,CAAH,GAAyD,IAAzF;;AACA,MAAIG,eAAJ,EAAqB;AACnBD,IAAAA,WAAW,GAAGL,QAAQ,CAACS,GAAT,CAAcD,EAAD,IAAQ;AACjC,UAAIA,EAAE,CAACb,OAAH,CAAWS,GAAX,KAAmBE,eAAe,CAACX,OAAhB,CAAwBS,GAA/C,EAAoD;AAClD,eAAO,EACL,GAAGI,EADE;AAELE,UAAAA,YAAY,EAAEF,EAAE,CAACE,YAAH,GAAkBd;AAF3B,SAAP;AAID;;AACD,aAAOY,EAAP;AACD,KARa,CAAd;AASD,GAVD,MAUO;AACLH,IAAAA,WAAW,GAAG,CACZ,GAAGL,QADS,EAEZ;AACEL,MAAAA,OAAO,EAAEQ,SADX;AAEEO,MAAAA,YAAY,EAAEd;AAFhB,KAFY,CAAd;AAOD;;AACD,MAAIM,OAAJ,EAAa;AACX,UAAMS,OAAO,GAAGnB,UAAU,EAA1B;AACAjB,IAAAA,KAAK,CAACqC,GAAN,CAAUnB,aAAV,EAAyB;AAACO,MAAAA,QAAQ,EAAEK;AAAX,KAAzB,EAAkD;AAAEM,MAAAA;AAAF,KAAlD,EACGE,IADH,CACSR,WAAD,IAAiB;AACrBR,MAAAA,QAAQ,CAACd,gBAAgB,CAACsB,WAAW,CAACS,IAAb,CAAjB,CAAR;AACAxC,MAAAA,OAAO,CAACyC,OAAR,CAAgB,gCAAhB;AACD,KAJH,EAKGC,KALH,CAKUC,KAAD,IAAWA,KAAK,CAACC,QAL1B;AAMD,GARD,MAQO;AACL1C,IAAAA,WAAW,CAACmB,OAAD,EAAUC,QAAV,CAAX;AACAC,IAAAA,QAAQ,CAAChB,OAAO,CAAC;AAACmB,MAAAA,QAAQ,EAAEtB,SAAS;AAApB,KAAD,CAAR,CAAR;AACAJ,IAAAA,OAAO,CAACyC,OAAR,CAAgB,gCAAhB;AACD;AACF,CArCM;AAuCP,OAAO,MAAMI,OAAO,GAAG,MAAM,CAACtB,QAAD,EAAWC,QAAX,KAAwB;AACnD,QAAM;AAACG,IAAAA,IAAI,EAAE;AAACC,MAAAA;AAAD;AAAP,MAAqBJ,QAAQ,EAAnC;;AACA,MAAII,OAAJ,EAAa;AACX,UAAMS,OAAO,GAAGnB,UAAU,EAA1B;AACAjB,IAAAA,KAAK,CAAC6C,GAAN,CAAU3B,aAAV,EAAyB;AAAEkB,MAAAA;AAAF,KAAzB,EACGE,IADH,CACSd,IAAD,IAAU;AACd,UAAIA,IAAI,CAACe,IAAL,KAAc,IAAlB,EAAwB;AACtBjB,QAAAA,QAAQ,CAAChB,OAAO,CAACkB,IAAI,CAACe,IAAN,CAAR,CAAR;AACD;AACF,KALH,EAMGE,KANH,CAMUK,GAAD,IAASA,GAAG,CAACH,QANtB;AAOD,GATD,MASO;AACLrB,IAAAA,QAAQ,CAAChB,OAAO,CAAC;AAACmB,MAAAA,QAAQ,EAAEtB,SAAS;AAApB,KAAD,CAAR,CAAR;AACD;AACF,CAdM;AAgBP,OAAO,MAAM4C,gBAAgB,GAAI3B,OAAD,IAAa,CAACE,QAAD,EAAWC,QAAX,KAAwB;AACnE,QAAM;AAACG,IAAAA,IAAI,EAAE;AAACC,MAAAA;AAAD;AAAP,MAAqBJ,QAAQ,EAAnC;;AACA,MAAII,OAAJ,EAAa;AACX,UAAMS,OAAO,GAAGnB,UAAU,EAA1B;AACAjB,IAAAA,KAAK,CAACqC,GAAN,CAAW,GAAEnB,aAAc,IAAGE,OAAO,CAACS,GAAI,EAA1C,EAA6C,IAA7C,EAAmD;AAAEO,MAAAA;AAAF,KAAnD,EACGE,IADH,CACSR,WAAD,IAAiB;AACrBR,MAAAA,QAAQ,CAACX,uBAAuB,CAACmB,WAAW,CAACS,IAAb,CAAxB,CAAR;AACD,KAHH,EAIGE,KAJH,CAIUC,KAAD,IAAWA,KAAK,CAACC,QAJ1B;AAKD,GAPD,MAOO;AACLrB,IAAAA,QAAQ,CAACX,uBAAuB,CAAC;AAACc,MAAAA,QAAQ,EAAErB,kBAAkB,CAACgB,OAAO,CAACS,GAAT;AAA7B,KAAD,CAAxB,CAAR;AACD;AACF,CAZM;AAcP,OAAO,MAAMmB,gBAAgB,GAAIC,SAAD,IAAe,CAAC3B,QAAD,EAAWC,QAAX,KAAwB;AACrE,QAAM;AAACG,IAAAA,IAAI,EAAE;AAACC,MAAAA;AAAD;AAAP,MAAqBJ,QAAQ,EAAnC;;AACA,MAAII,OAAJ,EAAa;AACX,UAAMS,OAAO,GAAGnB,UAAU,EAA1B;AACAjB,IAAAA,KAAK,CAACkD,MAAN,CAAc,GAAEhC,aAAc,YAAW+B,SAAU,EAAnD,EAAsD;AAAEb,MAAAA;AAAF,KAAtD,EACGE,IADH,CACSR,WAAD,IAAiB;AACrBR,MAAAA,QAAQ,CAACf,uBAAuB,CAACuB,WAAW,CAACS,IAAb,CAAxB,CAAR;AACD,KAHH,EAIGE,KAJH,CAIUC,KAAD,IAAWA,KAAK,CAACC,QAJ1B;AAKD,GAPD,MAOO;AACLrB,IAAAA,QAAQ,CAACf,uBAAuB,CAAC;AAACkB,MAAAA,QAAQ,EAAEvB,kBAAkB,CAAC+C,SAAD;AAA7B,KAAD,CAAxB,CAAR;AACD;AACF,CAZM;AAcP,OAAO,MAAME,cAAc,GAAIF,SAAD,IAAe,CAAC3B,QAAD,EAAWC,QAAX,KAAwB;AACnE,QAAM;AAACG,IAAAA,IAAI,EAAE;AAACC,MAAAA;AAAD;AAAP,MAAqBJ,QAAQ,EAAnC;;AACA,MAAII,OAAJ,EAAa;AACX,UAAMS,OAAO,GAAGnB,UAAU,EAA1B;AACAjB,IAAAA,KAAK,CAACkD,MAAN,CAAc,GAAEhC,aAAc,IAAG+B,SAAU,EAA3C,EAA8C;AAAEb,MAAAA;AAAF,KAA9C,EACGE,IADH,CACSc,MAAD,IAAY;AAChB9B,MAAAA,QAAQ,CAACb,qBAAqB,CAAC2C,MAAM,CAACb,IAAR,CAAtB,CAAR;AACD,KAHH,EAIGE,KAJH,CAIUC,KAAD,IAAWA,KAAK,CAACC,QAJ1B;AAKD,GAPD,MAOO;AACLrB,IAAAA,QAAQ,CAACb,qBAAqB,CAAC;AAACgB,MAAAA,QAAQ,EAAEpB,gBAAgB,CAAC4C,SAAD;AAA3B,KAAD,CAAtB,CAAR;AACD;AACF,CAZM;AAcP,OAAO,MAAMI,SAAS,GAAG,MAAM,CAAC/B,QAAD,EAAWC,QAAX,KAAwB;AACrD,QAAM;AAACG,IAAAA,IAAI,EAAE;AAACC,MAAAA;AAAD;AAAP,MAAqBJ,QAAQ,EAAnC;;AACA,MAAII,OAAJ,EAAa;AACX,UAAMS,OAAO,GAAGnB,UAAU,EAA1B;AACAjB,IAAAA,KAAK,CAACkD,MAAN,CAAahC,aAAb,EAA4B;AAAEkB,MAAAA;AAAF,KAA5B,EACGE,IADH,CACQ,MAAM;AACVhB,MAAAA,QAAQ,CAACZ,gBAAgB,EAAjB,CAAR;AACD,KAHH,EAIG+B,KAJH,CAIUK,GAAD,IAASA,GAAG,CAACH,QAJtB;AAKD,GAPD,MAOO;AACLrB,IAAAA,QAAQ,CAACZ,gBAAgB,EAAjB,CAAR;AACA4C,IAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACD;AACF,CAbM;AAeP,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAAYnC,QAAD,IAAc;AAC9CtB,EAAAA,KAAK,CAAC0D,IAAN,CAAW,sCAAX,EAAmD;AACjDC,IAAAA,SAAS,EAAE,gBADsC;AAEjDC,IAAAA,YAAY,EAAE,eAFmC;AAGjDC,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,QAAQ,EAAE,IADM;AAEhBC,MAAAA,OAAO,EAAEN;AAFO,KAH+B;AAOjDO,IAAAA,MAAM,EAAE;AAPyC,GAAnD,EASG1B,IATH,CASSC,IAAD,IAAU;AACd,UAAM0B,YAAY,GAAG1B,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAeL,GAAf,CAAoBgC,IAAD,KAAW;AACjDC,MAAAA,UAAU,EAAED,IAAI,CAACE,aADgC;AAEjDC,MAAAA,SAAS,EAAEH,IAAI,CAACI;AAFiC,KAAX,CAAnB,CAArB;AAIAhD,IAAAA,QAAQ,CAACV,WAAW,CAACqD,YAAD,CAAZ,CAAR;AACD,GAfH,EAgBGxB,KAhBH,CAgBUC,KAAD,IAAWA,KAAK,CAACC,QAhB1B;AAiBD,CAlBM;AAoBP,OAAO,MAAM4B,eAAe,GAAIC,gBAAD,IAAuBlD,QAAD,IAAc;AACjEtB,EAAAA,KAAK,CAAC0D,IAAN,CAAW,sCAAX,EAAmD;AACjDC,IAAAA,SAAS,EAAE,kBADsC;AAEjDC,IAAAA,YAAY,EAAE,kBAFmC;AAGjDC,IAAAA,gBAAgB,EAAE;AAChBY,MAAAA,UAAU,EAAE,sCADI;AAEhBC,MAAAA,aAAa,EAAEF,gBAAgB,CAACG,OAAjB,CAAyBlB,KAAzB,CAA+BmB,KAF9B;AAGhBC,MAAAA,MAAM,EAAE,IAHQ;AAIhBC,MAAAA,WAAW,EAAE,YAJG;AAKhBC,MAAAA,IAAI,EAAE,KALU;AAMhBC,MAAAA,SAAS,EAAE,OANK;AAOhBC,MAAAA,WAAW,EAAE,IAPG;AAQhBC,MAAAA,aAAa,EAAE;AACbC,QAAAA,SAAS,EAAE,GADE;AAEbC,QAAAA,OAAO,EAAE;AAFI,OARC;AAYhBC,MAAAA,mBAAmB,EAAE;AACnBL,QAAAA,SAAS,EAAE,OADQ;AAEnBM,QAAAA,MAAM,EAAE;AAFW;AAZL,KAH+B;AAoBjDtB,IAAAA,MAAM,EAAE;AApByC,GAAnD,EAsBG1B,IAtBH,CAsBSC,IAAD,IAAU;AACdjB,IAAAA,QAAQ,CAACT,sBAAsB,CAAC0B,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAe,CAAf,EAAkBwC,IAAnB,CAAvB,CAAR;AACD,GAxBH,EAyBGtC,KAzBH,CAyBUC,KAAD,IAAWA,KAAK,CAACC,QAzB1B;AA0BD,CA3BM;AA6BP,OAAO,MAAM4C,UAAU,GAAG,CACxB9D,QADwB,EACdE,OADc,EACL6D,MADK,EACGC,QADH,EACaC,YADb,EAC2BC,gBAD3B,KAEpBrE,QAAD,IAAc;AACjBA,EAAAA,QAAQ,CAACP,iBAAiB,EAAlB,CAAR,CADiB,CAEjB;;AACA,MAAI6E,IAAI,GAAG;AACTC,IAAAA,QAAQ,EAAE,KADD;AAETC,IAAAA,eAAe,EAAEC,IAAI,CAACC,SAAL,CAAe;AAC9BC,MAAAA,OAAO,EAAET,MAAM,CAACS,OADc;AAE9BC,MAAAA,IAAI,EAAEV,MAAM,CAACW,aAFiB;AAG9BC,MAAAA,MAAM,EAAEZ,MAAM,CAACa;AAHe,KAAf,CAFR;AAOTC,IAAAA,QAAQ,EAAEP,IAAI,CAACC,SAAL,CAAeN,YAAf,CAPD;AAQTa,IAAAA,WAAW,EAAER,IAAI,CAACC,SAAL,CAAeL,gBAAf,CARJ;AASTa,IAAAA,MAAM,EAAE,aATC;AAUTC,IAAAA,KAAK,EAAEjB,MAAM,CAACiB,KAVL;AAWTC,IAAAA,MAAM,EAAElB,MAAM,CAACmB,WAXN;AAYTC,IAAAA,SAAS,EAAEpB,MAAM,CAACoB,SAZT;AAaTC,IAAAA,aAAa,EAAG,GAAErB,MAAM,CAACoB,SAAU,wBAb1B;AAcTE,IAAAA,UAAU,EAAE;AAdH,GAAX;;AAgBA,MAAInF,OAAJ,EAAa;AACXiE,IAAAA,IAAI,CAACmB,UAAL,GAAkBtB,QAAlB;AACD,GAFD,MAEO;AACLG,IAAAA,IAAI,CAACnE,QAAL,GAAgBsE,IAAI,CAACC,SAAL,CAAevE,QAAf,CAAhB;AACD;;AAEDzB,EAAAA,KAAK,CACF0D,IADH,CACS,GAAE1C,MAAO,SADlB,EAC4B4E,IAD5B,EAEGtD,IAFH,CAES0E,QAAD,IAAc;AAClB1F,IAAAA,QAAQ,CAACR,eAAe,CAACkG,QAAQ,CAACzE,IAAT,CAAc0E,KAAf,CAAhB,CAAR;AACA3F,IAAAA,QAAQ,CAAC+B,SAAS,EAAV,CAAR;AACD,GALH,EAMGZ,KANH,CAMUK,GAAD,IAASA,GAAG,CAACH,QANtB;AAOD,CAlCM;AAoCP,OAAO,MAAMuE,aAAa,GAAG,YAAY;AACvC,QAAM9E,OAAO,GAAGnB,UAAU,EAA1B;AACA,QAAMkG,SAAS,GAAG,EAAlB;AACA,QAAMnH,KAAK,CAAC6C,GAAN,CAAU3B,aAAV,EAAyB;AAAEkB,IAAAA;AAAF,GAAzB,EACHE,IADG,CACG8E,GAAD,IAAS;AACb,UAAM;AAAC7E,MAAAA,IAAD;AAAOiE,MAAAA;AAAP,QAAiBY,GAAvB;AACA,QAAI7E,IAAI,IAAIiE,MAAM,KAAK,GAAvB,EAA4BW,SAAS,CAACE,IAAV,CAAe,GAAG9E,IAAI,CAACd,QAAvB;AAC7B,GAJG,EAKHgB,KALG,CAKIK,GAAD,IAASA,GAAG,CAACH,QALhB,CAAN;AAMA,SAAOwE,SAAP;AACD,CAVM;AAYP,OAAO,MAAMG,aAAa,GAAG,MAAM,MAAOhG,QAAP,IAAoB;AACrD,QAAMiG,MAAM,GAAGxB,IAAI,CAACyB,KAAL,CAAWlE,YAAY,CAACmE,OAAb,CAAqB,MAArB,CAAX,KAA4C,EAA3D;AACA,MAAIhG,QAAQ,GAAG,MAAMyF,aAAa,EAAlC;;AACA,MAAIK,MAAM,CAACG,MAAP,GAAgB,CAAhB,IAAqBjG,QAAQ,CAACiG,MAAT,KAAoB,CAA7C,EAAgD;AAC9CjG,IAAAA,QAAQ,GAAG8F,MAAX;AACD,GAFD,MAEO;AACLA,IAAAA,MAAM,CAACI,OAAP,CAAgB1F,EAAD,IAAQ;AACrB,YAAMF,eAAe,GAAGN,QAAQ,CAACO,IAAT,CAAekC,IAAD,IAAUA,IAAI,CAAC9C,OAAL,CAAaS,GAAb,KAAqBI,EAAE,CAACb,OAAH,CAAWS,GAAxD,CAAxB;;AACA,UAAIE,eAAJ,EAAqB;AACnBA,QAAAA,eAAe,CAACI,YAAhB,IAAgCF,EAAE,CAACE,YAAnC;AACD,OAFD,MAEO;AACLV,QAAAA,QAAQ,CAAC4F,IAAT,CACEpF,EADF;AAGD;AACF,KATD;AAUD;;AACD,QAAM2F,oBAAoB,GAAGnG,QAAQ,CAACS,GAAT,CAAcgC,IAAD,KAAW;AACnD9C,IAAAA,OAAO,EAAE8C,IAAI,CAAC9C,OAAL,CAAaS,GAD6B;AAEnDM,IAAAA,YAAY,EAAE+B,IAAI,CAAC/B;AAFgC,GAAX,CAAb,CAA7B;AAIA,QAAMC,OAAO,GAAGnB,UAAU,EAA1B;AACAjB,EAAAA,KAAK,CAACqC,GAAN,CAAUnB,aAAV,EAAyB;AAACO,IAAAA,QAAQ,EAAEmG;AAAX,GAAzB,EAA2D;AAAExF,IAAAA;AAAF,GAA3D,EACGE,IADH,CACSR,WAAD,IAAiB;AACrB,QAAIA,WAAW,CAAC0E,MAAZ,KAAuB,GAA3B,EAAgC;AAC9BlD,MAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACAjC,MAAAA,QAAQ,CAACd,gBAAgB,CAACsB,WAAW,CAACS,IAAb,CAAjB,CAAR;AACD;AACF,GANH,EAOGE,KAPH,CAOUC,KAAD,IAAWA,KAAK,CAACC,QAP1B;AAQD,CA9BM","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport { message } from 'antd'\nimport axios from 'axios'\nimport {\n  addCartToLS, decreaseQuantityLS, getCartLS, increaseQuantityLS, removeFromCartLS\n} from '../../utils/cartLS'\nimport {\n  setCart,\n  decreaseQuantityCreator,\n  addToCartCreator,\n  removeFromCartCreator,\n  clearCartCreator,\n  increaseQuantityCreator,\n  getBranches,\n  getShippingCostCreator,\n  getOrderCreator,\n  clearOrderCreator\n} from './actionCreator'\nimport { DOMAIN, getHeaders } from '../general'\n\nconst BASE_ENDPOINT = `${DOMAIN}/cart`\n\nexport const addToCart = (product, quantity) => (dispatch, getStore) => {\n  const { cart: { products }, auth: {isLogin} } = getStore()\n  const productId = product._id\n  let updatedCart = []\n  const itemInCartAndLS = products ? products.find((el) => el.product._id === productId) : null\n  if (itemInCartAndLS) {\n    updatedCart = products.map((el) => {\n      if (el.product._id === itemInCartAndLS.product._id) {\n        return {\n          ...el,\n          cartQuantity: el.cartQuantity + quantity\n        }\n      }\n      return el\n    })\n  } else {\n    updatedCart = [\n      ...products,\n      {\n        product: productId,\n        cartQuantity: quantity,\n      }\n    ]\n  }\n  if (isLogin) {\n    const headers = getHeaders()\n    axios.put(BASE_ENDPOINT, {products: updatedCart}, { headers })\n      .then((updatedCart) => {\n        dispatch(addToCartCreator(updatedCart.data));\n        message.success('Product has been added to cart')\n      })\n      .catch((error) => error.response)\n  } else {\n    addCartToLS(product, quantity)\n    dispatch(setCart({products: getCartLS()}))\n    message.success('Product has been added to cart')\n  }\n}\n\nexport const getCart = () => (dispatch, getStore) => {\n  const {auth: {isLogin} } = getStore()\n  if (isLogin) {\n    const headers = getHeaders()\n    axios.get(BASE_ENDPOINT, { headers })\n      .then((cart) => {\n        if (cart.data !== null) {\n          dispatch(setCart(cart.data))\n        }\n      })\n      .catch((err) => err.response)\n  } else {\n    dispatch(setCart({products: getCartLS()}))\n  }\n}\n\nexport const increaseQuantity = (product) => (dispatch, getStore) => {\n  const {auth: {isLogin} } = getStore()\n  if (isLogin) {\n    const headers = getHeaders()\n    axios.put(`${BASE_ENDPOINT}/${product._id}`, null, { headers })\n      .then((updatedCart) => {\n        dispatch(increaseQuantityCreator(updatedCart.data));\n      })\n      .catch((error) => error.response)\n  } else {\n    dispatch(increaseQuantityCreator({products: increaseQuantityLS(product._id)}))\n  }\n}\n\nexport const decreaseQuantity = (productID) => (dispatch, getStore) => {\n  const {auth: {isLogin} } = getStore()\n  if (isLogin) {\n    const headers = getHeaders()\n    axios.delete(`${BASE_ENDPOINT}/product/${productID}`, { headers })\n      .then((updatedCart) => {\n        dispatch(decreaseQuantityCreator(updatedCart.data))\n      })\n      .catch((error) => error.response)\n  } else {\n    dispatch(decreaseQuantityCreator({products: decreaseQuantityLS(productID)}))\n  }\n}\n\nexport const removeFromCart = (productID) => (dispatch, getStore) => {\n  const {auth: {isLogin} } = getStore()\n  if (isLogin) {\n    const headers = getHeaders()\n    axios.delete(`${BASE_ENDPOINT}/${productID}`, { headers })\n      .then((result) => {\n        dispatch(removeFromCartCreator(result.data))\n      })\n      .catch((error) => error.response)\n  } else {\n    dispatch(removeFromCartCreator({products: removeFromCartLS(productID)}))\n  }\n}\n\nexport const clearCart = () => (dispatch, getStore) => {\n  const {auth: {isLogin} } = getStore()\n  if (isLogin) {\n    const headers = getHeaders()\n    axios.delete(BASE_ENDPOINT, { headers })\n      .then(() => {\n        dispatch(clearCartCreator())\n      })\n      .catch((err) => err.response)\n  } else {\n    dispatch(clearCartCreator())\n    localStorage.removeItem('cart')\n  }\n}\n\nexport const getCity = (props) => (dispatch) => {\n  axios.post('https://api.novaposhta.ua/v2.0/json/', {\n    modelName: 'AddressGeneral',\n    calledMethod: 'getWarehouses',\n    methodProperties: {\n      Language: 'ru',\n      CityRef: props,\n    },\n    apiKey: '469ae707669208ac6f2d113fc7edbe13'\n  })\n    .then((data) => {\n      const dataBranches = data.data.data.map((item) => ({\n        branchName: item.DescriptionRu,\n        branchRef: item.Ref\n      }))\n      dispatch(getBranches(dataBranches))\n    })\n    .catch((error) => error.response)\n}\n\nexport const getShippingCost = (recipientCityRef) => (dispatch) => {\n  axios.post('https://api.novaposhta.ua/v2.0/json/', {\n    modelName: 'InternetDocument',\n    calledMethod: 'getDocumentPrice',\n    methodProperties: {\n      CitySender: '8d5a980d-391c-11dd-90d9-001a92567626',\n      CityRecipient: recipientCityRef.current.props.value,\n      Weight: '10',\n      ServiceType: 'DoorsDoors',\n      Cost: '100',\n      CargoType: 'Cargo',\n      SeatsAmount: '10',\n      PackCalculate: {\n        PackCount: '1',\n        PackRef: '1499fa4a-d26e-11e1-95e4-0026b97ed48a'\n      },\n      RedeliveryCalculate: {\n        CargoType: 'Money',\n        Amount: '100'\n      }\n    },\n    apiKey: '469ae707669208ac6f2d113fc7edbe13'\n  })\n    .then((data) => {\n      dispatch(getShippingCostCreator(data.data.data[0].Cost))\n    })\n    .catch((error) => error.response)\n}\n\nexport const PlaceOrder = (\n  products, isLogin, values, customer, shippingCost, valuePaymentInfo,\n) => (dispatch) => {\n  dispatch(clearOrderCreator())\n  // eslint-disable-next-line prefer-const\n  let body = {\n    canceled: false,\n    deliveryAddress: JSON.stringify({\n      country: values.country,\n      city: values.recipientCity,\n      branch: values.recipientBranch,\n    }),\n    shipping: JSON.stringify(shippingCost),\n    paymentInfo: JSON.stringify(valuePaymentInfo),\n    status: 'not shipped',\n    email: values.email,\n    mobile: values.phoneNumber,\n    firstName: values.firstName,\n    letterSubject: `${values.firstName}, thank you for order!`,\n    letterHtml: '<h1>Your order is placed. Our manager will contact you soon.</h1>'\n  }\n  if (isLogin) {\n    body.customerId = customer\n  } else {\n    body.products = JSON.stringify(products)\n  }\n  \n  axios\n    .post(`${DOMAIN}/orders`, body)\n    .then((newOrder) => {\n      dispatch(getOrderCreator(newOrder.data.order))\n      dispatch(clearCart())\n    })\n    .catch((err) => err.response)\n}\n\nexport const getCartServer = async () => {\n  const headers = getHeaders()\n  const cartState = []\n  await axios.get(BASE_ENDPOINT, { headers })\n    .then((res) => {\n      const {data, status} = res\n      if (data && status === 200) cartState.push(...data.products)\n    })\n    .catch((err) => err.response)\n  return cartState\n}\n\nexport const addLSToServer = () => async (dispatch) => {\n  const cartLS = JSON.parse(localStorage.getItem('cart')) || []\n  let products = await getCartServer()\n  if (cartLS.length > 0 && products.length === 0) {\n    products = cartLS\n  } else {\n    cartLS.forEach((el) => {\n      const itemInCartAndLS = products.find((item) => item.product._id === el.product._id)\n      if (itemInCartAndLS) {\n        itemInCartAndLS.cartQuantity += el.cartQuantity\n      } else {\n        products.push(\n          el\n        )\n      }\n    })\n  }\n  const updatedCartForServer = products.map((item) => ({\n    product: item.product._id,\n    cartQuantity: item.cartQuantity\n  }))\n  const headers = getHeaders()\n  axios.put(BASE_ENDPOINT, {products: updatedCartForServer}, { headers })\n    .then((updatedCart) => {\n      if (updatedCart.status === 200) {\n        localStorage.removeItem('cart')\n        dispatch(addToCartCreator(updatedCart.data));\n      }\n    })\n    .catch((error) => error.response)\n}"]},"metadata":{},"sourceType":"module"}