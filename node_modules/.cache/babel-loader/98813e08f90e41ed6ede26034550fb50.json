{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/PrivateRoute/PrivateRoute.jsx\";\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { selectIsLogin } from '../../store/auth/reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => ({\n  isLogin: selectIsLogin(state)\n});\n\nconst PrivateRoute = connect(mapStateToProps, null)(({\n  isLogin,\n  children,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(Route, { ...props,\n  children: isLogin ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/signin\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 27\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this));\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/PrivateRoute/PrivateRoute.jsx"],"names":["React","connect","Route","Redirect","selectIsLogin","mapStateToProps","state","isLogin","PrivateRoute","children","props"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAACC,EAAAA,OAAO,EAAEH,aAAa,CAACE,KAAD;AAAvB,CAAZ,CAAxB;;AAEA,MAAME,YAAY,GAAGP,OAAO,CAACI,eAAD,EAAkB,IAAlB,CAAP,CAA+B,CAAC;AAAEE,EAAAA,OAAF;AAAWE,EAAAA,QAAX;AAAqB,KAAGC;AAAxB,CAAD,kBAClD,QAAC,KAAD,OAAWA,KAAX;AAAA,YACGH,OAAO,GAAGE,QAAH,gBAAc,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADxB;AAAA;AAAA;AAAA;AAAA,QADmB,CAArB;AAKA,eAAeD,YAAf","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\nimport { selectIsLogin } from '../../store/auth/reducer'\n\nconst mapStateToProps = (state) => ({isLogin: selectIsLogin(state)})\n\nconst PrivateRoute = connect(mapStateToProps, null)(({ isLogin, children, ...props }) => (\n  <Route {...props}>\n    {isLogin ? children : <Redirect to=\"/signin\" />}\n  </Route>\n))\nexport default PrivateRoute"]},"metadata":{},"sourceType":"module"}