{"ast":null,"code":"/* eslint-disable no-underscore-dangle */\nimport { message } from 'antd';\nimport axios from 'axios';\nimport { addCartToLS, decreaseQuantityLS, getCartLS, increaseQuantityLS, removeFromCartLS } from '../../utils/cartLS';\nimport { DOMAIN, getHeaders } from '../../utils/constants';\nimport { setCart, decreaseQuantityCreator, addToCartCreator, removeFromCartCreator, clearCartCreator, increaseQuantityCreator, getBranches, getShippingCostCreator, getOrderCreator, clearOrderCreator, startLoading, stopLoading } from './actionCreator';\nconst BASE_ENDPOINT = `${DOMAIN}/cart`;\nexport const addToCart = (product, quantity) => (dispatch, getStore) => {\n  const {\n    cart: {\n      products\n    },\n    auth: {\n      isLogin\n    }\n  } = getStore();\n  const productId = product._id;\n  const updatedCart = [];\n  let showMessage = true;\n  const itemInCartAndLS = products.find(el => el.product._id === productId);\n\n  if (itemInCartAndLS) {\n    const checked = products.map(el => {\n      if (el.product._id === itemInCartAndLS.product._id) {\n        if (el.cartQuantity + quantity > el.product.quantity) {\n          message.warning('The quantity has been automatically adjusted to the stock quantity');\n          showMessage = false;\n          return { ...el,\n            cartQuantity: el.product.quantity\n          }; // return el\n          // можно же просто вернуть el ? или тут какой-то особый смысл ?)\n        }\n\n        return { ...el,\n          cartQuantity: el.cartQuantity + quantity\n        };\n      }\n\n      return el;\n    });\n    updatedCart.push(...checked);\n  } else {\n    updatedCart.push(...products, {\n      product: productId,\n      cartQuantity: quantity\n    });\n  }\n\n  if (isLogin) {\n    const headers = getHeaders();\n    axios.put(BASE_ENDPOINT, {\n      products: updatedCart\n    }, {\n      headers\n    }).then(updatedCart => {\n      dispatch(addToCartCreator(updatedCart.data));\n      if (showMessage) message.success('Product has been added to cart');\n    }).catch(error => error.response);\n  } else {\n    addCartToLS(product, quantity);\n    dispatch(setCart({\n      products: getCartLS()\n    }));\n    if (showMessage) message.success('Product has been added to cart');\n  }\n};\nexport const getCart = () => (dispatch, getStore) => {\n  const {\n    auth: {\n      isLogin\n    }\n  } = getStore();\n\n  if (isLogin) {\n    const headers = getHeaders();\n    axios.get(BASE_ENDPOINT, {\n      headers\n    }).then(cart => {\n      if (cart.data !== null) {\n        dispatch(setCart(cart.data));\n      }\n    }).catch(err => err.response);\n  } else {\n    dispatch(setCart({\n      products: getCartLS()\n    }));\n  }\n};\nexport const increaseQuantity = product => (dispatch, getStore) => {\n  const {\n    auth: {\n      isLogin\n    }\n  } = getStore();\n\n  if (isLogin) {\n    const headers = getHeaders();\n    axios.put(`${BASE_ENDPOINT}/${product._id}`, null, {\n      headers\n    }).then(updatedCart => {\n      dispatch(increaseQuantityCreator(updatedCart.data));\n    }).catch(error => error.response);\n  } else {\n    dispatch(increaseQuantityCreator({\n      products: increaseQuantityLS(product._id)\n    }));\n  }\n};\nexport const decreaseQuantity = productID => (dispatch, getStore) => {\n  const {\n    auth: {\n      isLogin\n    }\n  } = getStore();\n\n  if (isLogin) {\n    const headers = getHeaders();\n    axios.delete(`${BASE_ENDPOINT}/product/${productID}`, {\n      headers\n    }).then(updatedCart => {\n      dispatch(decreaseQuantityCreator(updatedCart.data));\n    }).catch(error => error.response);\n  } else {\n    dispatch(decreaseQuantityCreator({\n      products: decreaseQuantityLS(productID)\n    }));\n  }\n};\nexport const removeFromCart = productID => (dispatch, getStore) => {\n  const {\n    auth: {\n      isLogin\n    }\n  } = getStore();\n\n  if (isLogin) {\n    const headers = getHeaders();\n    axios.delete(`${BASE_ENDPOINT}/${productID}`, {\n      headers\n    }).then(result => {\n      dispatch(removeFromCartCreator(result.data));\n    }).catch(error => error.response);\n  } else {\n    dispatch(removeFromCartCreator({\n      products: removeFromCartLS(productID)\n    }));\n  }\n};\nexport const clearCart = () => (dispatch, getStore) => {\n  const {\n    auth: {\n      isLogin\n    }\n  } = getStore();\n\n  if (isLogin) {\n    const headers = getHeaders();\n    axios.delete(BASE_ENDPOINT, {\n      headers\n    }).then(() => {\n      dispatch(clearCartCreator());\n    }).catch(err => err.response);\n  } else {\n    dispatch(clearCartCreator());\n    localStorage.removeItem('cart');\n  }\n};\nexport const getCity = props => dispatch => {\n  axios.post('https://api.novaposhta.ua/v2.0/json/', {\n    modelName: 'AddressGeneral',\n    calledMethod: 'getWarehouses',\n    methodProperties: {\n      Language: 'ru',\n      CityRef: props\n    },\n    apiKey: '469ae707669208ac6f2d113fc7edbe13'\n  }).then(data => {\n    const dataBranches = data.data.data.map(item => ({\n      branchName: item.DescriptionRu,\n      branchRef: item.Ref\n    }));\n    dispatch(getBranches(dataBranches));\n  }).catch(error => error.response);\n};\nexport const getShippingCost = recipientCityRef => dispatch => {\n  axios.post('https://api.novaposhta.ua/v2.0/json/', {\n    modelName: 'InternetDocument',\n    calledMethod: 'getDocumentPrice',\n    methodProperties: {\n      CitySender: '8d5a980d-391c-11dd-90d9-001a92567626',\n      CityRecipient: recipientCityRef.current.props.value,\n      Weight: '10',\n      ServiceType: 'DoorsDoors',\n      Cost: '100',\n      CargoType: 'Cargo',\n      SeatsAmount: '10',\n      PackCalculate: {\n        PackCount: '1',\n        PackRef: '1499fa4a-d26e-11e1-95e4-0026b97ed48a'\n      },\n      RedeliveryCalculate: {\n        CargoType: 'Money',\n        Amount: '100'\n      }\n    },\n    apiKey: '469ae707669208ac6f2d113fc7edbe13'\n  }).then(data => {\n    dispatch(getShippingCostCreator(data.data.data[0].Cost));\n  }).catch(error => error.response);\n};\nexport const PlaceOrder = (products, values, customer, shippingCost, valuePaymentInfo) => (dispatch, getStore) => {\n  const {\n    auth: {\n      isLogin\n    }\n  } = getStore();\n  dispatch(startLoading());\n  dispatch(clearOrderCreator());\n  const body = {\n    canceled: false,\n    deliveryAddress: JSON.stringify({\n      country: values.country,\n      city: values.recipientCity,\n      branch: values.recipientBranch\n    }),\n    shipping: JSON.stringify(shippingCost),\n    paymentInfo: JSON.stringify(valuePaymentInfo),\n    status: 'not shipped',\n    email: values.email,\n    mobile: values.phoneNumber,\n    firstName: values.firstName,\n    letterSubject: `${values.firstName}, thank you for order!`,\n    letterHtml: '<h1>Your order is placed. Our manager will contact you soon.</h1>'\n  };\n\n  if (isLogin) {\n    body.customerId = customer;\n  } else {\n    body.products = JSON.stringify(products);\n  }\n\n  axios.post(`${DOMAIN}/orders`, body).then(newOrder => {\n    dispatch(getOrderCreator(newOrder.data.order));\n    dispatch(clearCart());\n  }).catch(err => err.response).finally(() => {\n    dispatch(stopLoading());\n  });\n};\nexport const getCartServer = async () => {\n  const headers = getHeaders();\n  const cartState = [];\n  await axios.get(BASE_ENDPOINT, {\n    headers\n  }).then(res => {\n    const {\n      data,\n      status\n    } = res;\n    if (data && status === 200) cartState.push(...data.products);\n  }).catch(err => err.response);\n  return cartState;\n};\nexport const addLSToServer = () => async dispatch => {\n  const cartLS = JSON.parse(localStorage.getItem('cart')) || [];\n  let products = await getCartServer();\n\n  if (cartLS.length > 0 && products.length === 0) {\n    products = cartLS;\n  } else {\n    cartLS.forEach(el => {\n      const itemInCartAndLS = products.find(item => item.product._id === el.product._id);\n\n      if (itemInCartAndLS) {\n        itemInCartAndLS.cartQuantity += el.cartQuantity;\n      } else {\n        products.push(el);\n      }\n    });\n  }\n\n  const updatedCartForServer = products.map(item => ({\n    product: item.product._id,\n    cartQuantity: item.cartQuantity\n  }));\n  const headers = getHeaders();\n  axios.put(BASE_ENDPOINT, {\n    products: updatedCartForServer\n  }, {\n    headers\n  }).then(updatedCart => {\n    if (updatedCart.status === 200) {\n      localStorage.removeItem('cart');\n      dispatch(addToCartCreator(updatedCart.data));\n    }\n  }).catch(error => error.response);\n};","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/store/cart/middleware.js"],"names":["message","axios","addCartToLS","decreaseQuantityLS","getCartLS","increaseQuantityLS","removeFromCartLS","DOMAIN","getHeaders","setCart","decreaseQuantityCreator","addToCartCreator","removeFromCartCreator","clearCartCreator","increaseQuantityCreator","getBranches","getShippingCostCreator","getOrderCreator","clearOrderCreator","startLoading","stopLoading","BASE_ENDPOINT","addToCart","product","quantity","dispatch","getStore","cart","products","auth","isLogin","productId","_id","updatedCart","showMessage","itemInCartAndLS","find","el","checked","map","cartQuantity","warning","push","headers","put","then","data","success","catch","error","response","getCart","get","err","increaseQuantity","decreaseQuantity","productID","delete","removeFromCart","result","clearCart","localStorage","removeItem","getCity","props","post","modelName","calledMethod","methodProperties","Language","CityRef","apiKey","dataBranches","item","branchName","DescriptionRu","branchRef","Ref","getShippingCost","recipientCityRef","CitySender","CityRecipient","current","value","Weight","ServiceType","Cost","CargoType","SeatsAmount","PackCalculate","PackCount","PackRef","RedeliveryCalculate","Amount","PlaceOrder","values","customer","shippingCost","valuePaymentInfo","body","canceled","deliveryAddress","JSON","stringify","country","city","recipientCity","branch","recipientBranch","shipping","paymentInfo","status","email","mobile","phoneNumber","firstName","letterSubject","letterHtml","customerId","newOrder","order","finally","getCartServer","cartState","res","addLSToServer","cartLS","parse","getItem","length","forEach","updatedCartForServer"],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport { message } from 'antd'\nimport axios from 'axios'\nimport {\n  addCartToLS, decreaseQuantityLS, getCartLS, increaseQuantityLS, removeFromCartLS\n} from '../../utils/cartLS'\nimport { DOMAIN, getHeaders } from '../../utils/constants'\nimport {\n  setCart,\n  decreaseQuantityCreator,\n  addToCartCreator,\n  removeFromCartCreator,\n  clearCartCreator,\n  increaseQuantityCreator,\n  getBranches,\n  getShippingCostCreator,\n  getOrderCreator,\n  clearOrderCreator,\n  startLoading,\n  stopLoading,\n} from './actionCreator'\n\nconst BASE_ENDPOINT = `${DOMAIN}/cart`\n\nexport const addToCart = (product, quantity) => (dispatch, getStore) => {\n  const { cart: { products }, auth: {isLogin} } = getStore()\n  const productId = product._id\n  const updatedCart = []\n  let showMessage = true\n\n  const itemInCartAndLS = products.find((el) => el.product._id === productId)\n  if (itemInCartAndLS) {\n    const checked = products.map((el) => {\n      if (el.product._id === itemInCartAndLS.product._id) {\n        if (el.cartQuantity + quantity > el.product.quantity) {\n          message.warning('The quantity has been automatically adjusted to the stock quantity')\n          showMessage = false\n          return {\n            ...el,\n            cartQuantity: el.product.quantity\n          }\n          // return el\n          // можно же просто вернуть el ? или тут какой-то особый смысл ?)\n        }\n        return {\n          ...el,\n          cartQuantity: el.cartQuantity + quantity\n        }\n      }\n      return el\n    })\n    updatedCart.push(...checked)\n  } else {\n    updatedCart.push(\n      ...products,\n      {\n        product: productId,\n        cartQuantity: quantity,\n      }\n    )\n  }\n  if (isLogin) {\n    const headers = getHeaders()\n    axios.put(BASE_ENDPOINT, {products: updatedCart}, { headers })\n      .then((updatedCart) => {\n        dispatch(addToCartCreator(updatedCart.data));\n        if (showMessage) message.success('Product has been added to cart')\n      })\n      .catch((error) => error.response)\n  } else {\n    addCartToLS(product, quantity)\n    dispatch(setCart({products: getCartLS()}))\n    if (showMessage) message.success('Product has been added to cart')\n  }\n}\n\nexport const getCart = () => (dispatch, getStore) => {\n  const {auth: {isLogin} } = getStore()\n  if (isLogin) {\n    const headers = getHeaders()\n    axios.get(BASE_ENDPOINT, { headers })\n      .then((cart) => {\n        if (cart.data !== null) {\n          dispatch(setCart(cart.data))\n        }\n      })\n      .catch((err) => err.response)\n  } else {\n    dispatch(setCart({products: getCartLS()}))\n  }\n}\n\nexport const increaseQuantity = (product) => (dispatch, getStore) => {\n  const {auth: {isLogin} } = getStore()\n  if (isLogin) {\n    const headers = getHeaders()\n    axios.put(`${BASE_ENDPOINT}/${product._id}`, null, { headers })\n      .then((updatedCart) => {\n        dispatch(increaseQuantityCreator(updatedCart.data));\n      })\n      .catch((error) => error.response)\n  } else {\n    dispatch(increaseQuantityCreator({products: increaseQuantityLS(product._id)}))\n  }\n}\n\nexport const decreaseQuantity = (productID) => (dispatch, getStore) => {\n  const {auth: {isLogin} } = getStore()\n  if (isLogin) {\n    const headers = getHeaders()\n    axios.delete(`${BASE_ENDPOINT}/product/${productID}`, { headers })\n      .then((updatedCart) => {\n        dispatch(decreaseQuantityCreator(updatedCart.data))\n      })\n      .catch((error) => error.response)\n  } else {\n    dispatch(decreaseQuantityCreator({products: decreaseQuantityLS(productID)}))\n  }\n}\n\nexport const removeFromCart = (productID) => (dispatch, getStore) => {\n  const {auth: {isLogin} } = getStore()\n  if (isLogin) {\n    const headers = getHeaders()\n    axios.delete(`${BASE_ENDPOINT}/${productID}`, { headers })\n      .then((result) => {\n        dispatch(removeFromCartCreator(result.data))\n      })\n      .catch((error) => error.response)\n  } else {\n    dispatch(removeFromCartCreator({products: removeFromCartLS(productID)}))\n  }\n}\n\nexport const clearCart = () => (dispatch, getStore) => {\n  const {auth: {isLogin} } = getStore()\n  if (isLogin) {\n    const headers = getHeaders()\n    axios.delete(BASE_ENDPOINT, { headers })\n      .then(() => {\n        dispatch(clearCartCreator())\n      })\n      .catch((err) => err.response)\n  } else {\n    dispatch(clearCartCreator())\n    localStorage.removeItem('cart')\n  }\n}\n\nexport const getCity = (props) => (dispatch) => {\n  axios.post('https://api.novaposhta.ua/v2.0/json/', {\n    modelName: 'AddressGeneral',\n    calledMethod: 'getWarehouses',\n    methodProperties: {\n      Language: 'ru',\n      CityRef: props,\n    },\n    apiKey: '469ae707669208ac6f2d113fc7edbe13'\n  })\n    .then((data) => {\n      const dataBranches = data.data.data.map((item) => ({\n        branchName: item.DescriptionRu,\n        branchRef: item.Ref\n      }))\n      dispatch(getBranches(dataBranches))\n    })\n    .catch((error) => error.response)\n}\n\nexport const getShippingCost = (recipientCityRef) => (dispatch) => {\n  axios.post('https://api.novaposhta.ua/v2.0/json/', {\n    modelName: 'InternetDocument',\n    calledMethod: 'getDocumentPrice',\n    methodProperties: {\n      CitySender: '8d5a980d-391c-11dd-90d9-001a92567626',\n      CityRecipient: recipientCityRef.current.props.value,\n      Weight: '10',\n      ServiceType: 'DoorsDoors',\n      Cost: '100',\n      CargoType: 'Cargo',\n      SeatsAmount: '10',\n      PackCalculate: {\n        PackCount: '1',\n        PackRef: '1499fa4a-d26e-11e1-95e4-0026b97ed48a'\n      },\n      RedeliveryCalculate: {\n        CargoType: 'Money',\n        Amount: '100'\n      }\n    },\n    apiKey: '469ae707669208ac6f2d113fc7edbe13'\n  })\n    .then((data) => {\n      dispatch(getShippingCostCreator(data.data.data[0].Cost))\n    })\n    .catch((error) => error.response)\n}\n\nexport const PlaceOrder = (\n  products, values, customer, shippingCost, valuePaymentInfo\n) => (dispatch, getStore) => {\n  const {auth: {isLogin} } = getStore()\n  dispatch(startLoading())\n  dispatch(clearOrderCreator())\n  const body = {\n    canceled: false,\n    deliveryAddress: JSON.stringify({\n      country: values.country,\n      city: values.recipientCity,\n      branch: values.recipientBranch,\n    }),\n    shipping: JSON.stringify(shippingCost),\n    paymentInfo: JSON.stringify(valuePaymentInfo),\n    status: 'not shipped',\n    email: values.email,\n    mobile: values.phoneNumber,\n    firstName: values.firstName,\n    letterSubject: `${values.firstName}, thank you for order!`,\n    letterHtml: '<h1>Your order is placed. Our manager will contact you soon.</h1>'\n  }\n  if (isLogin) {\n    body.customerId = customer\n  } else {\n    body.products = JSON.stringify(products)\n  }\n  \n  axios\n    .post(`${DOMAIN}/orders`, body)\n    .then((newOrder) => {\n      dispatch(getOrderCreator(newOrder.data.order))\n      dispatch(clearCart())\n    })\n    .catch((err) => err.response)\n    .finally(() => {\n      dispatch(stopLoading())\n    })\n}\n\nexport const getCartServer = async () => {\n  const headers = getHeaders()\n  const cartState = []\n  await axios.get(BASE_ENDPOINT, { headers })\n    .then((res) => {\n      const {data, status} = res\n      if (data && status === 200) cartState.push(...data.products)\n    })\n    .catch((err) => err.response)\n  return cartState\n}\n\nexport const addLSToServer = () => async (dispatch) => {\n  const cartLS = JSON.parse(localStorage.getItem('cart')) || []\n  let products = await getCartServer()\n  if (cartLS.length > 0 && products.length === 0) {\n    products = cartLS\n  } else {\n    cartLS.forEach((el) => {\n      const itemInCartAndLS = products.find((item) => item.product._id === el.product._id)\n      if (itemInCartAndLS) {\n        itemInCartAndLS.cartQuantity += el.cartQuantity\n      } else {\n        products.push(\n          el\n        )\n      }\n    })\n  }\n  const updatedCartForServer = products.map((item) => ({\n    product: item.product._id,\n    cartQuantity: item.cartQuantity\n  }))\n  const headers = getHeaders()\n  axios.put(BASE_ENDPOINT, {products: updatedCartForServer}, { headers })\n    .then((updatedCart) => {\n      if (updatedCart.status === 200) {\n        localStorage.removeItem('cart')\n        dispatch(addToCartCreator(updatedCart.data));\n      }\n    })\n    .catch((error) => error.response)\n}"]},"metadata":{},"sourceType":"module"}