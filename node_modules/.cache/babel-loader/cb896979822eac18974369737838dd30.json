{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/OrderPage/OrderInfo/OrderInfo.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Alert, Spin } from 'antd';\nimport StyledOrderInfo from './StyledOrderInfo';\nimport { selectCities, selectOrder } from '../../../store/cart/reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => ({\n  order: selectOrder(state),\n  cities: selectCities(state)\n});\n\nconst OrderInfo = connect(mapStateToProps, null)(({\n  order,\n  cities\n}) => {\n  const date = order.date ? new Date(order.date).toLocaleDateString() : null;\n\n  const cityName = cityRefForShipping => {\n    const cityCustomer = cities.find(item => item.Ref === cityRefForShipping);\n    return cityCustomer.CityName;\n  };\n\n  const showOrderInfo = newOrder => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"italic\",\n        children: newOrder.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), \", your order has been completed.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Thank you for your purchase.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your orderNo is:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: newOrder.orderNo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Order total:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [newOrder.totalSum, \"\\u20B4\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Delivery city:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: cityName(newOrder.deliveryAddress.city)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Delivery branch:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: newOrder.deliveryAddress.branch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Payment method:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: newOrder.paymentInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Our manager will contact you soon.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(StyledOrderInfo, {\n    children: Object.keys(order).length > 0 ? showOrderInfo(order) : /*#__PURE__*/_jsxDEV(Spin, {\n      tip: \"Loading...\",\n      size: \"large\",\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        message: \"Please wait...\",\n        description: \"Order information will appear on screen soon\",\n        type: \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n});\nexport default OrderInfo;\nOrderInfo.propTypes = {\n  order: PropTypes.shape({\n    orderNo: PropTypes.number,\n    totalSum: PropTypes.number,\n    paymentInfo: PropTypes.string,\n    date: PropTypes.string\n  })\n};","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/OrderPage/OrderInfo/OrderInfo.jsx"],"names":["React","PropTypes","connect","Alert","Spin","StyledOrderInfo","selectCities","selectOrder","mapStateToProps","state","order","cities","OrderInfo","date","Date","toLocaleDateString","cityName","cityRefForShipping","cityCustomer","find","item","Ref","CityName","showOrderInfo","newOrder","firstName","orderNo","totalSum","deliveryAddress","city","branch","paymentInfo","Object","keys","length","propTypes","shape","number","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Alert, Spin } from 'antd';\nimport StyledOrderInfo from './StyledOrderInfo';\nimport { selectCities, selectOrder } from '../../../store/cart/reducer';\n\nconst mapStateToProps = (state) => ({\n  order: selectOrder(state),\n  cities: selectCities(state),\n})\n\nconst OrderInfo = connect(mapStateToProps, null)(({order, cities}) => {\n  const date = order.date ? new Date(order.date).toLocaleDateString() : null\n\n  const cityName = (cityRefForShipping) => {\n    const cityCustomer = cities.find((item) => item.Ref === cityRefForShipping)\n    return cityCustomer.CityName\n  }\n\n  const showOrderInfo = (newOrder) => (\n    <div>\n      <h2>\n        <span className=\"italic\">\n          {newOrder.firstName}\n        </span>\n        , your order has been completed.\n      </h2>\n      <h2>Thank you for your purchase.</h2>\n      <p>\n        Your orderNo is:\n        <span>\n          {newOrder.orderNo}\n        </span>\n      </p>\n      <p>\n        Order total:\n        <span>\n          {newOrder.totalSum}\n          â‚´\n        </span>\n      </p>\n      <p>\n        Delivery city:\n        <span>\n          {cityName(newOrder.deliveryAddress.city)}\n        </span>\n      </p>\n      <p>\n        Delivery branch:\n        <span>\n          {newOrder.deliveryAddress.branch}\n        </span>\n      </p>\n      <p>\n        Payment method:\n        <span>\n          {newOrder.paymentInfo}\n        </span>\n      </p>\n      <p>\n        Date:\n        <span>\n          {date}\n        </span>\n      </p>\n      <h2>\n        Our manager will contact you soon.\n      </h2>\n    </div>\n  )\n\n  return (\n    <StyledOrderInfo>\n      {Object.keys(order).length > 0\n        ? showOrderInfo(order)\n        : (\n          <Spin tip=\"Loading...\" size=\"large\">\n            <Alert\n              message=\"Please wait...\"\n              description=\"Order information will appear on screen soon\"\n              type=\"info\"\n            />\n          </Spin>\n        )}\n    </StyledOrderInfo>\n  )\n})\nexport default OrderInfo\n\nOrderInfo.propTypes = {\n  order: PropTypes.shape({\n    orderNo: PropTypes.number,\n    totalSum: PropTypes.number,\n    paymentInfo: PropTypes.string,\n    date: PropTypes.string,\n  }),\n}"]},"metadata":{},"sourceType":"module"}