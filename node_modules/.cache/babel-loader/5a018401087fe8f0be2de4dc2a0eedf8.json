{"ast":null,"code":"import axios from 'axios';\nimport { createSubscribe, createSubscribeSuccess, createSubscribeError } from './actionCreator';\nimport { DOMAIN, getHeaders } from '../general';\nconst BASE_ENDPOINT = `${DOMAIN}/subscribers`;\n\nconst createNewSubscribe = newSubscriber => async dispatch => {\n  const headers = getHeaders();\n  dispatch(createSubscribe());\n  axios.post(BASE_ENDPOINT, newSubscriber, {\n    headers\n  }).then(response => {\n    dispatch(createSubscribeSuccess(response.data));\n  }).catch(err => {\n    dispatch(createSubscribeError(err.response));\n  });\n};\n\nexport default createNewSubscribe;","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/store/createSubscribe/middleware.js"],"names":["axios","createSubscribe","createSubscribeSuccess","createSubscribeError","DOMAIN","getHeaders","BASE_ENDPOINT","createNewSubscribe","newSubscriber","dispatch","headers","post","then","response","data","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,sBAA1B,EAAkDC,oBAAlD,QAA8E,iBAA9E;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,YAAnC;AAEA,MAAMC,aAAa,GAAI,GAAEF,MAAO,cAAhC;;AAEA,MAAMG,kBAAkB,GAAIC,aAAD,IAAmB,MAAOC,QAAP,IAAoB;AAChE,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AACAI,EAAAA,QAAQ,CAACR,eAAe,EAAhB,CAAR;AAEAD,EAAAA,KAAK,CAACW,IAAN,CAAWL,aAAX,EAA0BE,aAA1B,EAAyC;AAAEE,IAAAA;AAAF,GAAzC,EACGE,IADH,CACSC,QAAD,IAAc;AAClBJ,IAAAA,QAAQ,CAACP,sBAAsB,CAACW,QAAQ,CAACC,IAAV,CAAvB,CAAR;AACD,GAHH,EAIGC,KAJH,CAIUC,GAAD,IAAS;AACdP,IAAAA,QAAQ,CAACN,oBAAoB,CAACa,GAAG,CAACH,QAAL,CAArB,CAAR;AACD,GANH;AAOD,CAXD;;AAYA,eAAeN,kBAAf","sourcesContent":["import axios from 'axios'\nimport { createSubscribe, createSubscribeSuccess, createSubscribeError } from './actionCreator'\nimport { DOMAIN, getHeaders } from '../general'\n\nconst BASE_ENDPOINT = `${DOMAIN}/subscribers`\n\nconst createNewSubscribe = (newSubscriber) => async (dispatch) => {\n  const headers = getHeaders()\n  dispatch(createSubscribe())\n\n  axios.post(BASE_ENDPOINT, newSubscriber, { headers })\n    .then((response) => {\n      dispatch(createSubscribeSuccess(response.data))\n    })\n    .catch((err) => {\n      dispatch(createSubscribeError(err.response))\n    })\n}\nexport default createNewSubscribe"]},"metadata":{},"sourceType":"module"}