{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/ProductSubscribeModal/ProductSubscribeModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Form, Input, message } from 'antd';\nimport { hideSubscribeModal } from '../../store/subscriceOnProductModal/middleware';\nimport { selectIsOpenModal } from '../../store/subscriceOnProductModal/reducer';\nimport { selectCustomerInfo } from '../../store/customer/reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => ({\n  isOpen: selectIsOpenModal(state),\n  customerInfo: selectCustomerInfo(state)\n});\n\nconst ProductSubscribeModal = connect(mapStateToProps, {\n  hideSubscribeModal\n})(_s(({\n  isOpen,\n  hideSubscribeModal,\n  customerInfo\n}) => {\n  _s();\n\n  const [form] = Form.useForm();\n\n  const onSubmit = () => {\n    form.resetFields();\n    hideSubscribeModal();\n    message.success('Thank you, you will be notified when this item is in stock!');\n  };\n\n  const onCancel = () => {\n    form.resetFields();\n    hideSubscribeModal();\n  };\n\n  const fields = [{\n    name: 'email',\n    value: customerInfo.email\n  }];\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"Notify on product availability\",\n    visible: isOpen,\n    okText: \"Subscribe\",\n    onCancel: onCancel,\n    okButtonProps: {\n      htmlType: 'submit',\n      form: 'subscribeOnProductsForm',\n      shape: 'round'\n    },\n    cancelButtonProps: {\n      shape: 'round'\n    },\n    destroyOnClose: true,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      name: \"subscribeOnProductsForm\",\n      onFinish: onSubmit,\n      form: form,\n      fields: fields,\n      children: /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Email\",\n        name: \"email\",\n        rules: [{\n          required: true,\n          message: 'Please input your email.'\n        }, {\n          type: 'email',\n          message: 'Entered data is not an email.'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n}));\nexport default ProductSubscribeModal;","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/ProductSubscribeModal/ProductSubscribeModal.jsx"],"names":["React","connect","Modal","Form","Input","message","hideSubscribeModal","selectIsOpenModal","selectCustomerInfo","mapStateToProps","state","isOpen","customerInfo","ProductSubscribeModal","form","useForm","onSubmit","resetFields","success","onCancel","fields","name","value","email","htmlType","shape","required","type"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,KADF,EAEEC,IAFF,EAGEC,KAHF,EAIEC,OAJF,QAKO,MALP;AAMA,SAASC,kBAAT,QAAmC,gDAAnC;AACA,SAASC,iBAAT,QAAkC,6CAAlC;AACA,SAASC,kBAAT,QAAmC,8BAAnC;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,MAAM,EAAEJ,iBAAiB,CAACG,KAAD,CADS;AAElCE,EAAAA,YAAY,EAAEJ,kBAAkB,CAACE,KAAD;AAFE,CAAZ,CAAxB;;AAKA,MAAMG,qBAAqB,GAAGZ,OAAO,CAACQ,eAAD,EAAkB;AAAEH,EAAAA;AAAF,CAAlB,CAAP,IAAiD,CAC7E;AACEK,EAAAA,MADF;AAEEL,EAAAA,kBAFF;AAGEM,EAAAA;AAHF,CAD6E,KAM1E;AAAA;;AACH,QAAM,CAACE,IAAD,IAASX,IAAI,CAACY,OAAL,EAAf;;AAEA,QAAMC,QAAQ,GAAG,MAAM;AACrBF,IAAAA,IAAI,CAACG,WAAL;AACAX,IAAAA,kBAAkB;AAClBD,IAAAA,OAAO,CAACa,OAAR,CAAgB,6DAAhB;AACD,GAJD;;AAKA,QAAMC,QAAQ,GAAG,MAAM;AACrBL,IAAAA,IAAI,CAACG,WAAL;AACAX,IAAAA,kBAAkB;AACnB,GAHD;;AAIA,QAAMc,MAAM,GAAG,CACb;AACEC,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,KAAK,EAAEV,YAAY,CAACW;AAFtB,GADa,CAAf;AAOA,sBACE,QAAC,KAAD;AACE,IAAA,KAAK,EAAC,gCADR;AAEE,IAAA,OAAO,EAAEZ,MAFX;AAGE,IAAA,MAAM,EAAC,WAHT;AAIE,IAAA,QAAQ,EAAEQ,QAJZ;AAKE,IAAA,aAAa,EAAE;AAACK,MAAAA,QAAQ,EAAE,QAAX;AAAqBV,MAAAA,IAAI,EAAE,yBAA3B;AAAsDW,MAAAA,KAAK,EAAE;AAA7D,KALjB;AAME,IAAA,iBAAiB,EAAE;AAACA,MAAAA,KAAK,EAAE;AAAR,KANrB;AAOE,IAAA,cAAc,MAPhB;AAAA,2BASE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,yBAAX;AAAqC,MAAA,QAAQ,EAAET,QAA/C;AAAyD,MAAA,IAAI,EAAEF,IAA/D;AAAqE,MAAA,MAAM,EAAEM,MAA7E;AAAA,6BACE,QAAC,IAAD,CAAM,IAAN;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,KAAK,EAAE,CACL;AACEM,UAAAA,QAAQ,EAAE,IADZ;AAEErB,UAAAA,OAAO,EAAE;AAFX,SADK,EAKL;AACEsB,UAAAA,IAAI,EAAE,OADR;AAEEtB,UAAAA,OAAO,EAAE;AAFX,SALK,CAHT;AAAA,+BAcE,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAvD6B;AAAA,UAObF,IAAI,CAACY,OAPQ;AAAA,GAA9B;AAwDA,eAAeF,qBAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Modal,\n  Form,\n  Input,\n  message\n} from 'antd';\nimport { hideSubscribeModal } from '../../store/subscriceOnProductModal/middleware'\nimport { selectIsOpenModal } from '../../store/subscriceOnProductModal/reducer'\nimport { selectCustomerInfo } from '../../store/customer/reducer'\n\nconst mapStateToProps = (state) => ({\n  isOpen: selectIsOpenModal(state),\n  customerInfo: selectCustomerInfo(state)\n})\n\nconst ProductSubscribeModal = connect(mapStateToProps, { hideSubscribeModal })((\n  {\n    isOpen,\n    hideSubscribeModal,\n    customerInfo,\n  }\n) => {\n  const [form] = Form.useForm()\n\n  const onSubmit = () => {\n    form.resetFields()\n    hideSubscribeModal()\n    message.success('Thank you, you will be notified when this item is in stock!')\n  };\n  const onCancel = () => {\n    form.resetFields()\n    hideSubscribeModal()\n  }\n  const fields = [\n    {\n      name: 'email',\n      value: customerInfo.email\n    }\n  ]\n\n  return (\n    <Modal\n      title=\"Notify on product availability\"\n      visible={isOpen}\n      okText=\"Subscribe\"\n      onCancel={onCancel}\n      okButtonProps={{htmlType: 'submit', form: 'subscribeOnProductsForm', shape: 'round'}}\n      cancelButtonProps={{shape: 'round'}}\n      destroyOnClose\n    >\n      <Form name=\"subscribeOnProductsForm\" onFinish={onSubmit} form={form} fields={fields}>\n        <Form.Item\n          label=\"Email\"\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your email.',\n            },\n            {\n              type: 'email',\n              message: 'Entered data is not an email.',\n            },\n          ]}\n        >\n          <Input placeholder=\"Email\" />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n})\nexport default ProductSubscribeModal"]},"metadata":{},"sourceType":"module"}