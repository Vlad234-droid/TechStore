{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/Subscribed/Subscribe.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getSubscriber } from '../../../store/createSubscribe/middleware';\nimport { BlockInfo, TextInfo } from '../StyledDashBoard';\nimport SubscribedUser from './SubscribedUser';\nimport NotSubscribedUser from './NotSubscribedUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Subscribe = ({\n  email,\n  isSubscribed,\n  setIsSubscribed\n}) => {\n  _s();\n\n  useEffect(() => {\n    console.log('HEllo');\n\n    const getSubscriberInfo = async () => {\n      if (email) {\n        const checkSubscription = await getSubscriber(email);\n\n        if (checkSubscription.status === 200) {\n          setIsSubscribed(() => true);\n        }\n      } else {\n        setIsSubscribed(() => false);\n      }\n    };\n\n    getSubscriberInfo();\n  }, [email, setIsSubscribed]);\n  return /*#__PURE__*/_jsxDEV(BlockInfo, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Newsletters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextInfo, {\n        children: isSubscribed ? /*#__PURE__*/_jsxDEV(SubscribedUser, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(NotSubscribedUser, {\n          email: email,\n          setIsSubscribed: setIsSubscribed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Subscribe, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Subscribe;\nSubscribe.propTypes = {\n  email: PropTypes.string.isRequired,\n  isSubscribed: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]).isRequired,\n  setIsSubscribed: PropTypes.func.isRequired\n};\nexport default Subscribe;\n\nvar _c;\n\n$RefreshReg$(_c, \"Subscribe\");","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/Subscribed/Subscribe.jsx"],"names":["React","useEffect","PropTypes","getSubscriber","BlockInfo","TextInfo","SubscribedUser","NotSubscribedUser","Subscribe","email","isSubscribed","setIsSubscribed","console","log","getSubscriberInfo","checkSubscription","status","propTypes","string","isRequired","oneOfType","bool","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,2CAA9B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,oBAApC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,YAAT;AAAuBC,EAAAA;AAAvB,CAAD,KAA8C;AAAA;;AAC9DV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,UAAMC,iBAAiB,GAAG,YAAY;AACpC,UAAIL,KAAJ,EAAW;AACT,cAAMM,iBAAiB,GAAG,MAAMZ,aAAa,CAACM,KAAD,CAA7C;;AACA,YAAIM,iBAAiB,CAACC,MAAlB,KAA6B,GAAjC,EAAsC;AACpCL,UAAAA,eAAe,CAAC,MAAM,IAAP,CAAf;AACD;AACF,OALD,MAKO;AACLA,QAAAA,eAAe,CAAC,MAAM,KAAP,CAAf;AACD;AACF,KATD;;AAUAG,IAAAA,iBAAiB;AAClB,GAbQ,EAaN,CAACL,KAAD,EAAQE,eAAR,CAbM,CAAT;AAeA,sBACE,QAAC,SAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE,QAAC,QAAD;AAAA,kBACGD,YAAY,gBAAG,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAET,QAAC,iBAAD;AACE,UAAA,KAAK,EAAED,KADT;AAEE,UAAA,eAAe,EAAEE;AAFnB;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAjCD;;GAAMH,S;;KAAAA,S;AAkCNA,SAAS,CAACS,SAAV,GAAsB;AACpBR,EAAAA,KAAK,EAAEP,SAAS,CAACgB,MAAV,CAAiBC,UADJ;AAEpBT,EAAAA,YAAY,EAAER,SAAS,CAACkB,SAAV,CAAoB,CAAClB,SAAS,CAACgB,MAAX,EAAmBhB,SAAS,CAACmB,IAA7B,CAApB,EAAwDF,UAFlD;AAGpBR,EAAAA,eAAe,EAAET,SAAS,CAACoB,IAAV,CAAeH;AAHZ,CAAtB;AAKA,eAAeX,SAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { getSubscriber } from '../../../store/createSubscribe/middleware';\nimport { BlockInfo, TextInfo } from '../StyledDashBoard';\nimport SubscribedUser from './SubscribedUser';\nimport NotSubscribedUser from './NotSubscribedUser';\n\nconst Subscribe = ({ email, isSubscribed, setIsSubscribed }) => {\n  useEffect(() => {\n    console.log('HEllo');\n    const getSubscriberInfo = async () => {\n      if (email) {\n        const checkSubscription = await getSubscriber(email);\n        if (checkSubscription.status === 200) {\n          setIsSubscribed(() => true)\n        }\n      } else {\n        setIsSubscribed(() => false)\n      }\n    }\n    getSubscriberInfo()\n  }, [email, setIsSubscribed])\n\n  return (\n    <BlockInfo>\n      <h4>Newsletters</h4>\n      <div>\n        <TextInfo>\n          {isSubscribed ? <SubscribedUser />\n            : (\n              <NotSubscribedUser\n                email={email}\n                setIsSubscribed={setIsSubscribed}\n              />\n            )}\n        </TextInfo>\n      </div>\n    </BlockInfo>\n    \n  );\n}\nSubscribe.propTypes = {\n  email: PropTypes.string.isRequired,\n  isSubscribed: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]).isRequired,\n  setIsSubscribed: PropTypes.func.isRequired\n}\nexport default Subscribe;\n"]},"metadata":{},"sourceType":"module"}