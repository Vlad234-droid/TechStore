{"ast":null,"code":"/* eslint-disable no-underscore-dangle */\nimport axios from 'axios';\nimport { DOMAIN, getHeaders } from '../../utils/constants';\nimport { updateWishlistCreator, startLoading, stopLoading } from './actionCreator';\nconst BASE_ENDPOINT = `${DOMAIN}/wishlist`;\n\nconst getParsedListFromLS = () => {\n  const check = localStorage.getItem('wishlist');\n  if (!check) localStorage.setItem('wishlist', JSON.stringify([]));\n  const items = localStorage.getItem('wishlist');\n  return JSON.parse(items);\n};\n\nconst addProductToLS = product => {\n  const prevItems = getParsedListFromLS();\n  const updatedItems = [...prevItems, product];\n  localStorage.setItem('wishlist', JSON.stringify(updatedItems));\n  return updatedItems;\n};\n\nconst removeProductFromLS = product => {\n  const prevItems = getParsedListFromLS();\n  const updatedItems = prevItems.filter(item => item._id !== product._id);\n  localStorage.setItem('wishlist', JSON.stringify(updatedItems));\n  return updatedItems;\n};\n\nconst getItemsFromDB = () => {\n  const headers = getHeaders();\n  return axios.get(BASE_ENDPOINT, {\n    headers\n  }).then(response => response).catch(err => err.response);\n};\n\nexport const setWishlist = () => async (dispatch, getState) => {\n  dispatch(startLoading());\n  const {\n    auth: {\n      isLogin\n    }\n  } = getState();\n  const itemsToSet = [];\n\n  if (isLogin) {\n    const response = await getItemsFromDB();\n    const {\n      data,\n      status\n    } = response;\n    if (data && status === 200) itemsToSet.push(...data.products);else {\n      itemsToSet.push(...getParsedListFromLS());\n    }\n  } else {\n    itemsToSet.push(...getParsedListFromLS());\n  }\n\n  dispatch(updateWishlistCreator(itemsToSet));\n  dispatch(stopLoading());\n};\nexport const addProductToWishlist = product => async (dispatch, getState) => {\n  if (!product || !product._id) return;\n  const productID = product._id;\n  const {\n    auth: {\n      isLogin\n    }\n  } = getState();\n  const updatedList = [];\n\n  if (isLogin) {\n    const headers = getHeaders();\n    await axios.put(`${BASE_ENDPOINT}/${productID}`, null, {\n      headers\n    }).then(response => {\n      const {\n        data,\n        status\n      } = response;\n      if (data && status === 200) updatedList.push(...data.products);\n    }).catch(err => err.response);\n  } else {\n    const updatedItems = addProductToLS(product);\n    updatedList.push(...updatedItems);\n  }\n\n  dispatch(updateWishlistCreator(updatedList));\n};\nexport const removeProductFromWishlist = product => async (dispatch, getState) => {\n  if (!product || !product._id) return;\n  const productID = product._id;\n  const {\n    auth: {\n      isLogin\n    }\n  } = getState();\n  const updatedList = [];\n\n  if (isLogin) {\n    const headers = getHeaders();\n    await axios.delete(`${BASE_ENDPOINT}/${productID}`, {\n      headers\n    }).then(response => {\n      const {\n        data,\n        status\n      } = response;\n      if (data && status === 200) updatedList.push(...data.products);\n    }).catch(err => err.response);\n  } else {\n    const updatedItems = removeProductFromLS(product);\n    updatedList.push(...updatedItems);\n  }\n\n  dispatch(updateWishlistCreator(updatedList));\n};\nexport const compareLSItemsAndDBItems = () => async dispatch => {\n  const {\n    data,\n    status\n  } = await getItemsFromDB();\n  const itemsLS = getParsedListFromLS();\n  const itemsDB = [];\n  if (data && status === 200) itemsDB.push(...data.products);\n  const allItems = [...itemsLS, ...itemsDB];\n  const uniqueList = [];\n  allItems.forEach(el => {\n    const check = Boolean(uniqueList.find(item => item.itemNo === el.itemNo));\n    if (!check) uniqueList.push(el);\n  });\n  dispatch(updateWishlistCreator(uniqueList));\n  const updatedItems = {\n    products: uniqueList\n  };\n  const headers = getHeaders();\n  axios.put(BASE_ENDPOINT, updatedItems, {\n    headers\n  }).then(res => res).catch(err => err.response);\n};","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/TechStore/src/store/wishlist/middleware.js"],"names":["axios","DOMAIN","getHeaders","updateWishlistCreator","startLoading","stopLoading","BASE_ENDPOINT","getParsedListFromLS","check","localStorage","getItem","setItem","JSON","stringify","items","parse","addProductToLS","product","prevItems","updatedItems","removeProductFromLS","filter","item","_id","getItemsFromDB","headers","get","then","response","catch","err","setWishlist","dispatch","getState","auth","isLogin","itemsToSet","data","status","push","products","addProductToWishlist","productID","updatedList","put","removeProductFromWishlist","delete","compareLSItemsAndDBItems","itemsLS","itemsDB","allItems","uniqueList","forEach","el","Boolean","find","itemNo","res"],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport axios from 'axios'\nimport { DOMAIN, getHeaders } from '../../utils/constants'\nimport { updateWishlistCreator, startLoading, stopLoading } from './actionCreator'\n\nconst BASE_ENDPOINT = `${DOMAIN}/wishlist`\n\nconst getParsedListFromLS = () => {\n  const check = localStorage.getItem('wishlist')\n  if (!check) localStorage.setItem('wishlist', JSON.stringify([]))\n\n  const items = localStorage.getItem('wishlist')\n  return JSON.parse(items)\n}\nconst addProductToLS = (product) => {\n  const prevItems = getParsedListFromLS()\n  const updatedItems = [...prevItems, product]\n  localStorage.setItem('wishlist', JSON.stringify(updatedItems))\n  return updatedItems\n}\nconst removeProductFromLS = (product) => {\n  const prevItems = getParsedListFromLS()\n  const updatedItems = prevItems.filter((item) => item._id !== product._id)\n  localStorage.setItem('wishlist', JSON.stringify(updatedItems))\n  return updatedItems\n}\n\nconst getItemsFromDB = () => {\n  const headers = getHeaders()\n  return axios.get(BASE_ENDPOINT, { headers })\n    .then((response) => response)\n    .catch((err) => err.response)\n}\n\nexport const setWishlist = () => async (dispatch, getState) => {\n  dispatch(startLoading())\n  const {auth: { isLogin }} = getState()\n  const itemsToSet = []\n  \n  if (isLogin) {\n    const response = await getItemsFromDB()\n    const { data, status } = response\n    if (data && status === 200) itemsToSet.push(...data.products)\n    else {\n      itemsToSet.push(...getParsedListFromLS())\n    }\n  } else {\n    itemsToSet.push(...getParsedListFromLS())\n  }\n\n  dispatch(updateWishlistCreator(itemsToSet))\n  dispatch(stopLoading())\n}\n\nexport const addProductToWishlist = (product) => async (dispatch, getState) => {\n  if (!product || !product._id) return\n\n  const productID = product._id\n  const {auth: { isLogin }} = getState()\n  const updatedList = []\n\n  if (isLogin) {\n    const headers = getHeaders()\n    await axios.put(`${BASE_ENDPOINT}/${productID}`, null, { headers })\n      .then((response) => {\n        const { data, status } = response\n        if (data && status === 200) updatedList.push(...data.products)\n      })\n      .catch((err) => err.response)\n  } else {\n    const updatedItems = addProductToLS(product)\n    updatedList.push(...updatedItems)\n  }\n \n  dispatch(updateWishlistCreator(updatedList))\n}\n\nexport const removeProductFromWishlist = (product) => async (dispatch, getState) => {\n  if (!product || !product._id) return\n\n  const productID = product._id\n  const {auth: { isLogin }} = getState()\n  const updatedList = []\n  \n  if (isLogin) {\n    const headers = getHeaders()\n    await axios.delete(`${BASE_ENDPOINT}/${productID}`, { headers })\n      .then((response) => {\n        const { data, status } = response\n        if (data && status === 200) updatedList.push(...data.products)\n      })\n      .catch((err) => err.response)\n  } else {\n    const updatedItems = removeProductFromLS(product)\n    updatedList.push(...updatedItems)\n  }\n\n  dispatch(updateWishlistCreator(updatedList))\n}\n\nexport const compareLSItemsAndDBItems = () => async (dispatch) => {\n  const { data, status } = await getItemsFromDB()\n  const itemsLS = getParsedListFromLS()\n  const itemsDB = []\n  if (data && status === 200) itemsDB.push(...data.products)\n  const allItems = [...itemsLS, ...itemsDB]\n  \n  const uniqueList = []\n  allItems.forEach((el) => {\n    const check = Boolean(uniqueList.find((item) => item.itemNo === el.itemNo))\n    if (!check) uniqueList.push(el)\n  })\n  \n  dispatch(updateWishlistCreator(uniqueList))\n\n  const updatedItems = {\n    products: uniqueList\n  }\n  const headers = getHeaders()\n  axios.put(BASE_ENDPOINT, updatedItems, { headers })\n    .then((res) => res)\n    .catch((err) => err.response)\n}\n"]},"metadata":{},"sourceType":"module"}