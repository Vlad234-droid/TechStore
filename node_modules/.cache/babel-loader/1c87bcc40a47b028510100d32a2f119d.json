{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/Subscribed/Subscribe.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable import/no-cycle */\n\n/* eslint-disable react/prop-types */\n\n/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { getSubscriber } from '../../../store/createSubscribe/middleware';\nimport { BlockInfo, TextInfo } from '../StyledDashBoard';\nimport SubscribedUser from './SubscribedUser';\nimport NotSubscribedUser from './NotSubscribedUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Subscribe = ({\n  email\n}) => {\n  _s();\n\n  const [isSubscribed, setIsSubscribed] = useState(false); // email false\n\n  useEffect(() => {\n    const getSubscriberInfo = async () => {\n      if (email) {\n        const checkSubscription = await getSubscriber(email);\n\n        if (checkSubscription.status === 200) {\n          setIsSubscribed(() => true);\n        }\n      }\n    };\n\n    getSubscriberInfo();\n  }, [email]);\n  return /*#__PURE__*/_jsxDEV(BlockInfo, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Newsletters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextInfo, {\n        children: isSubscribed ? /*#__PURE__*/_jsxDEV(SubscribedUser, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(NotSubscribedUser, {\n          email: email,\n          setIsSubscribed: setIsSubscribed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}; // eslint-disable-next-line react/no-typos\n\n\n_s(Subscribe, \"jwzY2fryZMdGFxBHusGG+zxQIDg=\");\n\n_c = Subscribe;\nSubscribe.PropTypes = {\n  email: PropTypes.string.isRequired\n};\nexport default Subscribe;\n\nvar _c;\n\n$RefreshReg$(_c, \"Subscribe\");","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/Subscribed/Subscribe.jsx"],"names":["React","useEffect","useState","styled","PropTypes","getSubscriber","BlockInfo","TextInfo","SubscribedUser","NotSubscribedUser","Subscribe","email","isSubscribed","setIsSubscribed","getSubscriberInfo","checkSubscription","status","string","isRequired"],"mappings":";;;AAAA;;AACA;;AACA;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,2CAA9B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,oBAApC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AAC7B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,KAAD,CAAhD,CAD6B,CAC2B;;AAExDD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,iBAAiB,GAAG,YAAY;AACpC,UAAIH,KAAJ,EAAW;AACT,cAAMI,iBAAiB,GAAG,MAAMV,aAAa,CAACM,KAAD,CAA7C;;AACA,YAAII,iBAAiB,CAACC,MAAlB,KAA6B,GAAjC,EAAsC;AACpCH,UAAAA,eAAe,CAAC,MAAM,IAAP,CAAf;AACD;AACF;AACF,KAPD;;AAQAC,IAAAA,iBAAiB;AAClB,GAVQ,EAUN,CAACH,KAAD,CAVM,CAAT;AAYA,sBACE,QAAC,SAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE,QAAC,QAAD;AAAA,kBACGC,YAAY,gBAAG,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBAAH,gBACX,QAAC,iBAAD;AACE,UAAA,KAAK,EAAED,KADT;AAEE,UAAA,eAAe,EAAEE;AAFnB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA/BD,C,CAiCA;;;GAjCMH,S;;KAAAA,S;AAkCNA,SAAS,CAACN,SAAV,GAAsB;AACpBO,EAAAA,KAAK,EAAEP,SAAS,CAACa,MAAV,CAAiBC;AADJ,CAAtB;AAGA,eAAeR,SAAf","sourcesContent":["/* eslint-disable import/no-cycle */\n/* eslint-disable react/prop-types */\n/* eslint-disable no-unused-vars */\nimport React, {useEffect, useState} from 'react';\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types';\nimport { getSubscriber } from '../../../store/createSubscribe/middleware';\nimport { BlockInfo, TextInfo } from '../StyledDashBoard';\nimport SubscribedUser from './SubscribedUser';\nimport NotSubscribedUser from './NotSubscribedUser';\n\nconst Subscribe = ({email}) => {\n  const [isSubscribed, setIsSubscribed] = useState(false) // email false\n\n  useEffect(() => {\n    const getSubscriberInfo = async () => {\n      if (email) {\n        const checkSubscription = await getSubscriber(email);\n        if (checkSubscription.status === 200) {\n          setIsSubscribed(() => true)\n        }\n      }\n    }\n    getSubscriberInfo()\n  }, [email])\n\n  return (\n    <BlockInfo>\n      <h4>Newsletters</h4>\n      <div>\n        <TextInfo>\n          {isSubscribed ? <SubscribedUser /> : (\n            <NotSubscribedUser\n              email={email}\n              setIsSubscribed={setIsSubscribed}\n            />\n          )}\n        </TextInfo>\n      </div>\n    </BlockInfo>\n    \n  );\n}\n\n// eslint-disable-next-line react/no-typos\nSubscribe.PropTypes = {\n  email: PropTypes.string.isRequired\n}\nexport default Subscribe;"]},"metadata":{},"sourceType":"module"}