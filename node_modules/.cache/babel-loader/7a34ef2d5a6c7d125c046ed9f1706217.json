{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/PasswordChange.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-undef */\n\n/* eslint-disable react/jsx-props-no-spreading */\n\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Form, Input, Button } from 'antd'; // import { updateCustomer } from '../../store/customer/middleware';\n// const formItemLayout = {\n//   labelCol: {\n//     xs: { span: 24 },\n//     sm: { span: 8 },\n//   },\n//   wrapperCol: {\n//     xs: { span: 24 },\n//     sm: { span: 16 },\n//   },\n// };\n// const tailFormItemLayout = {\n//   wrapperCol: {\n//     xs: {\n//       span: 24,\n//       offset: 0,\n//     },\n//     sm: {\n//       span: 16,\n//       offset: 8,\n//     },\n//   },\n// };\n// eslint-disable-next-line react/prop-types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PasswordChange = () => {\n  _s();\n\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    name: \"register\",\n    onFinish: onFinish,\n    scrollToFirstError: true,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"password\",\n      label: \"Password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      hasFeedback: true,\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"confirm\",\n      label: \"Confirm Password\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(_, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(new Error('The two passwords that you entered do not match!'));\n        }\n\n      })],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PasswordChange, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = PasswordChange;\nexport default PasswordChange;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordChange\");","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/PasswordChange.jsx"],"names":["React","Form","Input","Button","PasswordChange","form","useForm","onFinish","values","console","log","required","message","getFieldValue","validator","_","value","Promise","resolve","reject","Error"],"mappings":";;;AAAA;;AACA;;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAEEC,KAFF,EAGEC,MAHF,QAIO,MAJP,C,CAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,IAAD,IAASJ,IAAI,CAACK,OAAL,EAAf;;AACA,QAAMC,QAAQ,GAAIC,MAAD,IAAY;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,MAAzC;AACD,GAFD;;AAIA,sBACE,QAAC,IAAD;AACE,IAAA,IAAI,EAAEH,IADR;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,QAAQ,EAAEE,QAHZ;AAIE,IAAA,kBAAkB,MAJpB;AAAA,4BAOE,QAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAC,UAFR;AAGE,MAAA,KAAK,EAAE,CACL;AACEI,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,CAHT;AASE,MAAA,WAAW,MATb;AAAA,6BAWE,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,YAPF,eAqBE,QAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,KAAK,EAAC,kBAFR;AAGE,MAAA,YAAY,EAAE,CAAC,UAAD,CAHhB;AAIE,MAAA,WAAW,MAJb;AAKE,MAAA,KAAK,EAAE,CACL;AACED,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,EAKL,CAAC;AAAEC,QAAAA;AAAF,OAAD,MAAwB;AACtBC,QAAAA,SAAS,CAACC,CAAD,EAAIC,KAAJ,EAAW;AAClB,cAAI,CAACA,KAAD,IAAUH,aAAa,CAAC,UAAD,CAAb,KAA8BG,KAA5C,EAAmD;AACjD,mBAAOC,OAAO,CAACC,OAAR,EAAP;AACD;;AACD,iBAAOD,OAAO,CAACE,MAAR,CAAe,IAAIC,KAAJ,CAAU,kDAAV,CAAf,CAAP;AACD;;AANqB,OAAxB,CALK,CALT;AAAA,6BAoBE,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AApBF;AAAA;AAAA;AAAA;AAAA,YArBF,eA4CE,QAAC,IAAD,CAAM,IAAN;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA5CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoDD,CA1DD;;GAAMhB,c;UACWH,IAAI,CAACK,O;;;KADhBF,c;AA4DN,eAAeA,cAAf","sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n// import { updateCustomer } from '../../store/customer/middleware';\n\n// const formItemLayout = {\n//   labelCol: {\n//     xs: { span: 24 },\n//     sm: { span: 8 },\n//   },\n//   wrapperCol: {\n//     xs: { span: 24 },\n//     sm: { span: 16 },\n//   },\n// };\n// const tailFormItemLayout = {\n//   wrapperCol: {\n//     xs: {\n//       span: 24,\n//       offset: 0,\n//     },\n//     sm: {\n//       span: 16,\n//       offset: 8,\n//     },\n//   },\n// };\n\n// eslint-disable-next-line react/prop-types\nconst PasswordChange = () => {\n  const [form] = Form.useForm();\n  const onFinish = (values) => {\n    console.log('Received values of form: ', values);\n  };\n  \n  return (\n    <Form\n      form={form}\n      name=\"register\"\n      onFinish={onFinish}\n      scrollToFirstError\n    >\n\n      <Form.Item\n        name=\"password\"\n        label=\"Password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n        ]}\n        hasFeedback\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"confirm\"\n        label=\"Confirm Password\"\n        dependencies={['password']}\n        hasFeedback\n        rules={[\n          {\n            required: true,\n            message: 'Please confirm your password!',\n          },\n          ({ getFieldValue }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject(new Error('The two passwords that you entered do not match!'));\n            },\n          }),\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n    \n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport default PasswordChange;\n"]},"metadata":{},"sourceType":"module"}