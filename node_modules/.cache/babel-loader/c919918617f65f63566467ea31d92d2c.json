{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/Header/UserPopUp/UserPopUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authLogOut } from '../../../store/auth/middleware';\nimport close from \"../../../images/header/Close.svg\";\nimport { NavUserContainer, Close } from './UserPopUpStyled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => ({\n  isLogin: state.auth.isLogin\n});\n\nconst UserPopUp = connect()(_s(({\n  isOpenUser,\n  setIsOpenUser\n}) => {\n  _s();\n\n  const openSlideUser = {\n    hidden: {\n      x: 50,\n      scale: 0,\n      opacity: 0,\n      transition: {\n        delay: 0.35,\n        type: 'spring',\n        stiffness: 200,\n        damping: 40\n      }\n    },\n    show: {\n      opacity: 1,\n      x: -180,\n      scale: 1,\n      transition: {\n        delay: 0.35,\n        type: 'spring',\n        stiffness: 200,\n        damping: 40\n      }\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('click', e => {\n      if (e.target.closest('#userBtn') !== null) {\n        setIsOpenUser(() => true);\n        return;\n      }\n\n      if (isOpenUser) {\n        if (e.target.closest('#usePopUp') === null) {\n          setIsOpenUser(() => false);\n        }\n      }\n    }); // console.log(isOpenUser);\n  }, [isOpenUser, setIsOpenUser]);\n  return /*#__PURE__*/_jsxDEV(NavUserContainer, {\n    id: \"usePopUp\",\n    variants: openSlideUser,\n    initial: false,\n    animate: isOpenUser ? 'show' : 'hidden',\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"My Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"My Wish List (0)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Compare (0)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Create an Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signin\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Close, {\n        onClick: () => setIsOpenUser(false),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: close,\n          alt: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"));\nUserPopUp.propTypes = {\n  isOpenUser: PropTypes.bool.isRequired,\n  setIsOpenUser: PropTypes.func.isRequired\n};\nexport default UserPopUp;","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/Header/UserPopUp/UserPopUp.jsx"],"names":["React","useEffect","PropTypes","Link","connect","authLogOut","NavUserContainer","Close","mapStateToProps","state","isLogin","auth","UserPopUp","isOpenUser","setIsOpenUser","openSlideUser","hidden","x","scale","opacity","transition","delay","type","stiffness","damping","show","window","addEventListener","e","target","closest","close","propTypes","bool","isRequired","func"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {authLogOut} from '../../../store/auth/middleware';\nimport close from '../../../images/header/Close.svg';\nimport {NavUserContainer, Close} from './UserPopUpStyled';\n\nconst mapStateToProps = (state) => ({\n  isLogin: state.auth.isLogin\n})\n\nconst UserPopUp = connect()(({isOpenUser, setIsOpenUser}) => {\n  const openSlideUser = {\n    hidden: {\n      x: 50,\n      scale: 0,\n      opacity: 0,\n      transition: {\n        delay: 0.35,\n        type: 'spring',\n        stiffness: 200,\n        damping: 40\n      }\n    },\n    show: {\n      opacity: 1,\n      x: -180,\n      scale: 1,\n      transition: {\n        delay: 0.35,\n        type: 'spring',\n        stiffness: 200,\n        damping: 40\n      }\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('click', (e) => {\n      if (e.target.closest('#userBtn') !== null) {\n        setIsOpenUser(() => true);\n        return\n      }\n      if (isOpenUser) {\n        if (e.target.closest('#usePopUp') === null) {\n          setIsOpenUser(() => false)\n        }\n      }\n    })\n    // console.log(isOpenUser);\n  }, [isOpenUser, setIsOpenUser])\n  return (\n    <NavUserContainer\n      id=\"usePopUp\"\n      variants={openSlideUser}\n      initial={false}\n      animate={isOpenUser ? 'show' : 'hidden'}\n    >\n      <ul>\n        <li>My Account</li>\n        <li>My Wish List (0)</li>\n        <li>Compare (0)</li>\n        <Link to=\"/signup\">\n          <li>Create an Account</li>\n        </Link>\n        <Link to=\"/signin\">\n          <li>Sign In</li>\n        </Link>\n        <Close onClick={() => setIsOpenUser(false)}>\n          <img src={close} alt=\"close\" />\n        </Close>\n      </ul>\n    </NavUserContainer>\n  );\n})\nUserPopUp.propTypes = {\n  isOpenUser: PropTypes.bool.isRequired,\n  setIsOpenUser: PropTypes.func.isRequired\n}\n\nexport default UserPopUp;"]},"metadata":{},"sourceType":"module"}