{"ast":null,"code":"import axios from 'axios';\nimport { message } from 'antd';\nimport { DOMAIN, getHeaders } from '../../utils/constants';\nconst BASE_ENDPOINT = `${DOMAIN}/customers`;\nconst BASE_ENDPOINT_CUSTOMER_ORDERS = `${DOMAIN}/orders`;\nexport const createCustomer = (credentials, history) => {\n  axios.post(BASE_ENDPOINT, credentials).then(res => {\n    if (res.status === 200) {\n      history.push('/signin');\n      message.info('New account created successfully');\n    }\n  }).catch(error => {\n    const {\n      message\n    } = error.response.data;\n\n    if (message) {\n      message.error(`Error: ${message}`);\n    }\n  });\n};\nexport const changePassword = passwords => {\n  const headers = getHeaders();\n  const res = axios.put(`${BASE_ENDPOINT}/password`, passwords, {\n    headers\n  }).then(data => {\n    if (data.status === 200) {\n      if (data.data.message === 'Password successfully changed') {\n        message.success('Your password have been changed');\n      }\n\n      if (data.data.password === 'Password does not match') {\n        message.error('Old password is wrong ');\n      }\n    }\n  }).catch(error => {\n    if (error.response) {\n      const requestMessage = error.response.data.message;\n      message.error(`Error: ${requestMessage}`);\n    }\n  });\n  return res;\n};\nexport const getCustomer = () => (dispatch, getState) => {\n  const {\n    auth: {\n      isLogin\n    }\n  } = getState();\n\n  if (isLogin) {\n    dispatch(startLoading());\n    const headers = getHeaders();\n    axios.get(`${BASE_ENDPOINT}/customer`, {\n      headers\n    }).then(data => {\n      if (data.status === 200) {\n        dispatch(setCustomerInfo(data.data));\n      }\n    }).catch(error => error.response).finally(() => {\n      dispatch(stopLoading());\n    });\n  }\n};\nexport const updateCustomer = (credentials, succesMessage) => dispatch => {\n  const headers = getHeaders();\n  axios.put(BASE_ENDPOINT, credentials, {\n    headers\n  }).then(data => {\n    if (data.status === 200) {\n      dispatch(setCustomerInfo(data.data));\n\n      if (succesMessage) {\n        message.success('Your contact information has been changed');\n      }\n    }\n  }).catch(error => error.response);\n};\nexport const getOrders = () => (dispatch, getState) => {\n  const {\n    auth: {\n      isLogin\n    }\n  } = getState();\n\n  if (isLogin) {\n    dispatch(startLoading());\n    const headers = getHeaders();\n    axios.get(BASE_ENDPOINT_CUSTOMER_ORDERS, {\n      headers\n    }).then(data => {\n      if (data.status === 200) {\n        dispatch(setOrders(data.data.reverse()));\n      }\n    }).catch(error => error.response).finally(() => {\n      dispatch(stopLoading());\n    });\n  }\n};\nexport default getOrders;","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/store/customer/middleware.js"],"names":["axios","message","DOMAIN","getHeaders","BASE_ENDPOINT","BASE_ENDPOINT_CUSTOMER_ORDERS","createCustomer","credentials","history","post","then","res","status","push","info","catch","error","response","data","changePassword","passwords","headers","put","success","password","requestMessage","getCustomer","dispatch","getState","auth","isLogin","startLoading","get","setCustomerInfo","finally","stopLoading","updateCustomer","succesMessage","getOrders","setOrders","reverse"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { message } from 'antd';\nimport { DOMAIN, getHeaders } from '../../utils/constants';\n\nconst BASE_ENDPOINT = `${DOMAIN}/customers`;\nconst BASE_ENDPOINT_CUSTOMER_ORDERS = `${DOMAIN}/orders`;\n\nexport const createCustomer = (credentials, history) => {\n  axios.post(BASE_ENDPOINT, credentials)\n    .then((res) => {\n      if (res.status === 200) {\n        history.push('/signin')\n        message.info('New account created successfully')\n      }\n    })\n    .catch((error) => {\n      const { message } = error.response.data\n      if (message) {\n        message.error(`Error: ${message}`)\n      }\n    })\n}\n\nexport const changePassword = (passwords) => {\n  const headers = getHeaders();\n  const res = axios.put(`${BASE_ENDPOINT}/password`, passwords, {headers})\n    .then((data) => {\n      if (data.status === 200) {\n        if (data.data.message === 'Password successfully changed') {\n          message.success('Your password have been changed')\n        }\n        if (data.data.password === 'Password does not match') {\n          message.error('Old password is wrong ')\n        }\n      }\n    })\n    .catch((error) => {\n      if (error.response) {\n        const requestMessage = error.response.data.message\n        message.error(`Error: ${requestMessage}`)\n      }\n    })\n  return res\n}\n  \nexport const getCustomer = () => (dispatch, getState) => {\n  const { auth: { isLogin }} = getState()\n  if (isLogin) {\n    dispatch(startLoading())\n    const headers = getHeaders()\n    axios.get(`${BASE_ENDPOINT}/customer`, { headers })\n      .then((data) => {\n        if (data.status === 200) {\n          dispatch(setCustomerInfo(data.data))\n        }\n      })\n      .catch((error) => error.response)\n      .finally(() => {\n        dispatch(stopLoading())\n      })\n  }\n}\n\nexport const updateCustomer = (credentials, succesMessage) => (dispatch) => {\n  const headers = getHeaders();\n  axios.put(BASE_ENDPOINT, credentials, {headers})\n    .then((data) => {\n      if (data.status === 200) {\n        dispatch(setCustomerInfo(data.data))\n        if (succesMessage) {\n          message.success('Your contact information has been changed')\n        }\n      }\n    })\n    .catch((error) => error.response)\n}\n\nexport const getOrders = () => (dispatch, getState) => {\n  const {auth: {isLogin}} = getState()\n  if (isLogin) {\n    dispatch(startLoading())\n    const headers = getHeaders()\n    axios.get(BASE_ENDPOINT_CUSTOMER_ORDERS, {headers})\n      .then((data) => {\n        if (data.status === 200) {\n          dispatch(setOrders(data.data.reverse()))\n        }\n      })\n      .catch((error) => error.response)\n      .finally(() => {\n        dispatch(stopLoading())\n      })\n  }\n}\nexport default getOrders;"]},"metadata":{},"sourceType":"module"}