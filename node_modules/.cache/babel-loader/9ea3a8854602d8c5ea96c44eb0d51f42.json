{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/DashBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Container } from '../common/Container';\nimport { getCustomer } from '../../store/customer/middleware';\nimport SpinAnimation from '../SpinAnimation/SpinAnimation';\nimport Subscribe from './Subscribed/Subscribe';\nimport { AccountInfo, MyDash, WrapperBlocks, RowBlocks } from './StyledDashBoard';\nimport PasswordInfoChange from './PasswordInfoChange';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashBoard = connect(null, {\n  getCustomer\n})(_s(() => {\n  _s();\n\n  const [info, setInfo] = useState({});\n  const [isSubscribed, setIsSubscribed] = useState('');\n  useEffect(() => {\n    const customer = async () => {\n      const information = await getCustomer();\n      const infoCustomer = information.data;\n      setInfo(() => infoCustomer);\n    };\n\n    customer();\n  }, []);\n  console.log(info.email);\n  if (Object.keys(info).length === 0) return /*#__PURE__*/_jsxDEV(SpinAnimation, {\n    width: \"90vw\",\n    height: \"90vh\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 46\n  }, this); // if (Object.keys(info).length === 0) return <SpinAnimation width=\"90vw\" height=\"90vh\" />\n  // решить вопрос рендиринга блока который\n  // отвечате за подписку, она меняется при загрузке страници,\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(MyDash, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"My Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountInfo, {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Account Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WrapperBlocks, {\n      children: [/*#__PURE__*/_jsxDEV(RowBlocks, {\n        children: /*#__PURE__*/_jsxDEV(PasswordInfoChange, {\n          info: info,\n          setInfo: setInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowBlocks, {\n        children: /*#__PURE__*/_jsxDEV(Subscribe, {\n          email: info.email,\n          isSubscribed: isSubscribed,\n          setIsSubscribed: setIsSubscribed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}, \"G830gsZvjtIctLGZXxsH+B+b108=\"));\nexport default DashBoard;","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/DashBoard.jsx"],"names":["React","useEffect","useState","connect","Container","getCustomer","SpinAnimation","Subscribe","AccountInfo","MyDash","WrapperBlocks","RowBlocks","PasswordInfoChange","DashBoard","info","setInfo","isSubscribed","setIsSubscribed","customer","information","infoCustomer","data","console","log","email","Object","keys","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SACEC,WADF,EACeC,MADf,EACuBC,aADvB,EACsCC,SADtC,QAEO,mBAFP;AAGA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,MAAMC,SAAS,GAAGV,OAAO,CAAC,IAAD,EAAO;AAAEE,EAAAA;AAAF,CAAP,CAAP,IAA+B,MAAM;AAAA;;AACrD,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,QAAQ,GAAG,YAAY;AAC3B,YAAMC,WAAW,GAAG,MAAMd,WAAW,EAArC;AACA,YAAMe,YAAY,GAAGD,WAAW,CAACE,IAAjC;AACAN,MAAAA,OAAO,CAAC,MAAMK,YAAP,CAAP;AACD,KAJD;;AAKAF,IAAAA,QAAQ;AACT,GAPQ,EAON,EAPM,CAAT;AAQAI,EAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACU,KAAjB;AAEA,MAAIC,MAAM,CAACC,IAAP,CAAYZ,IAAZ,EAAkBa,MAAlB,KAA6B,CAAjC,EAAoC,oBAAO,QAAC,aAAD;AAAe,IAAA,KAAK,EAAC,MAArB;AAA4B,IAAA,MAAM,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,UAAP,CAdiB,CAerD;AACA;AACA;;AAEA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,WAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,aAAD;AAAA,8BACE,QAAC,SAAD;AAAA,+BACE,QAAC,kBAAD;AAAoB,UAAA,IAAI,EAAEb,IAA1B;AAAgC,UAAA,OAAO,EAAEC;AAAzC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,SAAD;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,KAAK,EAAED,IAAI,CAACU,KADd;AAEE,UAAA,YAAY,EAAER,YAFhB;AAGE,UAAA,eAAe,EAAEC;AAHnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAzCiB,kCAAlB;AA0CA,eAAeJ,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Container } from '../common/Container'\nimport { getCustomer } from '../../store/customer/middleware'\nimport SpinAnimation from '../SpinAnimation/SpinAnimation'\nimport Subscribe from './Subscribed/Subscribe';\nimport {\n  AccountInfo, MyDash, WrapperBlocks, RowBlocks\n} from './StyledDashBoard';\nimport PasswordInfoChange from './PasswordInfoChange';\n\nconst DashBoard = connect(null, { getCustomer })(() => {\n  const [info, setInfo] = useState({})\n  const [isSubscribed, setIsSubscribed] = useState('')\n\n  useEffect(() => {\n    const customer = async () => {\n      const information = await getCustomer()\n      const infoCustomer = information.data;\n      setInfo(() => infoCustomer)\n    }\n    customer()\n  }, [])\n  console.log(info.email);\n\n  if (Object.keys(info).length === 0) return <SpinAnimation width=\"90vw\" height=\"90vh\" />\n  // if (Object.keys(info).length === 0) return <SpinAnimation width=\"90vw\" height=\"90vh\" />\n  // решить вопрос рендиринга блока который\n  // отвечате за подписку, она меняется при загрузке страници,\n\n  return (\n    <Container>\n      <MyDash>\n        <p>My Dashboard</p>\n      </MyDash>\n      <AccountInfo>\n        <h3>Account Information</h3>\n      </AccountInfo>\n      <WrapperBlocks>\n        <RowBlocks>\n          <PasswordInfoChange info={info} setInfo={setInfo} />\n        </RowBlocks>\n        <RowBlocks>\n          <Subscribe\n            email={info.email}\n            isSubscribed={isSubscribed}\n            setIsSubscribed={setIsSubscribed}\n          />\n        </RowBlocks>\n      </WrapperBlocks>\n    </Container>\n  );\n})\nexport default DashBoard;\n"]},"metadata":{},"sourceType":"module"}