{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/Modal.jsx\";\n\n/* eslint-disable react/prop-types */\n\n/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport { Modal as AntModal } from 'antd';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { setHideModal } from '../../store/modal/middleware';\nimport PasswordChange from './PasswordChange';\nimport FormInfoChange from './FormInfoChange';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => ({\n  show: state.dashBoardModal.show,\n  formId: state.dashBoardModal.formId\n});\n\nconst Modal = connect(mapStateToProps, {\n  setHideModal\n})(({\n  show,\n  setHideModal,\n  formId,\n  setInfo,\n  title\n}) => {\n  const checkForIdtoRender = id => {\n    switch (id) {\n      case 'setInfo':\n        return /*#__PURE__*/_jsxDEV(StyledAntModal, {\n          title: \"Add Contact Information\",\n          cancelText: \"Close\",\n          okButtonProps: {\n            style: {\n              display: 'none'\n            }\n          },\n          visible: show,\n          onCancel: setHideModal,\n          children: /*#__PURE__*/_jsxDEV(FormInfoChange, {\n            setInfo: setInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this);\n\n      case 'setPassword':\n        return /*#__PURE__*/_jsxDEV(StyledAntModal, {\n          title: \"Change your password\",\n          cancelText: \"Close\",\n          okButtonProps: {\n            style: {\n              display: 'none'\n            }\n          },\n          visible: show,\n          onCancel: setHideModal,\n          children: /*#__PURE__*/_jsxDEV(PasswordChange, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this);\n\n      default:\n        return '';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: checkForIdtoRender(formId)\n  }, void 0, false);\n});\nconst StyledAntModal = styled(AntModal)`\n  .ant-modal-body{\n    padding-bottom: 0px !important;\n  }\n`;\n_c = StyledAntModal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"StyledAntModal\");","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/Modal.jsx"],"names":["React","useState","Modal","AntModal","connect","styled","setHideModal","PasswordChange","FormInfoChange","mapStateToProps","state","show","dashBoardModal","formId","setInfo","title","checkForIdtoRender","id","style","display","StyledAntModal"],"mappings":";;AAAA;;AACA;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,KAAK,IAAIC,QAAlB,QAAkC,MAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,YAAR,QAA2B,8BAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,IAAI,EAAED,KAAK,CAACE,cAAN,CAAqBD,IADO;AAElCE,EAAAA,MAAM,EAAEH,KAAK,CAACE,cAAN,CAAqBC;AAFK,CAAZ,CAAxB;;AAIA,MAAMX,KAAK,GAAGE,OAAO,CAACK,eAAD,EAAkB;AAAEH,EAAAA;AAAF,CAAlB,CAAP,CAA2C,CAAC;AACxDK,EAAAA,IADwD;AAClDL,EAAAA,YADkD;AACpCO,EAAAA,MADoC;AAC5BC,EAAAA,OAD4B;AACnBC,EAAAA;AADmB,CAAD,KAEnD;AACJ,QAAMC,kBAAkB,GAAIC,EAAD,IAAQ;AACjC,YAAQA,EAAR;AACE,WAAK,SAAL;AACE,4BACE,QAAC,cAAD;AACE,UAAA,KAAK,EAAC,yBADR;AAEE,UAAA,UAAU,EAAC,OAFb;AAGE,UAAA,aAAa,EAAE;AAACC,YAAAA,KAAK,EAAE;AAACC,cAAAA,OAAO,EAAE;AAAV;AAAR,WAHjB;AAIE,UAAA,OAAO,EAAER,IAJX;AAKE,UAAA,QAAQ,EAAEL,YALZ;AAAA,iCAOE,QAAC,cAAD;AAAgB,YAAA,OAAO,EAAEQ;AAAzB;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,gBADF;;AAYF,WAAK,aAAL;AACE,4BACE,QAAC,cAAD;AACE,UAAA,KAAK,EAAC,sBADR;AAEE,UAAA,UAAU,EAAC,OAFb;AAGE,UAAA,aAAa,EAAE;AAACI,YAAAA,KAAK,EAAE;AAACC,cAAAA,OAAO,EAAE;AAAV;AAAR,WAHjB;AAIE,UAAA,OAAO,EAAER,IAJX;AAKE,UAAA,QAAQ,EAAEL,YALZ;AAAA,iCAOE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,gBADF;;AAYF;AACE,eAAO,EAAP;AA5BJ;AA8BD,GA/BD;;AAiCA,sBACE;AAAA,cACGU,kBAAkB,CAACH,MAAD;AADrB,mBADF;AAKD,CAzCa,CAAd;AA2CA,MAAMO,cAAc,GAAGf,MAAM,CAACF,QAAD,CAAW;AACxC;AACA;AACA;AACA,CAJA;KAAMiB,c;AAKN,eAAelB,KAAf","sourcesContent":["/* eslint-disable react/prop-types */\n/* eslint-disable no-unused-vars */\nimport React, {useState} from 'react';\nimport { Modal as AntModal } from 'antd';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport {setHideModal} from '../../store/modal/middleware';\nimport PasswordChange from './PasswordChange';\nimport FormInfoChange from './FormInfoChange';\n\nconst mapStateToProps = (state) => ({\n  show: state.dashBoardModal.show,\n  formId: state.dashBoardModal.formId,\n})\nconst Modal = connect(mapStateToProps, { setHideModal })(({\n  show, setHideModal, formId, setInfo, title\n}) => {\n  const checkForIdtoRender = (id) => {\n    switch (id) {\n      case 'setInfo':\n        return (\n          <StyledAntModal\n            title=\"Add Contact Information\"\n            cancelText=\"Close\"\n            okButtonProps={{style: {display: 'none'}}}\n            visible={show}\n            onCancel={setHideModal}\n          >\n            <FormInfoChange setInfo={setInfo} />\n          </StyledAntModal>\n        )\n        \n      case 'setPassword':\n        return (\n          <StyledAntModal\n            title=\"Change your password\"\n            cancelText=\"Close\"\n            okButtonProps={{style: {display: 'none'}}}\n            visible={show}\n            onCancel={setHideModal}\n          >\n            <PasswordChange />\n          </StyledAntModal>\n        )\n\n      default:\n        return ''\n    }\n  }\n  \n  return (\n    <>\n      {checkForIdtoRender(formId)}\n    </>\n  );\n})\n\nconst StyledAntModal = styled(AntModal)`\n  .ant-modal-body{\n    padding-bottom: 0px !important;\n  }\n`;\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}