{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/DashBoardModal.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setHideModal } from '../../store/dashBoardModal/middleware';\nimport PasswordChange from './PasswordChange';\nimport FormInfoChange from './FormInfoChange';\nimport StyledAntModal from './DashBoardModalStyled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => ({\n  show: state.dashBoardModal.show,\n  formId: state.dashBoardModal.formId\n});\n\nconst Modal = connect(mapStateToProps, {\n  setHideModal\n})(({\n  show,\n  setHideModal,\n  formId,\n  setInfo\n}) => {\n  const checkForIdtoRender = id => {\n    switch (id) {\n      case 'setInfo':\n        return {\n          title: 'Change your contact information',\n          form: /*#__PURE__*/_jsxDEV(FormInfoChange, {\n            setInfo: setInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this)\n        };\n\n      case 'setPassword':\n        return {\n          title: 'Change your password',\n          form: /*#__PURE__*/_jsxDEV(PasswordChange, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this)\n        };\n\n      default:\n        return '';\n    }\n  };\n\n  const {\n    title,\n    form\n  } = checkForIdtoRender(formId);\n  return /*#__PURE__*/_jsxDEV(StyledAntModal, {\n    title: title,\n    cancelText: \"Close\",\n    okButtonProps: {\n      style: {\n        display: 'none'\n      }\n    },\n    visible: show,\n    onCancel: setHideModal,\n    children: form\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n});\nModal.propTypes = {\n  show: PropTypes.bool,\n  setHideModal: PropTypes.func,\n  formId: PropTypes.string,\n  setInfo: PropTypes.func.isRequired\n};\nexport default Modal;","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/DashBoardModal.jsx"],"names":["React","connect","PropTypes","setHideModal","PasswordChange","FormInfoChange","StyledAntModal","mapStateToProps","state","show","dashBoardModal","formId","Modal","setInfo","checkForIdtoRender","id","title","form","style","display","propTypes","bool","func","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,uCAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,IAAI,EAAED,KAAK,CAACE,cAAN,CAAqBD,IADO;AAElCE,EAAAA,MAAM,EAAEH,KAAK,CAACE,cAAN,CAAqBC;AAFK,CAAZ,CAAxB;;AAIA,MAAMC,KAAK,GAAGX,OAAO,CAACM,eAAD,EAAkB;AAAEJ,EAAAA;AAAF,CAAlB,CAAP,CAA2C,CAAC;AACxDM,EAAAA,IADwD;AAClDN,EAAAA,YADkD;AACpCQ,EAAAA,MADoC;AAC5BE,EAAAA;AAD4B,CAAD,KAEnD;AACJ,QAAMC,kBAAkB,GAAIC,EAAD,IAAQ;AACjC,YAAQA,EAAR;AACE,WAAK,SAAL;AACE,eAAO;AACLC,UAAAA,KAAK,EAAE,iCADF;AAELC,UAAAA,IAAI,eAAE,QAAC,cAAD;AAAgB,YAAA,OAAO,EAAEJ;AAAzB;AAAA;AAAA;AAAA;AAAA;AAFD,SAAP;;AAKF,WAAK,aAAL;AACE,eAAO;AACLG,UAAAA,KAAK,EAAE,sBADF;AAELC,UAAAA,IAAI,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAFD,SAAP;;AAKF;AACE,eAAO,EAAP;AAdJ;AAgBD,GAjBD;;AAmBA,QAAM;AAACD,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAgBH,kBAAkB,CAACH,MAAD,CAAxC;AAEA,sBACE,QAAC,cAAD;AACE,IAAA,KAAK,EAAEK,KADT;AAEE,IAAA,UAAU,EAAC,OAFb;AAGE,IAAA,aAAa,EAAE;AAACE,MAAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV;AAAR,KAHjB;AAIE,IAAA,OAAO,EAAEV,IAJX;AAKE,IAAA,QAAQ,EAAEN,YALZ;AAAA,cAOGc;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAnCa,CAAd;AAoCAL,KAAK,CAACQ,SAAN,GAAkB;AAChBX,EAAAA,IAAI,EAAEP,SAAS,CAACmB,IADA;AAEhBlB,EAAAA,YAAY,EAAED,SAAS,CAACoB,IAFR;AAGhBX,EAAAA,MAAM,EAAET,SAAS,CAACqB,MAHF;AAIhBV,EAAAA,OAAO,EAAEX,SAAS,CAACoB,IAAV,CAAeE;AAJR,CAAlB;AAOA,eAAeZ,KAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setHideModal } from '../../store/dashBoardModal/middleware';\nimport PasswordChange from './PasswordChange';\nimport FormInfoChange from './FormInfoChange';\nimport StyledAntModal from './DashBoardModalStyled';\n\nconst mapStateToProps = (state) => ({\n  show: state.dashBoardModal.show,\n  formId: state.dashBoardModal.formId,\n})\nconst Modal = connect(mapStateToProps, { setHideModal })(({\n  show, setHideModal, formId, setInfo\n}) => {\n  const checkForIdtoRender = (id) => {\n    switch (id) {\n      case 'setInfo':\n        return {\n          title: 'Change your contact information',\n          form: <FormInfoChange setInfo={setInfo} />\n        }\n        \n      case 'setPassword':\n        return {\n          title: 'Change your password',\n          form: <PasswordChange />\n        }\n\n      default:\n        return ''\n    }\n  }\n\n  const {title, form} = checkForIdtoRender(formId);\n  \n  return (\n    <StyledAntModal\n      title={title}\n      cancelText=\"Close\"\n      okButtonProps={{style: {display: 'none'}}}\n      visible={show}\n      onCancel={setHideModal}\n    >\n      {form}\n    </StyledAntModal>\n  );\n})\nModal.propTypes = {\n  show: PropTypes.bool,\n  setHideModal: PropTypes.func,\n  formId: PropTypes.string,\n  setInfo: PropTypes.func.isRequired,\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}