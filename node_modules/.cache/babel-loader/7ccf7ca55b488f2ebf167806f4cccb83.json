{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/OrderPage/OrderInfo/OrderInfo.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Alert, Spin } from 'antd';\nimport { Redirect } from 'react-router-dom';\nimport StyledOrderInfo from './StyledOrderInfo';\nimport { selectCities, selectOrder, selectIsLoading } from '../../../store/cart/reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OrderInfoComponent = ({\n  order,\n  cities,\n  isLoading\n}) => {\n  const date = new Date(order.date).toLocaleDateString();\n\n  const cityName = cityRefForShipping => {\n    const cityCustomer = cities.find(item => item.Ref === cityRefForShipping);\n    return cityCustomer.CityName;\n  };\n\n  const showOrderInfo = newOrder => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"italic\",\n        children: newOrder.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), \", your order has been accepted.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Thank you for your purchase.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your orderNo is:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: newOrder.orderNo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Order total:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [newOrder.totalSum, \"\\u20B4\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Delivery city:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: cityName(newOrder.deliveryAddress.city)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Delivery branch:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: newOrder.deliveryAddress.branch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Payment method:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: newOrder.paymentInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Our manager will contact you soon.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n\n  const isOrder = Boolean(Object.keys(order).length === 0);\n  if (isOrder && !isLoading) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 37\n  }, this);\n  return /*#__PURE__*/_jsxDEV(StyledOrderInfo, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Spin, {\n      tip: \"Loading...\",\n      size: \"large\",\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        message: \"Please wait...\",\n        description: \"Order information will appear on screen soon\",\n        type: \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this) : showOrderInfo(order)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_c = OrderInfoComponent;\n\nconst mapStateToProps = state => ({\n  order: selectOrder(state),\n  cities: selectCities(state),\n  isLoading: selectIsLoading(state)\n});\n\nconst OrderInfo = connect(mapStateToProps, null)(OrderInfoComponent);\nOrderInfoComponent.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  order: PropTypes.shape({\n    orderNo: PropTypes.string,\n    totalSum: PropTypes.number,\n    paymentInfo: PropTypes.string,\n    date: PropTypes.string\n  }).isRequired,\n  cities: PropTypes.arrayOf(PropTypes.shape({\n    CityName: PropTypes.string.isRequired,\n    Ref: PropTypes.string.isRequired\n  })).isRequired\n};\nexport default OrderInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderInfoComponent\");","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/OrderPage/OrderInfo/OrderInfo.jsx"],"names":["React","PropTypes","connect","Alert","Spin","Redirect","StyledOrderInfo","selectCities","selectOrder","selectIsLoading","OrderInfoComponent","order","cities","isLoading","date","Date","toLocaleDateString","cityName","cityRefForShipping","cityCustomer","find","item","Ref","CityName","showOrderInfo","newOrder","firstName","orderNo","totalSum","deliveryAddress","city","branch","paymentInfo","isOrder","Boolean","Object","keys","length","mapStateToProps","state","OrderInfo","propTypes","bool","isRequired","shape","string","number","arrayOf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Alert, Spin } from 'antd';\nimport { Redirect } from 'react-router-dom';\nimport StyledOrderInfo from './StyledOrderInfo';\nimport { selectCities, selectOrder, selectIsLoading } from '../../../store/cart/reducer';\n\nexport const OrderInfoComponent = ({order, cities, isLoading}) => {\n  const date = new Date(order.date).toLocaleDateString()\n\n  const cityName = (cityRefForShipping) => {\n    const cityCustomer = cities.find((item) => item.Ref === cityRefForShipping)\n    return cityCustomer.CityName\n  }\n\n  const showOrderInfo = (newOrder) => (\n    <div>\n      <h2>\n        <span className=\"italic\">\n          {newOrder.firstName}\n        </span>\n        , your order has been accepted.\n      </h2>\n      <h2>Thank you for your purchase.</h2>\n      <p>\n        Your orderNo is:\n        <span>\n          {newOrder.orderNo}\n        </span>\n      </p>\n      <p>\n        Order total:\n        <span>\n          {newOrder.totalSum}\n          ₴\n        </span>\n      </p>\n      <p>\n        Delivery city:\n        <span>\n          {cityName(newOrder.deliveryAddress.city)}\n        </span>\n      </p>\n      <p>\n        Delivery branch:\n        <span>\n          {newOrder.deliveryAddress.branch}\n        </span>\n      </p>\n      <p>\n        Payment method:\n        <span>\n          {newOrder.paymentInfo}\n        </span>\n      </p>\n      <p>\n        Date:\n        <span>\n          {date}\n        </span>\n      </p>\n      <h2>\n        Our manager will contact you soon.\n      </h2>\n    </div>\n  )\n  const isOrder = Boolean(Object.keys(order).length === 0)\n  if (isOrder && !isLoading) return <Redirect to=\"/\" />\n  return (\n    <StyledOrderInfo>\n      {isLoading\n        ? (\n          <Spin tip=\"Loading...\" size=\"large\">\n            <Alert\n              message=\"Please wait...\"\n              description=\"Order information will appear on screen soon\"\n              type=\"info\"\n            />\n          </Spin>\n        )\n        : showOrderInfo(order) }\n    </StyledOrderInfo>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  order: selectOrder(state),\n  cities: selectCities(state),\n  isLoading: selectIsLoading(state),\n})\n\nconst OrderInfo = connect(mapStateToProps, null)(OrderInfoComponent)\n\nOrderInfoComponent.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  order: PropTypes.shape({\n    orderNo: PropTypes.string,\n    totalSum: PropTypes.number,\n    paymentInfo: PropTypes.string,\n    date: PropTypes.string,\n  }).isRequired,\n  cities: PropTypes.arrayOf(\n    PropTypes.shape({\n      CityName: PropTypes.string.isRequired,\n      Ref: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n}\n\nexport default OrderInfo"]},"metadata":{},"sourceType":"module"}