{"ast":null,"code":"import axios from 'axios';\nimport { message } from 'antd';\nimport { DOMAIN, getHeaders } from '../../utils/constants';\nimport { setCustomerInfo, setOrders } from './actionCreator';\nconst BASE_ENDPOINT = `${DOMAIN}/customers`;\nconst BASE_ENDPOINT_ORDERS = `${DOMAIN}/orders`;\nexport const createCustomer = (credentials, history) => {\n  axios.post(BASE_ENDPOINT, credentials).then(res => {\n    if (res.status === 200) {\n      history.push('/signin');\n      message.info('New account created successfully');\n    }\n  }).catch(error => {\n    const {\n      message\n    } = error.response.data;\n\n    if (message) {\n      message.error(`Error: ${message}`);\n    }\n  });\n};\nexport const changePassword = passwords => {\n  const headers = getHeaders();\n  const res = axios.put(`${BASE_ENDPOINT}/password`, passwords, {\n    headers\n  }).then(data => {\n    if (data.status === 200) {\n      if (data.data.message === 'Password successfully changed') {\n        message.success('Your password have been changed');\n      }\n\n      if (data.data.password === 'Password does not match') {\n        message.error('Old password is wrong ');\n      }\n    }\n  }).catch(error => {\n    if (error.response) {\n      const requestMessage = error.response.data.message;\n      message.error(`Error: ${requestMessage}`);\n    }\n  });\n  return res;\n};\nexport const getCustomer = () => dispatch => {\n  const headers = getHeaders();\n  axios.get(`${BASE_ENDPOINT}/customer`, {\n    headers\n  }).then(data => {\n    if (data.status === 200) {\n      dispatch(setCustomerInfo(data.data));\n    }\n  }).catch(error => error.response);\n};\nexport const updateCustomer = (credentials, succesMessage) => dispatch => {\n  const headers = getHeaders();\n  axios.put(BASE_ENDPOINT, credentials, {\n    headers\n  }).then(data => {\n    if (data.status === 200) {\n      dispatch(setCustomerInfo(data.data));\n\n      if (succesMessage) {\n        message.success('Your contact information has been changed');\n      }\n    }\n  }).catch(error => error.response);\n};\nexport const getOrders = () => dispatch => {\n  const headers = getHeaders();\n  const results = axios.get(BASE_ENDPOINT_ORDERS, {\n    headers\n  }).then(data => {\n    if (data.status === 200) {\n      dispatch(setOrders(data.data));\n    }\n  }).catch(error => error.response);\n  return results;\n};\nexport default getOrders;","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/store/customer/middleware.js"],"names":["axios","message","DOMAIN","getHeaders","setCustomerInfo","setOrders","BASE_ENDPOINT","BASE_ENDPOINT_ORDERS","createCustomer","credentials","history","post","then","res","status","push","info","catch","error","response","data","changePassword","passwords","headers","put","success","password","requestMessage","getCustomer","dispatch","get","updateCustomer","succesMessage","getOrders","results"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { message } from 'antd';\nimport { DOMAIN, getHeaders } from '../../utils/constants';\nimport { setCustomerInfo, setOrders } from './actionCreator';\n\nconst BASE_ENDPOINT = `${DOMAIN}/customers`;\nconst BASE_ENDPOINT_ORDERS = `${DOMAIN}/orders`;\n\nexport const createCustomer = (credentials, history) => {\n  axios.post(BASE_ENDPOINT, credentials)\n    .then((res) => {\n      if (res.status === 200) {\n        history.push('/signin')\n        message.info('New account created successfully')\n      }\n    })\n    .catch((error) => {\n      const { message } = error.response.data\n      if (message) {\n        message.error(`Error: ${message}`)\n      }\n    })\n}\n\nexport const changePassword = (passwords) => {\n  const headers = getHeaders();\n  const res = axios.put(`${BASE_ENDPOINT}/password`, passwords, {headers})\n    .then((data) => {\n      if (data.status === 200) {\n        if (data.data.message === 'Password successfully changed') {\n          message.success('Your password have been changed')\n        }\n        if (data.data.password === 'Password does not match') {\n          message.error('Old password is wrong ')\n        }\n      }\n    })\n    .catch((error) => {\n      if (error.response) {\n        const requestMessage = error.response.data.message\n        message.error(`Error: ${requestMessage}`)\n      }\n    })\n  return res\n}\n  \nexport const getCustomer = () => (dispatch) => {\n  const headers = getHeaders()\n  axios.get(`${BASE_ENDPOINT}/customer`, { headers })\n    .then((data) => {\n      if (data.status === 200) {\n        dispatch(setCustomerInfo(data.data))\n      }\n    })\n    .catch((error) => error.response)\n}\n\nexport const updateCustomer = (credentials, succesMessage) => (dispatch) => {\n  const headers = getHeaders();\n  axios.put(BASE_ENDPOINT, credentials, {headers})\n    .then((data) => {\n      if (data.status === 200) {\n        dispatch(setCustomerInfo(data.data))\n        if (succesMessage) {\n          message.success('Your contact information has been changed')\n        }\n      }\n    })\n    .catch((error) => error.response)\n}\n\nexport const getOrders = () => (dispatch) => {\n  const headers = getHeaders()\n  const results = axios.get(BASE_ENDPOINT_ORDERS, {headers})\n    .then((data) => {\n      if (data.status === 200) {\n        dispatch(setOrders(data.data))\n      }\n    })\n    .catch((error) => error.response)\n  return results\n}\nexport default getOrders;"]},"metadata":{},"sourceType":"module"}