{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { reducer as authReducer, MODULE_NAME as authModule } from './auth/reducer';\nimport { reducer as dashBoardModalReducer, MODULE_NAME as dashBoardModal } from './dashBoardModal/reducer';\nimport { MODULE_NAME as cart, cartReducer } from './cart/reducer';\nimport { MODULE_NAME as productsModule, reducer as productsReducer } from './products/reducer';\nimport { subscribersReducer } from './createSubscribe/reducer';\nimport { MODULE_NAME as wishlistModule, reducer as wishlistReducer } from './wishlist/reducer';\nimport { MODULE_NAME as mainCatalog, mainCatalogReducer } from './mainCatalog/reducer';\nimport { MODULE_NAME as subscribeModalModule, reducer as subscribeModalReducer } from './subscriceOnProductModal/reducer';\nconst persistConfig = {\n  key: 'authLS',\n  storage\n};\nconst persistedAuthReducer = persistReducer(persistConfig, authReducer);\nconst rootReducer = combineReducers({\n  [authModule]: persistedAuthReducer,\n  [cart]: cartReducer,\n  [productsModule]: productsReducer,\n  subscribe: subscribersReducer,\n  [dashBoardModal]: dashBoardModalReducer,\n  [wishlistModule]: wishlistReducer,\n  [mainCatalog]: mainCatalogReducer,\n  [subscribeModalModule]: subscribeModalReducer\n});\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\nexport const persistor = persistStore(store);\nexport default store;","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","composeWithDevTools","thunk","persistStore","persistReducer","storage","reducer","authReducer","MODULE_NAME","authModule","dashBoardModalReducer","dashBoardModal","cart","cartReducer","productsModule","productsReducer","subscribersReducer","wishlistModule","wishlistReducer","mainCatalog","mainCatalogReducer","subscribeModalModule","subscribeModalReducer","persistConfig","key","persistedAuthReducer","rootReducer","subscribe","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,OAAO,IAAIC,WAApB,EAAiCC,WAAW,IAAIC,UAAhD,QAAkE,gBAAlE;AACA,SAASH,OAAO,IAAII,qBAApB,EAA2CF,WAAW,IAAIG,cAA1D,QAAgF,0BAAhF;AACA,SAASH,WAAW,IAAII,IAAxB,EAA8BC,WAA9B,QAAiD,gBAAjD;AACA,SAASL,WAAW,IAAIM,cAAxB,EAAwCR,OAAO,IAAIS,eAAnD,QAA0E,oBAA1E;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,SAASR,WAAW,IAAIS,cAAxB,EAAwCX,OAAO,IAAIY,eAAnD,QAA0E,oBAA1E;AACA,SAASV,WAAW,IAAIW,WAAxB,EAAqCC,kBAArC,QAA8D,uBAA9D;AACA,SAASZ,WAAW,IAAIa,oBAAxB,EAA8Cf,OAAO,IAAIgB,qBAAzD,QAAsF,mCAAtF;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,QADe;AAEpBnB,EAAAA;AAFoB,CAAtB;AAKA,MAAMoB,oBAAoB,GAAGrB,cAAc,CAACmB,aAAD,EAAgBhB,WAAhB,CAA3C;AAEA,MAAMmB,WAAW,GAAG3B,eAAe,CAAC;AAClC,GAACU,UAAD,GAAcgB,oBADoB;AAElC,GAACb,IAAD,GAAQC,WAF0B;AAGlC,GAACC,cAAD,GAAkBC,eAHgB;AAIlCY,EAAAA,SAAS,EAAEX,kBAJuB;AAKlC,GAACL,cAAD,GAAkBD,qBALgB;AAMlC,GAACO,cAAD,GAAkBC,eANgB;AAOlC,GAACC,WAAD,GAAeC,kBAPmB;AAQlC,GAACC,oBAAD,GAAwBC;AARU,CAAD,CAAnC;AAWA,OAAO,MAAMM,KAAK,GAAG9B,WAAW,CAAC4B,WAAD,EAAczB,mBAAmB,CAACD,eAAe,CAACE,KAAD,CAAhB,CAAjC,CAAzB;AACP,OAAO,MAAM2B,SAAS,GAAG1B,YAAY,CAACyB,KAAD,CAA9B;AAEP,eAAeA,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { reducer as authReducer, MODULE_NAME as authModule } from './auth/reducer';\nimport { reducer as dashBoardModalReducer, MODULE_NAME as dashBoardModal } from './dashBoardModal/reducer';\nimport { MODULE_NAME as cart, cartReducer } from './cart/reducer'\nimport { MODULE_NAME as productsModule, reducer as productsReducer } from './products/reducer';\nimport { subscribersReducer } from './createSubscribe/reducer'\nimport { MODULE_NAME as wishlistModule, reducer as wishlistReducer } from './wishlist/reducer'\nimport { MODULE_NAME as mainCatalog, mainCatalogReducer} from './mainCatalog/reducer';\nimport { MODULE_NAME as subscribeModalModule, reducer as subscribeModalReducer } from './subscriceOnProductModal/reducer'\n\nconst persistConfig = {\n  key: 'authLS',\n  storage,\n}\n\nconst persistedAuthReducer = persistReducer(persistConfig, authReducer)\n\nconst rootReducer = combineReducers({\n  [authModule]: persistedAuthReducer,\n  [cart]: cartReducer,\n  [productsModule]: productsReducer,\n  subscribe: subscribersReducer,\n  [dashBoardModal]: dashBoardModalReducer,\n  [wishlistModule]: wishlistReducer,\n  [mainCatalog]: mainCatalogReducer,\n  [subscribeModalModule]: subscribeModalReducer\n});\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\nexport const persistor = persistStore(store);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}