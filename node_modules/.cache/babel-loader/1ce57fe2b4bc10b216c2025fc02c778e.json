{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/Checkout/FormCheckout/FormCheckout.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useRef } from 'react';\nimport { Form, Input, Select } from 'antd';\nimport { connect } from 'react-redux';\nimport { selectBranches, selectCities, selectCustomer } from '../../../store/cart/reducer';\nimport { getCity, getShippingCost } from '../../../store/cart/middleware';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => ({\n  cities: selectCities(state),\n  branches: selectBranches(state),\n  customer: selectCustomer(state)\n});\n\nconst FormCheckout = connect(mapStateToProps, {\n  getCity,\n  getShippingCost\n})(_s(({\n  cities,\n  branches,\n  customer,\n  getCity,\n  getShippingCost\n}) => {\n  _s();\n\n  const senderCityRef = useRef();\n  const recipientCityRef = useRef();\n\n  const getShippingCostHandler = () => {\n    getShippingCost(senderCityRef, recipientCityRef);\n  };\n\n  const formLayout = {\n    labelCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 8\n      },\n      md: {\n        span: 8\n      },\n      lg: {\n        span: 7\n      }\n    },\n    wrapperCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 16\n      },\n      md: {\n        span: 16\n      },\n      lg: {\n        span: 12\n      }\n    }\n  };\n  const {\n    Option\n  } = Select;\n  const fields = [{\n    name: 'email',\n    value: customer.email\n  }, {\n    name: 'firstName',\n    value: customer.firstName\n  }, {\n    name: 'lastName',\n    value: customer.lastName\n  }, {\n    name: 'phoneNumber',\n    value: customer.telephone\n  }, {\n    name: 'country',\n    value: 'Ukraine'\n  }];\n  return /*#__PURE__*/_jsxDEV(Form, { ...formLayout,\n    name: \"checkout-form\",\n    fields: fields,\n    initialValues: {\n      remember: true\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Email\",\n      name: \"email\",\n      rules: [{\n        required: true,\n        message: 'Please input your email.'\n      }, {\n        type: 'email',\n        message: 'Entered data is not an email.'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"First name\",\n      name: \"firstName\",\n      id: customer.firstName,\n      options: customer.firstName,\n      rules: [{\n        required: true,\n        message: 'Please input your name.'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"First name\",\n        value: customer.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Last name\",\n      name: \"lastName\",\n      rules: [{\n        required: true,\n        message: 'Please input your Last name.'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Last name\",\n        value: customer.lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Phone number\",\n      name: \"phoneNumber\",\n      rules: [{\n        required: true,\n        message: 'Please input your phone number'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Mobile Number (+380 XX XXX XXXX)\",\n        value: customer.telephone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Country\",\n      name: \"country\",\n      rules: [{\n        required: true,\n        message: 'Country is required'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Sender city\",\n      name: \"senderCity\",\n      rules: [{\n        required: true,\n        message: 'Sender city is required'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Select sender city\",\n        onChange: getCity,\n        ref: senderCityRef,\n        children: cities.map(item => /*#__PURE__*/_jsxDEV(Option, {\n          value: item.Ref,\n          children: item.CityName\n        }, item.Ref, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"\\u2116 sender branch\",\n      name: \"SenderBranch\",\n      rules: [{\n        required: true,\n        message: 'Branch is required'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Select Sender branch\",\n        children: branches.map(item => /*#__PURE__*/_jsxDEV(Option, {\n          value: item.branchRef,\n          children: item.branchName\n        }, item.branchRef, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Recipient city\",\n      name: \"recipientCity\",\n      rules: [{\n        required: true,\n        message: 'Recipient city is required'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Select recipient city\",\n        onChange: getCity,\n        ref: recipientCityRef,\n        children: cities.map(item => /*#__PURE__*/_jsxDEV(Option, {\n          value: item.Ref,\n          children: item.CityName\n        }, item.Ref, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"\\u2116 recipient branch\",\n      name: \"recipientBranch\",\n      rules: [{\n        required: true,\n        message: 'Branch is required'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Select recipient branch\",\n        onChange: getShippingCostHandler,\n        children: branches.map(item => /*#__PURE__*/_jsxDEV(Option, {\n          value: item.branchRef,\n          children: item.branchName\n        }, item.branchRef, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}, \"ekOyYl284+u2hpUp1BIblVjMVAA=\"));\nexport default FormCheckout;","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/Checkout/FormCheckout/FormCheckout.jsx"],"names":["React","useRef","Form","Input","Select","connect","selectBranches","selectCities","selectCustomer","getCity","getShippingCost","mapStateToProps","state","cities","branches","customer","FormCheckout","senderCityRef","recipientCityRef","getShippingCostHandler","formLayout","labelCol","xs","span","sm","md","lg","wrapperCol","Option","fields","name","value","email","firstName","lastName","telephone","remember","required","message","type","map","item","Ref","CityName","branchRef","branchName"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport React, {useRef} from 'react';\nimport { Form, Input, Select} from 'antd';\nimport { connect } from 'react-redux';\nimport {\n  selectBranches, selectCities, selectCustomer,\n} from '../../../store/cart/reducer';\nimport { getCity, getShippingCost } from '../../../store/cart/middleware';\n\nconst mapStateToProps = (state) => ({\n  cities: selectCities(state),\n  branches: selectBranches(state),\n  customer: selectCustomer(state),\n})\n\nconst FormCheckout = connect(mapStateToProps, {getCity, getShippingCost})(({\n  cities, branches, customer, getCity, getShippingCost\n}) => {\n  const senderCityRef = useRef();\n  const recipientCityRef = useRef();\n\n  const getShippingCostHandler = () => {\n    getShippingCost(senderCityRef, recipientCityRef)\n  }\n\n  const formLayout = {\n    labelCol: {\n      xs: {\n        span: 24,\n      },\n      sm: {\n        span: 8,\n      },\n      md: {\n        span: 8,\n      },\n      lg: {\n        span: 7,\n      },\n    },\n    wrapperCol: {\n      xs: {\n        span: 24,\n      },\n      sm: {\n        span: 16,\n      },\n      md: {\n        span: 16,\n      },\n      lg: {\n        span: 12,\n      },\n    },\n  };\n        \n  const { Option } = Select;\n\n  const fields = [{\n    name: 'email',\n    value: customer.email\n  },\n  {\n    name: 'firstName',\n    value: customer.firstName\n  },\n  {\n    name: 'lastName',\n    value: customer.lastName\n  },\n  {\n    name: 'phoneNumber',\n    value: customer.telephone\n  },\n  {\n    name: 'country',\n    value: 'Ukraine'\n  },\n  ]\n\n  return (\n    <Form\n      {...formLayout}\n      name=\"checkout-form\"\n      fields={fields}\n      initialValues={{\n        remember: true,\n      }}\n    >\n      <Form.Item\n        label=\"Email\"\n        name=\"email\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your email.',\n          },\n          {\n            type: 'email',\n            message: 'Entered data is not an email.',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      \n      <Form.Item\n        label=\"First name\"\n        name=\"firstName\"\n        id={customer.firstName}\n        options={customer.firstName}\n        rules={[\n          {\n            required: true,\n            message: 'Please input your name.',\n          },\n        ]}\n      >\n        <Input placeholder=\"First name\" value={customer.firstName} />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Last name\"\n        name=\"lastName\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your Last name.',\n          },\n        ]}\n      >\n        <Input placeholder=\"Last name\" value={customer.lastName} />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Phone number\"\n        name=\"phoneNumber\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your phone number',\n          },\n        ]}\n      >\n        <Input placeholder=\"Mobile Number (+380 XX XXX XXXX)\" value={customer.telephone} />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Country\"\n        name=\"country\"\n        rules={[{ required: true, message: 'Country is required' }]}\n      >\n        <Input disabled />\n      </Form.Item>\n      \n      <Form.Item\n        label=\"Sender city\"\n        name=\"senderCity\"\n        rules={[{ required: true, message: 'Sender city is required' }]}\n      >\n        <Select placeholder=\"Select sender city\" onChange={getCity} ref={senderCityRef}>\n          {cities.map((item) => (\n            <Option value={item.Ref} key={item.Ref}>\n              {item.CityName}\n            </Option>\n          ))}\n        </Select>\n      </Form.Item>\n\n      <Form.Item\n        label=\"№ sender branch\"\n        name=\"SenderBranch\"\n        rules={[{ required: true, message: 'Branch is required' }]}\n      >\n        <Select placeholder=\"Select Sender branch\">\n          {branches.map((item) => (\n            <Option value={item.branchRef} key={item.branchRef}>\n              {item.branchName}\n            </Option>\n          ))}\n        </Select>\n      </Form.Item>\n\n      <Form.Item\n        label=\"Recipient city\"\n        name=\"recipientCity\"\n        rules={[{ required: true, message: 'Recipient city is required' }]}\n      >\n        <Select placeholder=\"Select recipient city\" onChange={getCity} ref={recipientCityRef}>\n          {cities.map((item) => (\n            <Option value={item.Ref} key={item.Ref}>\n              {item.CityName}\n            </Option>\n          ))}\n        </Select>\n      </Form.Item>\n\n      <Form.Item\n        label=\"№ recipient branch\"\n        name=\"recipientBranch\"\n        rules={[{ required: true, message: 'Branch is required' }]}\n      >\n        <Select placeholder=\"Select recipient branch\" onChange={getShippingCostHandler}>\n          {branches.map((item) => (\n            <Option value={item.branchRef} key={item.branchRef}>\n              {item.branchName}\n            </Option>\n          ))}\n        </Select>\n      </Form.Item>\n    </Form>\n  )\n})\nexport default FormCheckout;"]},"metadata":{},"sourceType":"module"}