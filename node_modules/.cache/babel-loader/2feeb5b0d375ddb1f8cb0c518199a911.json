{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/Subscribed/Subscribe.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable import/no-cycle */\n\n/* eslint-disable react/prop-types */\n\n/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport createNewSubscribe, { getSubscriber } from '../../../store/createSubscribe/middleware';\nimport { BlockInfo, TextInfo } from '../StyledDashBoard';\nimport { letterHtml, letterSubject } from '../../Footer/footer-components/footer-config/letterConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Subscribe = connect(null, {\n  createNewSubscribe\n})(_s(({\n  email,\n  createNewSubscribe\n}) => {\n  _s();\n\n  const [subscribedInfo, setSubscribedInfo] = useState(false); // email false\n\n  useEffect(() => {\n    const getSubscriberInfo = async () => {\n      if (email) {\n        const checkSubscription = await getSubscriber(email);\n        console.log(checkSubscription.status);\n\n        if (checkSubscription.status === 200) {\n          setSubscribedInfo(() => true);\n        }\n      }\n    };\n\n    getSubscriberInfo();\n  }, [email, setSubscribedInfo]);\n\n  const addSubscriber = async (email, letterSubject, letterHtml) => {\n    const result = await createNewSubscribe({\n      email,\n      letterSubject,\n      letterHtml\n    });\n    if (!result && result.status !== 200) return;\n    console.log(result.data.subscriber.enabled);\n  };\n\n  return /*#__PURE__*/_jsxDEV(BlockInfo, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Newsletters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextInfo, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You have been subscribed to newsupdates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}, \"CLVH47RYnruY0df1bTjtWS7F78s=\"));\nexport default Subscribe;","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/Subscribed/Subscribe.jsx"],"names":["React","useEffect","useState","styled","connect","createNewSubscribe","getSubscriber","BlockInfo","TextInfo","letterHtml","letterSubject","Subscribe","email","subscribedInfo","setSubscribedInfo","getSubscriberInfo","checkSubscription","console","log","status","addSubscriber","result","data","subscriber","enabled"],"mappings":";;;AAAA;;AACA;;AACA;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,kBAAP,IAA6BC,aAA7B,QAAkD,2CAAlD;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,oBAApC;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,2DAA1C;;AAEA,MAAMC,SAAS,GAAGP,OAAO,CAAC,IAAD,EAAO;AAACC,EAAAA;AAAD,CAAP,CAAP,IAAoC,CAAC;AAACO,EAAAA,KAAD;AAAQP,EAAAA;AAAR,CAAD,KAAiC;AAAA;;AACrF,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,KAAD,CAApD,CADqF,CACzB;;AAE5DD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,iBAAiB,GAAG,YAAY;AACpC,UAAIH,KAAJ,EAAW;AACT,cAAMI,iBAAiB,GAAG,MAAMV,aAAa,CAACM,KAAD,CAA7C;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYF,iBAAiB,CAACG,MAA9B;;AACA,YAAIH,iBAAiB,CAACG,MAAlB,KAA6B,GAAjC,EAAsC;AACpCL,UAAAA,iBAAiB,CAAC,MAAM,IAAP,CAAjB;AACD;AACF;AACF,KARD;;AASAC,IAAAA,iBAAiB;AAClB,GAXQ,EAWN,CAACH,KAAD,EAAQE,iBAAR,CAXM,CAAT;;AAaA,QAAMM,aAAa,GAAG,OAAOR,KAAP,EAAcF,aAAd,EAA6BD,UAA7B,KAA4C;AAChE,UAAMY,MAAM,GAAG,MAAMhB,kBAAkB,CAAC;AAACO,MAAAA,KAAD;AAAQF,MAAAA,aAAR;AAAuBD,MAAAA;AAAvB,KAAD,CAAvC;AACA,QAAI,CAACY,MAAD,IAAWA,MAAM,CAACF,MAAP,KAAkB,GAAjC,EAAsC;AACtCF,IAAAA,OAAO,CAACC,GAAR,CAAYG,MAAM,CAACC,IAAP,CAAYC,UAAZ,CAAuBC,OAAnC;AACD,GAJD;;AAMA,sBACE,QAAC,SAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE,QAAC,QAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAnCiB,kCAAlB;AAoCA,eAAeb,SAAf","sourcesContent":["/* eslint-disable import/no-cycle */\n/* eslint-disable react/prop-types */\n/* eslint-disable no-unused-vars */\nimport React, {useEffect, useState} from 'react';\nimport styled from 'styled-components'\nimport { connect } from 'react-redux';\nimport createNewSubscribe, { getSubscriber } from '../../../store/createSubscribe/middleware';\nimport { BlockInfo, TextInfo } from '../StyledDashBoard';\nimport { letterHtml, letterSubject } from '../../Footer/footer-components/footer-config/letterConfig';\n\nconst Subscribe = connect(null, {createNewSubscribe})(({email, createNewSubscribe}) => {\n  const [subscribedInfo, setSubscribedInfo] = useState(false) // email false\n\n  useEffect(() => {\n    const getSubscriberInfo = async () => {\n      if (email) {\n        const checkSubscription = await getSubscriber(email);\n        console.log(checkSubscription.status);\n        if (checkSubscription.status === 200) {\n          setSubscribedInfo(() => true)\n        }\n      }\n    }\n    getSubscriberInfo()\n  }, [email, setSubscribedInfo])\n\n  const addSubscriber = async (email, letterSubject, letterHtml) => {\n    const result = await createNewSubscribe({email, letterSubject, letterHtml})\n    if (!result && result.status !== 200) return\n    console.log(result.data.subscriber.enabled);\n  }\n\n  return (\n    <BlockInfo>\n      <h4>Newsletters</h4>\n      <div>\n        <TextInfo>\n          <p>\n            You have been subscribed to newsupdates\n          </p>\n        </TextInfo>\n      </div>\n    </BlockInfo>\n    \n  );\n})\nexport default Subscribe;"]},"metadata":{},"sourceType":"module"}