{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/PasswordChange.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/jsx-props-no-spreading */\n\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { setHideModal } from '../../store/modal/middleware';\nimport { changePassword } from '../../store/customer/middleware';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n}; // eslint-disable-next-line react/prop-types\n\nconst PasswordChange = connect(null, {\n  setHideModal\n})(_s(({\n  setHideModal\n}) => {\n  _s();\n\n  const [form] = Form.useForm();\n\n  const onFinish = ({\n    middlePassword,\n    ...rest\n  }) => {\n    changePassword(rest);\n    form.resetFields();\n  };\n\n  const fields = [{\n    name: 'password',\n    value: customer.password\n  }, {\n    name: 'middlePassword',\n    value: customer.middlePassword\n  }, {\n    name: 'newPassword',\n    value: customer.newPassword\n  }];\n  return /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n    form: form,\n    fields: fields,\n    name: \"register\",\n    onFinish: onFinish,\n    scrollToFirstError: true,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"password\",\n      label: \"Old Password\",\n      options: customer.firstName,\n      rules: [{\n        required: true,\n        message: 'Please input your old password!'\n      }, {\n        message: 'Password length must be at least 8 symbols',\n        min: 8\n      }],\n      hasFeedback: true,\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {\n        value: customer.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"middlePassword\",\n      label: \"Password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }, {\n        message: 'Password length must be at least 8 symbols',\n        min: 8\n      }],\n      hasFeedback: true,\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"newPassword\",\n      label: \"Confirm Password\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, {\n        message: 'Password length must be at least 8 symbols',\n        min: 8\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(_, value) {\n          if (!value || getFieldValue('middlePassword') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(new Error('The two passwords that you entered do not match!'));\n        }\n\n      })],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        onClick: setHideModal,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n}));\nexport default PasswordChange;","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/PasswordChange.jsx"],"names":["React","Form","Input","Button","connect","setHideModal","changePassword","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","PasswordChange","form","useForm","onFinish","middlePassword","rest","resetFields","fields","name","value","customer","password","newPassword","firstName","required","message","min","getFieldValue","validator","_","Promise","resolve","reject","Error"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\nimport { connect } from 'react-redux';\nimport { setHideModal } from '../../store/modal/middleware';\nimport { changePassword } from '../../store/customer/middleware';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\n// eslint-disable-next-line react/prop-types\nconst PasswordChange = connect(null, { setHideModal })(({ setHideModal }) => {\n  const [form] = Form.useForm();\n  const onFinish = ({middlePassword, ...rest}) => {\n    changePassword(rest);\n    form.resetFields()\n  };\n  const fields = [{\n    name: 'password',\n    value: customer.password\n  },\n  {\n    name: 'middlePassword',\n    value: customer.middlePassword\n  },\n  {\n    name: 'newPassword',\n    value: customer.newPassword\n  },\n  ]\n  \n  return (\n    <Form\n      {...formItemLayout}\n      form={form}\n      fields={fields}\n      name=\"register\"\n      onFinish={onFinish}\n      scrollToFirstError\n    >\n      <Form.Item\n        name=\"password\"\n        label=\"Old Password\"\n        options={customer.firstName}\n        rules={[\n          {\n            required: true,\n            message: 'Please input your old password!',\n          },\n          {\n            message: 'Password length must be at least 8 symbols',\n            min: 8\n          },\n        ]}\n        hasFeedback\n      >\n        <Input.Password value={customer.firstName} />\n      </Form.Item>\n\n      <Form.Item\n        name=\"middlePassword\"\n        label=\"Password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n          {\n            message: 'Password length must be at least 8 symbols',\n            min: 8\n          },\n        ]}\n        hasFeedback\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"newPassword\"\n        label=\"Confirm Password\"\n        dependencies={['password']}\n        hasFeedback\n        rules={[\n          {\n            required: true,\n            message: 'Please confirm your password!',\n          },\n          {\n            message: 'Password length must be at least 8 symbols',\n            min: 8\n          },\n          ({ getFieldValue }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('middlePassword') === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject(new Error('The two passwords that you entered do not match!'));\n            },\n          }),\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n    \n      <Form.Item {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\" onClick={setHideModal}>\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n})\n\nexport default PasswordChange;\n"]},"metadata":{},"sourceType":"module"}