{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/ProductSubscribeModal/ProductSubscribeModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Form, Input, message } from 'antd';\nimport { hideModal } from '../../store/subscriceOnProductModal/middleware';\nimport { selectIsOpenModal } from '../../store/subscriceOnProductModal/reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => ({\n  isOpen: selectIsOpenModal(state)\n});\n\nconst ProductSubscribeModal = connect(mapStateToProps, {\n  hideModal\n})(_s(({\n  isOpen,\n  hideModal\n}) => {\n  _s();\n\n  const [form] = Form.useForm();\n\n  const onSubmit = () => {\n    form.resetFields();\n    hideModal();\n    message.success('Thank you, you will be notified when this item is in stock!');\n  };\n\n  const onCancel = () => {\n    form.resetFields();\n    hideModal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"Notify on product availability\",\n    visible: isOpen,\n    okText: \"Subscribe\",\n    onCancel: onCancel,\n    okButtonProps: {\n      htmlType: 'submit',\n      form: 'subscribeOnProductsForm'\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      name: \"subscribeOnProductsForm\",\n      onFinish: onSubmit,\n      form: form,\n      children: /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Email\",\n        name: \"email\",\n        rules: [{\n          required: true,\n          message: 'Please input your email.'\n        }, {\n          type: 'email',\n          message: 'Entered data is not an email.'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n}));\nexport default ProductSubscribeModal;","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/ProductSubscribeModal/ProductSubscribeModal.jsx"],"names":["React","connect","Modal","Form","Input","message","hideModal","selectIsOpenModal","mapStateToProps","state","isOpen","ProductSubscribeModal","form","useForm","onSubmit","resetFields","success","onCancel","htmlType","required","type"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,KADF,EAEEC,IAFF,EAGEC,KAHF,EAIEC,OAJF,QAKO,MALP;AAMA,SAASC,SAAT,QAA0B,gDAA1B;AACA,SAASC,iBAAT,QAAkC,6CAAlC;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,MAAM,EAAEH,iBAAiB,CAACE,KAAD;AADS,CAAZ,CAAxB;;AAIA,MAAME,qBAAqB,GAAGV,OAAO,CAACO,eAAD,EAAkB;AAAEF,EAAAA;AAAF,CAAlB,CAAP,IAAwC,CACpE;AACEI,EAAAA,MADF;AAEEJ,EAAAA;AAFF,CADoE,KAKjE;AAAA;;AACH,QAAM,CAACM,IAAD,IAAST,IAAI,CAACU,OAAL,EAAf;;AAEA,QAAMC,QAAQ,GAAG,MAAM;AACrBF,IAAAA,IAAI,CAACG,WAAL;AACAT,IAAAA,SAAS;AACTD,IAAAA,OAAO,CAACW,OAAR,CAAgB,6DAAhB;AACD,GAJD;;AAKA,QAAMC,QAAQ,GAAG,MAAM;AACrBL,IAAAA,IAAI,CAACG,WAAL;AACAT,IAAAA,SAAS;AACV,GAHD;;AAKA,sBACE,QAAC,KAAD;AACE,IAAA,KAAK,EAAC,gCADR;AAEE,IAAA,OAAO,EAAEI,MAFX;AAGE,IAAA,MAAM,EAAC,WAHT;AAIE,IAAA,QAAQ,EAAEO,QAJZ;AAKE,IAAA,aAAa,EAAE;AAACC,MAAAA,QAAQ,EAAE,QAAX;AAAqBN,MAAAA,IAAI,EAAE;AAA3B,KALjB;AAAA,2BAOE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,yBAAX;AAAqC,MAAA,QAAQ,EAAEE,QAA/C;AAAyD,MAAA,IAAI,EAAEF,IAA/D;AAAA,6BACE,QAAC,IAAD,CAAM,IAAN;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,KAAK,EAAE,CACL;AACEO,UAAAA,QAAQ,EAAE,IADZ;AAEEd,UAAAA,OAAO,EAAE;AAFX,SADK,EAKL;AACEe,UAAAA,IAAI,EAAE,OADR;AAEEf,UAAAA,OAAO,EAAE;AAFX,SALK,CAHT;AAAA,+BAcE,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CA9C6B;AAAA,UAMbF,IAAI,CAACU,OANQ;AAAA,GAA9B;AA+CA,eAAeF,qBAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Modal,\n  Form,\n  Input,\n  message\n} from 'antd';\nimport { hideModal } from '../../store/subscriceOnProductModal/middleware'\nimport { selectIsOpenModal } from '../../store/subscriceOnProductModal/reducer'\n\nconst mapStateToProps = (state) => ({\n  isOpen: selectIsOpenModal(state),\n})\n\nconst ProductSubscribeModal = connect(mapStateToProps, { hideModal })((\n  {\n    isOpen,\n    hideModal,\n  }\n) => {\n  const [form] = Form.useForm()\n\n  const onSubmit = () => {\n    form.resetFields()\n    hideModal()\n    message.success('Thank you, you will be notified when this item is in stock!')\n  };\n  const onCancel = () => {\n    form.resetFields()\n    hideModal()\n  }\n\n  return (\n    <Modal\n      title=\"Notify on product availability\"\n      visible={isOpen}\n      okText=\"Subscribe\"\n      onCancel={onCancel}\n      okButtonProps={{htmlType: 'submit', form: 'subscribeOnProductsForm'}}\n    >\n      <Form name=\"subscribeOnProductsForm\" onFinish={onSubmit} form={form}>\n        <Form.Item\n          label=\"Email\"\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your email.',\n            },\n            {\n              type: 'email',\n              message: 'Entered data is not an email.',\n            },\n          ]}\n        >\n          <Input placeholder=\"Email\" />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n})\nexport default ProductSubscribeModal"]},"metadata":{},"sourceType":"module"}