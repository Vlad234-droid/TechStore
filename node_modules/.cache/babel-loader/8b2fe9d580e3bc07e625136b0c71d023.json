{"ast":null,"code":"/* eslint-disable no-extra-boolean-cast */\n// import axios from 'axios';\n// import { message } from 'antd';\n// import { DOMAIN, getHeaders } from '../general';\nconst BASE_ENDPOINT = `${DOMAIN}/customers`;\nexport const createCustomer = (credentials, history) => {\n  axios.post(BASE_ENDPOINT, credentials).then(res => {\n    if (res.status === 200) {\n      history.push('/');\n      message.info('New account created successfully');\n    }\n  }).catch(error => {\n    console.log(error.response);\n\n    if (error.response) {\n      const requestMessage = error.response.data.message;\n      message.error(`Error: ${requestMessage}`);\n    }\n  });\n};\nexport const changePassword = passwords => {\n  const headers = getHeaders();\n  const res = axios.put(`${BASE_ENDPOINT}/password`, passwords, {\n    headers\n  }).then(data => {\n    if (data.status === 200) {\n      if (data.data.message === 'Password successfully changed') {\n        message.success('Your password have been changed');\n      }\n\n      if (data.data.password === 'Password does not match') {\n        message.error('Old password is wrong ');\n      }\n    }\n  }).catch(error => {\n    if (error.response) {\n      const requestMessage = error.response.data.message;\n      message.error(`Error: ${requestMessage}`);\n    }\n  });\n  return res;\n};\nexport const updateCustomer = credentials => {\n  const headers = getHeaders();\n  const res = axios.put(BASE_ENDPOINT, credentials, {\n    headers\n  }).then(data => {\n    if (data.status === 200) {\n      message.success('Your contact information has been changed');\n    }\n  }).catch(error => error.response);\n  return res;\n};\nexport const getCustomer = () => {\n  const headers = getHeaders();\n  const res = axios.get(`${BASE_ENDPOINT}/customer`, {\n    headers\n  }).then(data => data).catch(error => error.response);\n  return res;\n};","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/store/customer/middleware.js"],"names":["BASE_ENDPOINT","DOMAIN","createCustomer","credentials","history","axios","post","then","res","status","push","message","info","catch","error","console","log","response","requestMessage","data","changePassword","passwords","headers","getHeaders","put","success","password","updateCustomer","getCustomer","get"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,MAAMA,aAAa,GAAI,GAAEC,MAAO,YAAhC;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,WAAD,EAAcC,OAAd,KAA0B;AACtDC,EAAAA,KAAK,CAACC,IAAN,CAAWN,aAAX,EAA0BG,WAA1B,EACGI,IADH,CACSC,GAAD,IAAS;AACb,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBL,MAAAA,OAAO,CAACM,IAAR,CAAa,GAAb;AACAC,MAAAA,OAAO,CAACC,IAAR,CAAa,kCAAb;AACD;AACF,GANH,EAOGC,KAPH,CAOUC,KAAD,IAAW;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAlB;;AACA,QAAIH,KAAK,CAACG,QAAV,EAAoB;AAClB,YAAMC,cAAc,GAAGJ,KAAK,CAACG,QAAN,CAAeE,IAAf,CAAoBR,OAA3C;AACAA,MAAAA,OAAO,CAACG,KAAR,CAAe,UAASI,cAAe,EAAvC;AACD;AACF,GAbH;AAcD,CAfM;AAiBP,OAAO,MAAME,cAAc,GAAIC,SAAD,IAAe;AAC3C,QAAMC,OAAO,GAAGC,UAAU,EAA1B;AACA,QAAMf,GAAG,GAAGH,KAAK,CAACmB,GAAN,CAAW,GAAExB,aAAc,WAA3B,EAAuCqB,SAAvC,EAAkD;AAACC,IAAAA;AAAD,GAAlD,EACTf,IADS,CACHY,IAAD,IAAU;AACd,QAAIA,IAAI,CAACV,MAAL,KAAgB,GAApB,EAAyB;AACvB,UAAIU,IAAI,CAACA,IAAL,CAAUR,OAAV,KAAsB,+BAA1B,EAA2D;AACzDA,QAAAA,OAAO,CAACc,OAAR,CAAgB,iCAAhB;AACD;;AACD,UAAIN,IAAI,CAACA,IAAL,CAAUO,QAAV,KAAuB,yBAA3B,EAAsD;AACpDf,QAAAA,OAAO,CAACG,KAAR,CAAc,wBAAd;AACD;AACF;AACF,GAVS,EAWTD,KAXS,CAWFC,KAAD,IAAW;AAChB,QAAIA,KAAK,CAACG,QAAV,EAAoB;AAClB,YAAMC,cAAc,GAAGJ,KAAK,CAACG,QAAN,CAAeE,IAAf,CAAoBR,OAA3C;AACAA,MAAAA,OAAO,CAACG,KAAR,CAAe,UAASI,cAAe,EAAvC;AACD;AACF,GAhBS,CAAZ;AAiBA,SAAOV,GAAP;AACD,CApBM;AAsBP,OAAO,MAAMmB,cAAc,GAAIxB,WAAD,IAAiB;AAC7C,QAAMmB,OAAO,GAAGC,UAAU,EAA1B;AACA,QAAMf,GAAG,GAAGH,KAAK,CAACmB,GAAN,CAAUxB,aAAV,EAAyBG,WAAzB,EAAsC;AAACmB,IAAAA;AAAD,GAAtC,EACTf,IADS,CACHY,IAAD,IAAU;AACd,QAAIA,IAAI,CAACV,MAAL,KAAgB,GAApB,EAAyB;AACvBE,MAAAA,OAAO,CAACc,OAAR,CAAgB,2CAAhB;AACD;AACF,GALS,EAMTZ,KANS,CAMFC,KAAD,IAAWA,KAAK,CAACG,QANd,CAAZ;AAOA,SAAOT,GAAP;AACD,CAVM;AAYP,OAAO,MAAMoB,WAAW,GAAG,MAAM;AAC/B,QAAMN,OAAO,GAAGC,UAAU,EAA1B;AACA,QAAMf,GAAG,GAAGH,KAAK,CAACwB,GAAN,CAAW,GAAE7B,aAAc,WAA3B,EAAuC;AAACsB,IAAAA;AAAD,GAAvC,EACTf,IADS,CACHY,IAAD,IAAWA,IADP,EAETN,KAFS,CAEFC,KAAD,IAAWA,KAAK,CAACG,QAFd,CAAZ;AAGA,SAAOT,GAAP;AACD,CANM","sourcesContent":["/* eslint-disable no-extra-boolean-cast */\n// import axios from 'axios';\n// import { message } from 'antd';\n// import { DOMAIN, getHeaders } from '../general';\n\nconst BASE_ENDPOINT = `${DOMAIN}/customers`;\n\nexport const createCustomer = (credentials, history) => {\n  axios.post(BASE_ENDPOINT, credentials)\n    .then((res) => {\n      if (res.status === 200) {\n        history.push('/')\n        message.info('New account created successfully')\n      }\n    })\n    .catch((error) => {\n      console.log(error.response)\n      if (error.response) {\n        const requestMessage = error.response.data.message\n        message.error(`Error: ${requestMessage}`)\n      }\n    })\n}\n\nexport const changePassword = (passwords) => {\n  const headers = getHeaders();\n  const res = axios.put(`${BASE_ENDPOINT}/password`, passwords, {headers})\n    .then((data) => {\n      if (data.status === 200) {\n        if (data.data.message === 'Password successfully changed') {\n          message.success('Your password have been changed')\n        }\n        if (data.data.password === 'Password does not match') {\n          message.error('Old password is wrong ')\n        }\n      }\n    })\n    .catch((error) => {\n      if (error.response) {\n        const requestMessage = error.response.data.message\n        message.error(`Error: ${requestMessage}`)\n      }\n    })\n  return res\n}\n\nexport const updateCustomer = (credentials) => {\n  const headers = getHeaders();\n  const res = axios.put(BASE_ENDPOINT, credentials, {headers})\n    .then((data) => {\n      if (data.status === 200) {\n        message.success('Your contact information has been changed')\n      }\n    })\n    .catch((error) => error.response)\n  return res\n}\n\nexport const getCustomer = () => {\n  const headers = getHeaders();\n  const res = axios.get(`${BASE_ENDPOINT}/customer`, {headers})\n    .then((data) => (data))\n    .catch((error) => error.response)\n  return res\n}"]},"metadata":{},"sourceType":"module"}