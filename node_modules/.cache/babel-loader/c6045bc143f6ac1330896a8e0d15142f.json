{"ast":null,"code":"import styled from 'styled-components';\nimport { forTablet, forDesktop } from '../../styles/mediaBreakPoints';\nexport const ComponentContainer = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  min-width: 320px;\n`;\nexport const Flex = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  width: 100%;\n`;\nexport const Section = styled.div`\n  align-items: flex-start;\n  display: flex;\n  width: 100%;\n  background-color: ${props => props.colored ? 'black' : 'white'};\n\n  @media(min-width: ${forTablet.minWidth}) and (max-width: ${forTablet.maxWidth}px) {\n    justify-content: center;\n    align-items: center;\n  }\n\n  @media(min-width: ${forDesktop.minWidth}px){\n    justify-content: center;\n    align-items: center;\n  }\n`;\nexport const ContentBlock = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: ${props => props.colored ? 'column-reverse' : 'column'};\n  color: ${props => props.colored ? 'white' : 'black'};\n\n  @media(min-width: ${forTablet.minWidth}px) and (max-width: ${forTablet.maxWidth}px) {\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 39px 5% 48px 5%;\n    \n    @media(min-width: 481px) and (max-width: 700px) {\n      width: 100%;\n      flex-direction: ${props => props.colored ? 'column-reverse' : 'column'};\n      color: ${props => props.colored ? 'white' : 'black'};\n      justify-content: center;\n      align-items: center;\n      padding: 0 0 10px 0;\n    }\n  }\n\n  @media(min-width: ${forDesktop.minWidth}px){\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 50px 6% 50px 5%;;\n  }\n`;\nexport const ContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 17px 2% 25px 15%;\n  justify-content: center;\n\n  @media(min-width: ${forTablet.minWidth}px) and (max-width: ${forTablet.maxWidth}px) {\n    width: 45%;\n    margin-right: ${props => props.colored ? '3%' : '5%'};\n    margin-left: ${props => props.colored ? '5%' : '3%'};\n  \n    @media(min-width: 481px) and (max-width: 700px) {\n      width: 80%;\n      margin: 17px 3% 25px 7%; \n    }\n  }\n\n  @media(min-width: ${forDesktop.minWidth}px){\n    width: 48%;\n    margin-right: ${props => props.colored ? '1%' : '0'};\n    margin-left: ${props => props.colored ? '0' : '10%'};\n    padding-left: 5%;\n  }\n`;\nexport const SectionTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 90%;\n  font-size: 30px;\n  margin: 5px 0 13px 0;\n\n  @media(min-width: ${forTablet.minWidth}px) and (max-width: ${forTablet.maxWidth}px) {\n\n    @media(min-width: 481px) and (max-width: 700px) {\n      width: 95%;\n      font-size: 30px;\n    }\n  }\n\n  @media(min-width: ${forDesktop.minWidth}px){\n    width: 90%;\n    font-size: 32px;\n    margin-bottom: 32px;\n  }\n`;\nexport const SectionContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 95%;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 1px;\n\n  @media(min-width: ${forTablet.minWidth}px) and (max-width: ${forTablet.maxWidth}px) {\n  width: 100%;\n\n    @media(min-width: 481px) and (max-width: 700px) {\n      width: 100%;\n      font-size: 14px;\n    }\n  }\n\n  @media(min-width: ${forDesktop.minWidth}px){\n    width: 85%;\n    font-size: 16px;\n    line-height: 22px;\n  }\n`;\nexport const SectionImg = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 30%;\n  object-fit: cover;\n\n  @media(min-width: ${forTablet.minWidth}px) and (max-width: ${forTablet.maxWidth}px) {\n    height: 60%;\n    width: 48%;\n    margin-right: ${props => props.nocolored ? '0' : '7%'};\n    margin-left: ${props => props.nocolored ? '2%' : '0'};\n    padding-left: ${props => props.nocolored ? '2%' : '2%'};\n\n    @media(min-width: 481px) and (max-width: 700px) {\n      height: 50%;\n      width: 100%;\n      padding-left: 0;\n      margin-right: 0;\n    }\n  } \n\n  @media(min-width: ${forDesktop.minWidth}px){\n    width: 48%;\n    height: 60%;\n    padding-left: ${props => props.nocolored ? '2%' : '1%'};\n  }\n`;\nexport const Image = styled.img`\n  object-fit: cover;\n  margin-top: ${props => props.first ? '0' : '25px'};\n  display: flex;\n  flex-direction: row;\n  width: ${props => props.first ? '100%' : '50%'};\n  height: ${props => props.first ? '100%' : '50%'};\n  \n  @media(min-width: ${forTablet.minWidth}px) and (max-width: ${forTablet.maxWidth}px) {\n    width: 100%;\n    height: auto;\n    \n    @media(min-width: 481px) and (max-width: 700px) {\n      margin-top: ${props => props.first ? '0' : '15px'};\n      width: ${props => props.first ? '100%' : '50%'};\n      height: ${props => props.first ? '100%' : '50%'};\n      object-fit: cover;\n    }\n  } \n\n @media(min-width: ${forDesktop.minWidth}px){\n    width: ${props => props.first ? '80%' : '100%'};\n    height: auto;\n    object-fit: ${props => props.first ? 'none' : 'cover'};\n  }\n`;\nexport const Img = styled.img` \n  height: 30px;\n  width: ${props => props.biggerSize ? '52px' : '30px'};\n\n  @media(min-width: ${forDesktop.minWidth}px){\n    width: ${props => props.biggerSize ? '87px' : '50px'};\n    height: 50px;\n    margin-bottom: 10px;\n  }\n`;\nexport const Text = styled.p`\n  margin-bottom: 20px;\n`;","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/About-us/StyledAboutUs.jsx"],"names":["styled","forTablet","forDesktop","ComponentContainer","div","Flex","Section","props","colored","minWidth","maxWidth","ContentBlock","ContentContainer","SectionTitle","SectionContent","SectionImg","nocolored","Image","img","first","Img","biggerSize","Text","p"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport { forTablet, forDesktop } from '../../styles/mediaBreakPoints'\n\nexport const ComponentContainer = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  min-width: 320px;\n`\nexport const Flex = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  width: 100%;\n`\nexport const Section = styled.div`\n  align-items: flex-start;\n  display: flex;\n  width: 100%;\n  background-color: ${(props) => (props.colored ? 'black' : 'white')};\n\n  @media(min-width: ${forTablet.minWidth}) and (max-width: ${forTablet.maxWidth}px) {\n    justify-content: center;\n    align-items: center;\n  }\n\n  @media(min-width: ${forDesktop.minWidth}px){\n    justify-content: center;\n    align-items: center;\n  }\n`\nexport const ContentBlock = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: ${(props) => (props.colored ? 'column-reverse' : 'column')};\n  color: ${(props) => (props.colored ? 'white' : 'black')};\n\n  @media(min-width: ${forTablet.minWidth}px) and (max-width: ${forTablet.maxWidth}px) {\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 39px 5% 48px 5%;\n    \n    @media(min-width: 481px) and (max-width: 700px) {\n      width: 100%;\n      flex-direction: ${(props) => (props.colored ? 'column-reverse' : 'column')};\n      color: ${(props) => (props.colored ? 'white' : 'black')};\n      justify-content: center;\n      align-items: center;\n      padding: 0 0 10px 0;\n    }\n  }\n\n  @media(min-width: ${forDesktop.minWidth}px){\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 50px 6% 50px 5%;;\n  }\n`\nexport const ContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 17px 2% 25px 15%;\n  justify-content: center;\n\n  @media(min-width: ${forTablet.minWidth}px) and (max-width: ${forTablet.maxWidth}px) {\n    width: 45%;\n    margin-right: ${(props) => (props.colored ? '3%' : '5%')};\n    margin-left: ${(props) => (props.colored ? '5%' : '3%')};\n  \n    @media(min-width: 481px) and (max-width: 700px) {\n      width: 80%;\n      margin: 17px 3% 25px 7%; \n    }\n  }\n\n  @media(min-width: ${forDesktop.minWidth}px){\n    width: 48%;\n    margin-right: ${(props) => (props.colored ? '1%' : '0')};\n    margin-left: ${(props) => (props.colored ? '0' : '10%')};\n    padding-left: 5%;\n  }\n`\nexport const SectionTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 90%;\n  font-size: 30px;\n  margin: 5px 0 13px 0;\n\n  @media(min-width: ${forTablet.minWidth}px) and (max-width: ${forTablet.maxWidth}px) {\n\n    @media(min-width: 481px) and (max-width: 700px) {\n      width: 95%;\n      font-size: 30px;\n    }\n  }\n\n  @media(min-width: ${forDesktop.minWidth}px){\n    width: 90%;\n    font-size: 32px;\n    margin-bottom: 32px;\n  }\n`\nexport const SectionContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 95%;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 1px;\n\n  @media(min-width: ${forTablet.minWidth}px) and (max-width: ${forTablet.maxWidth}px) {\n  width: 100%;\n\n    @media(min-width: 481px) and (max-width: 700px) {\n      width: 100%;\n      font-size: 14px;\n    }\n  }\n\n  @media(min-width: ${forDesktop.minWidth}px){\n    width: 85%;\n    font-size: 16px;\n    line-height: 22px;\n  }\n`\nexport const SectionImg = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 30%;\n  object-fit: cover;\n\n  @media(min-width: ${forTablet.minWidth}px) and (max-width: ${forTablet.maxWidth}px) {\n    height: 60%;\n    width: 48%;\n    margin-right: ${(props) => (props.nocolored ? '0' : '7%')};\n    margin-left: ${(props) => (props.nocolored ? '2%' : '0')};\n    padding-left: ${(props) => (props.nocolored ? '2%' : '2%')};\n\n    @media(min-width: 481px) and (max-width: 700px) {\n      height: 50%;\n      width: 100%;\n      padding-left: 0;\n      margin-right: 0;\n    }\n  } \n\n  @media(min-width: ${forDesktop.minWidth}px){\n    width: 48%;\n    height: 60%;\n    padding-left: ${(props) => (props.nocolored ? '2%' : '1%')};\n  }\n`\nexport const Image = styled.img`\n  object-fit: cover;\n  margin-top: ${(props) => (props.first ? '0' : '25px')};\n  display: flex;\n  flex-direction: row;\n  width: ${(props) => (props.first ? '100%' : '50%')};\n  height: ${(props) => (props.first ? '100%' : '50%')};\n  \n  @media(min-width: ${forTablet.minWidth}px) and (max-width: ${forTablet.maxWidth}px) {\n    width: 100%;\n    height: auto;\n    \n    @media(min-width: 481px) and (max-width: 700px) {\n      margin-top: ${(props) => (props.first ? '0' : '15px')};\n      width: ${(props) => (props.first ? '100%' : '50%')};\n      height: ${(props) => (props.first ? '100%' : '50%')};\n      object-fit: cover;\n    }\n  } \n\n @media(min-width: ${forDesktop.minWidth}px){\n    width: ${(props) => (props.first ? '80%' : '100%')};\n    height: auto;\n    object-fit: ${(props) => (props.first ? 'none' : 'cover')};\n  }\n`\nexport const Img = styled.img` \n  height: 30px;\n  width: ${(props) => (props.biggerSize ? '52px' : '30px')};\n\n  @media(min-width: ${forDesktop.minWidth}px){\n    width: ${(props) => (props.biggerSize ? '87px' : '50px')};\n    height: 50px;\n    margin-bottom: 10px;\n  }\n`\nexport const Text = styled.p`\n  margin-bottom: 20px;\n`"]},"metadata":{},"sourceType":"module"}