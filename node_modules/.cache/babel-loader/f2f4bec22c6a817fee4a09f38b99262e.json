{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/Orders/Orders.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport getOrders from '../../../store/orders/middleware';\nimport OrderComponent from './OrderComponent';\nimport { forTablet } from '../../../styles/mediaBreakPoints';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Orders = () => {\n  _s();\n\n  const [orders, setOrders] = useState();\n  useEffect(() => {\n    const ordersToRender = async () => {\n      const results = await getOrders();\n      setOrders(() => results.data);\n    };\n\n    ordersToRender();\n  }, []);\n  console.log(orders === undefined);\n  return /*#__PURE__*/_jsxDEV(DirectionChange, {\n    children: orders !== undefined && orders.map((item, i) => /*#__PURE__*/_jsxDEV(OrderComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Orders, \"plIU0zCJSTE/xC0GycPRW3cd3tA=\");\n\n_c = Orders;\nconst DirectionChange = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 1200px;\n  justify-content: space-around;\n  @media(max-width: 1250px) {\n    flex-direction: column;\n    align-items: center;\n  }\n  > * {\n    width: calc((1200px / 2) - 50px);\n    @media(max-width: 1250px) {\n      width: 70%;\n    }\n    @media(max-width: ${forTablet.maxWidth}px) {\n      width: 70%;\n    }\n  }\n`;\n_c2 = DirectionChange;\nexport default Orders;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Orders\");\n$RefreshReg$(_c2, \"DirectionChange\");","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/Orders/Orders.jsx"],"names":["React","useEffect","useState","styled","getOrders","OrderComponent","forTablet","Orders","orders","setOrders","ordersToRender","results","data","console","log","undefined","map","item","i","DirectionChange","div","maxWidth"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,SAAR,QAAwB,kCAAxB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,EAApC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,cAAc,GAAG,YAAY;AACjC,YAAMC,OAAO,GAAG,MAAMP,SAAS,EAA/B;AACAK,MAAAA,SAAS,CAAC,MAAME,OAAO,CAACC,IAAf,CAAT;AACD,KAHD;;AAIAF,IAAAA,cAAc;AACf,GANQ,EAMN,EANM,CAAT;AAOAG,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,KAAKO,SAAvB;AAEA,sBACE,QAAC,eAAD;AAAA,cACGP,MAAM,KAAKO,SAAX,IACCP,MAAM,CAACQ,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,kBACT,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CApBD;;GAAMX,M;;KAAAA,M;AAqBN,MAAMY,eAAe,GAAGhB,MAAM,CAACiB,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBd,SAAS,CAACe,QAAS;AAC3C;AACA;AACA;AACA,CAnBA;MAAMF,e;AAqBN,eAAeZ,MAAf","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport getOrders from '../../../store/orders/middleware';\nimport OrderComponent from './OrderComponent';\nimport {forTablet} from '../../../styles/mediaBreakPoints';\n\nconst Orders = () => {\n  const [orders, setOrders] = useState()\n  useEffect(() => {\n    const ordersToRender = async () => {\n      const results = await getOrders();\n      setOrders(() => results.data)\n    }\n    ordersToRender()\n  }, [])\n  console.log(orders === undefined);\n\n  return (\n    <DirectionChange>\n      {orders !== undefined && (\n        orders.map((item, i) => (\n          <OrderComponent />\n        ))\n      )}\n    </DirectionChange>\n  );\n}\nconst DirectionChange = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 1200px;\n  justify-content: space-around;\n  @media(max-width: 1250px) {\n    flex-direction: column;\n    align-items: center;\n  }\n  > * {\n    width: calc((1200px / 2) - 50px);\n    @media(max-width: 1250px) {\n      width: 70%;\n    }\n    @media(max-width: ${forTablet.maxWidth}px) {\n      width: 70%;\n    }\n  }\n`;\n\nexport default Orders;"]},"metadata":{},"sourceType":"module"}