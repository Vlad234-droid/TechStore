{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/FormPhoneChange/PhoneChange.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable consistent-return */\n\n/* eslint-disable guard-for-in */\n\n/* eslint-disable no-restricted-syntax */\n\n/* eslint-disable no-console */\n\n/* eslint-disable prefer-const */\n\n/* eslint-disable keyword-spacing */\n\n/* eslint-disable no-unused-vars */\nimport React, { useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateCustomer } from '../../../store/customer/middleware';\nimport { setHideModal } from '../../../store/dashBoardModal/middleware';\nimport { selectModalState } from '../../../store/dashBoardModal/reducer';\nimport { validTelephone } from '../../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => ({\n  show: selectModalState(state)\n});\n\nconst FormInfoChange = connect(mapStateToProps, {\n  setHideModal,\n  updateCustomer\n})(_s(({\n  setHideModal,\n  show,\n  updateCustomer\n}) => {\n  _s();\n\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    const tele = {\n      telephone: `+${values}`\n    };\n    console.log(tele); // updateCustomer(validTelephone, 'Your contact information has been changed');\n    // setHideModal();\n    // form.resetFields()\n  };\n\n  useEffect(() => {\n    if (!show) {\n      form.resetFields();\n    }\n  }, [form, show]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"nest\",\n    form: form,\n    onFinish: onFinish,\n    \"datatest-id\": \"ModalFormInfo\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"telephone\",\n      label: \"New Phone\",\n      rules: [{\n        required: true,\n        type: 'string',\n        pattern: validTelephone,\n        message: 'Enter correct Phone'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}, \"hm6PaQ/QYB/X6ENq1nmkdh1TV0k=\", false, function () {\n  return [Form.useForm];\n}));\nexport default FormInfoChange;","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/FormPhoneChange/PhoneChange.jsx"],"names":["React","useEffect","Form","Input","Button","connect","PropTypes","updateCustomer","setHideModal","selectModalState","validTelephone","mapStateToProps","state","show","FormInfoChange","form","useForm","onFinish","values","tele","telephone","console","log","resetFields","required","type","pattern","message"],"mappings":";;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,IADF,EACQC,KADR,EACeC,MADf,QAEO,MAFP;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,oCAA/B;AACA,SAASC,YAAT,QAA6B,0CAA7B;AACA,SAASC,gBAAT,QAAiC,uCAAjC;AACA,SAASC,cAAT,QAA+B,0BAA/B;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,IAAI,EAAEJ,gBAAgB,CAACG,KAAD;AADY,CAAZ,CAAxB;;AAIA,MAAME,cAAc,GAAGT,OAAO,CAACM,eAAD,EAAkB;AAAEH,EAAAA,YAAF;AAAgBD,EAAAA;AAAhB,CAAlB,CAAP,IAA2D,CAAC;AACjFC,EAAAA,YADiF;AACnEK,EAAAA,IADmE;AAC7DN,EAAAA;AAD6D,CAAD,KAE5E;AAAA;;AACJ,QAAM,CAACQ,IAAD,IAASb,IAAI,CAACc,OAAL,EAAf;;AAEA,QAAMC,QAAQ,GAAIC,MAAD,IAAY;AAC3B,UAAMC,IAAI,GAAG;AACXC,MAAAA,SAAS,EAAG,IAAGF,MAAO;AADX,KAAb;AAGAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAJ2B,CAK3B;AACA;AACA;AACD,GARD;;AASAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACY,IAAL,EAAW;AACTE,MAAAA,IAAI,CAACQ,WAAL;AACD;AACF,GAJQ,EAIN,CAACR,IAAD,EAAOF,IAAP,CAJM,CAAT;AAKA,sBACE,QAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,IAAI,EAAEE,IAAxB;AAA8B,IAAA,QAAQ,EAAEE,QAAxC;AAAkD,mBAAY,eAA9D;AAAA,4BACE,QAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,KAAK,EAAC,WAFR;AAGE,MAAA,KAAK,EAAE,CAAC;AACNO,QAAAA,QAAQ,EAAE,IADJ;AAENC,QAAAA,IAAI,EAAE,QAFA;AAGNC,QAAAA,OAAO,EAAEhB,cAHH;AAINiB,QAAAA,OAAO,EAAE;AAJH,OAAD,CAHT;AAAA,6BAUE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,IAAD,CAAM,IAAN;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAxCsB;AAAA,UAGNzB,IAAI,CAACc,OAHC;AAAA,GAAvB;AAyCA,eAAeF,cAAf","sourcesContent":["/* eslint-disable consistent-return */\n/* eslint-disable guard-for-in */\n/* eslint-disable no-restricted-syntax */\n/* eslint-disable no-console */\n/* eslint-disable prefer-const */\n/* eslint-disable keyword-spacing */\n/* eslint-disable no-unused-vars */\nimport React, { useEffect } from 'react';\nimport {\n  Form, Input, Button\n} from 'antd';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateCustomer } from '../../../store/customer/middleware';\nimport { setHideModal } from '../../../store/dashBoardModal/middleware';\nimport { selectModalState } from '../../../store/dashBoardModal/reducer'\nimport { validTelephone } from '../../../utils/constants'\n\nconst mapStateToProps = (state) => ({\n  show: selectModalState(state),\n})\n\nconst FormInfoChange = connect(mapStateToProps, { setHideModal, updateCustomer })(({\n  setHideModal, show, updateCustomer\n}) => {\n  const [form] = Form.useForm();\n\n  const onFinish = (values) => {\n    const tele = {\n      telephone: `+${values}`\n    }\n    console.log(tele);\n    // updateCustomer(validTelephone, 'Your contact information has been changed');\n    // setHideModal();\n    // form.resetFields()\n  }\n  useEffect(() => {\n    if (!show) {\n      form.resetFields()\n    }\n  }, [form, show])\n  return (\n    <Form name=\"nest\" form={form} onFinish={onFinish} datatest-id=\"ModalFormInfo\">\n      <Form.Item\n        name=\"telephone\"\n        label=\"New Phone\"\n        rules={[{\n          required: true,\n          type: 'string',\n          pattern: validTelephone,\n          message: 'Enter correct Phone'\n        }]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n})\nexport default FormInfoChange;\n"]},"metadata":{},"sourceType":"module"}