{"ast":null,"code":"/* eslint-disable no-extra-boolean-cast */\nimport axios from 'axios';\nimport { message } from 'antd';\nconst BASE_ENDPOINT = '/customers';\nconst headers = {\n  authorization: localStorage.getItem('token'),\n  'Content-Type': 'application/json'\n};\nexport const createCustomer = (credentials, history) => {\n  axios.post(BASE_ENDPOINT, credentials).then(res => {\n    if (res.status === 200) {\n      history.push('/');\n      message.info('New account created successfully');\n    }\n  }).catch(error => {\n    if (error.response) {\n      const requestMessage = error.response.data.message;\n      message.error(`Error: ${requestMessage}`);\n    }\n  });\n};\nexport const changePassword = passwords => {\n  const res = axios.put(`${BASE_ENDPOINT}/password`, passwords, {\n    headers\n  }).then(data => {\n    console.log(data);\n\n    if (data.status === 200) {\n      if (!!data.message) {\n        console.log('Hello suc');\n        message.success('Your password have been changed');\n      }\n\n      console.log(!!data.password);\n\n      if (!!data.password) {\n        console.log('Hello err');\n        message.error('Old password is wrong ');\n      }\n    }\n  }).catch(error => {\n    if (error.response) {\n      const requestMessage = error.response.data.message;\n      message.error(`Error: ${requestMessage}`);\n    }\n  });\n  return res;\n};\nexport const updateCustomer = credentials => {\n  const res = axios.put(BASE_ENDPOINT, credentials, {\n    headers\n  }).then(data => data).catch(error => error.response);\n  return res;\n};\nexport const getCustomer = () => {\n  const res = axios.get(`${BASE_ENDPOINT}/customer`, {\n    headers\n  }).then(data => data).catch(error => {\n    error(error.response);\n  });\n  return res;\n};","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/store/customer/middleware.js"],"names":["axios","message","BASE_ENDPOINT","headers","authorization","localStorage","getItem","createCustomer","credentials","history","post","then","res","status","push","info","catch","error","response","requestMessage","data","changePassword","passwords","put","console","log","success","password","updateCustomer","getCustomer","get"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,MAAxB;AAEA,MAAMC,aAAa,GAAG,YAAtB;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADD;AAEd,kBAAgB;AAFF,CAAhB;AAKA,OAAO,MAAMC,cAAc,GAAG,CAACC,WAAD,EAAcC,OAAd,KAA0B;AACtDT,EAAAA,KAAK,CAACU,IAAN,CAAWR,aAAX,EAA0BM,WAA1B,EACGG,IADH,CACSC,GAAD,IAAS;AACb,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBJ,MAAAA,OAAO,CAACK,IAAR,CAAa,GAAb;AACAb,MAAAA,OAAO,CAACc,IAAR,CAAa,kCAAb;AACD;AACF,GANH,EAOGC,KAPH,CAOUC,KAAD,IAAW;AAChB,QAAIA,KAAK,CAACC,QAAV,EAAoB;AAClB,YAAMC,cAAc,GAAGF,KAAK,CAACC,QAAN,CAAeE,IAAf,CAAoBnB,OAA3C;AACAA,MAAAA,OAAO,CAACgB,KAAR,CAAe,UAASE,cAAe,EAAvC;AACD;AACF,GAZH;AAaD,CAdM;AAgBP,OAAO,MAAME,cAAc,GAAIC,SAAD,IAAe;AAC3C,QAAMV,GAAG,GAAGZ,KAAK,CAACuB,GAAN,CAAW,GAAErB,aAAc,WAA3B,EAAuCoB,SAAvC,EAAkD;AAACnB,IAAAA;AAAD,GAAlD,EACTQ,IADS,CACHS,IAAD,IAAU;AACdI,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AACA,QAAIA,IAAI,CAACP,MAAL,KAAgB,GAApB,EAAyB;AACvB,UAAI,CAAC,CAACO,IAAI,CAACnB,OAAX,EAAoB;AAClBuB,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAxB,QAAAA,OAAO,CAACyB,OAAR,CAAgB,iCAAhB;AACD;;AACDF,MAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,CAACL,IAAI,CAACO,QAAnB;;AACA,UAAI,CAAC,CAACP,IAAI,CAACO,QAAX,EAAqB;AACnBH,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAxB,QAAAA,OAAO,CAACgB,KAAR,CAAc,wBAAd;AACD;AACF;AACF,GAdS,EAeTD,KAfS,CAeFC,KAAD,IAAW;AAChB,QAAIA,KAAK,CAACC,QAAV,EAAoB;AAClB,YAAMC,cAAc,GAAGF,KAAK,CAACC,QAAN,CAAeE,IAAf,CAAoBnB,OAA3C;AACAA,MAAAA,OAAO,CAACgB,KAAR,CAAe,UAASE,cAAe,EAAvC;AACD;AACF,GApBS,CAAZ;AAqBA,SAAOP,GAAP;AACD,CAvBM;AAwBP,OAAO,MAAMgB,cAAc,GAAIpB,WAAD,IAAiB;AAC7C,QAAMI,GAAG,GAAGZ,KAAK,CAACuB,GAAN,CAAUrB,aAAV,EAAyBM,WAAzB,EAAsC;AAACL,IAAAA;AAAD,GAAtC,EACTQ,IADS,CACHS,IAAD,IAAUA,IADN,EAETJ,KAFS,CAEFC,KAAD,IAAWA,KAAK,CAACC,QAFd,CAAZ;AAGA,SAAON,GAAP;AACD,CALM;AAOP,OAAO,MAAMiB,WAAW,GAAG,MAAM;AAC/B,QAAMjB,GAAG,GAAGZ,KAAK,CAAC8B,GAAN,CAAW,GAAE5B,aAAc,WAA3B,EAAuC;AAACC,IAAAA;AAAD,GAAvC,EACTQ,IADS,CACHS,IAAD,IAAWA,IADP,EAETJ,KAFS,CAEFC,KAAD,IAAW;AAChBA,IAAAA,KAAK,CAACA,KAAK,CAACC,QAAP,CAAL;AACD,GAJS,CAAZ;AAKA,SAAON,GAAP;AACD,CAPM","sourcesContent":["/* eslint-disable no-extra-boolean-cast */\nimport axios from 'axios'\nimport { message } from 'antd'\n\nconst BASE_ENDPOINT = '/customers'\n\nconst headers = {\n  authorization: localStorage.getItem('token'),\n  'Content-Type': 'application/json'\n}\n\nexport const createCustomer = (credentials, history) => {\n  axios.post(BASE_ENDPOINT, credentials)\n    .then((res) => {\n      if (res.status === 200) {\n        history.push('/')\n        message.info('New account created successfully')\n      }\n    })\n    .catch((error) => {\n      if (error.response) {\n        const requestMessage = error.response.data.message\n        message.error(`Error: ${requestMessage}`)\n      }\n    })\n}\n\nexport const changePassword = (passwords) => {\n  const res = axios.put(`${BASE_ENDPOINT}/password`, passwords, {headers})\n    .then((data) => {\n      console.log(data);\n      if (data.status === 200) {\n        if (!!data.message) {\n          console.log('Hello suc');\n          message.success('Your password have been changed')\n        }\n        console.log(!!data.password);\n        if (!!data.password) {\n          console.log('Hello err');\n          message.error('Old password is wrong ')\n        }\n      }\n    })\n    .catch((error) => {\n      if (error.response) {\n        const requestMessage = error.response.data.message\n        message.error(`Error: ${requestMessage}`)\n      }\n    })\n  return res\n}\nexport const updateCustomer = (credentials) => {\n  const res = axios.put(BASE_ENDPOINT, credentials, {headers})\n    .then((data) => data)\n    .catch((error) => error.response)\n  return res\n}\n\nexport const getCustomer = () => {\n  const res = axios.get(`${BASE_ENDPOINT}/customer`, {headers})\n    .then((data) => (data))\n    .catch((error) => {\n      error(error.response)\n    })\n  return res\n}"]},"metadata":{},"sourceType":"module"}