{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/FormInfoChange/FormInfoChange.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateCustomer } from '../../../store/customer/middleware';\nimport { setHideModal } from '../../../store/dashBoardModal/middleware';\nimport { selectCustomerInfo } from '../../../store/customer/reducer';\nimport { validName, validTelephone } from '../../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => ({\n  info: selectCustomerInfo(state)\n});\n\nconst FormInfoChange = connect(mapStateToProps, {\n  setHideModal,\n  updateCustomer\n})(_s(({\n  setHideModal,\n  updateCustomer\n}) => {\n  _s();\n\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    let results = values;\n    const ifEmpty = Object.values(results);\n\n    if (values.telephone) {\n      results = { ...values,\n        telephone: `+${values.telephone}`\n      };\n    }\n\n    updateCustomer(results, 'Your contact information has been changed');\n    setHideModal();\n    form.resetFields();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"nest\",\n    form: form,\n    onFinish: onFinish,\n    \"datatest-id\": \"ModalFormInfo\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"firstName\",\n      label: \"First name\",\n      rules: [{\n        message: 'Please input your name.'\n      }, {\n        pattern: validName,\n        message: 'Allowed characters is a-z, а-я.'\n      }, {\n        min: 2,\n        max: 25,\n        message: 'First name must be beetwen 2 and 25 characters.'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        paddingBottom: '0px'\n      },\n      name: \"lastName\",\n      label: \"Last name\",\n      rules: [{\n        message: 'Please input your last name.'\n      }, {\n        pattern: validName,\n        message: 'Allowed characters is a-z, а-я.'\n      }, {\n        min: 2,\n        max: 25,\n        message: 'Last Name must be beetwen 2 and 25 characters.'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"telephone\",\n      label: \"New Phone\",\n      rules: [{\n        type: 'string',\n        pattern: validTelephone,\n        message: 'Enter correct Phone'\n      }, {\n        min: 12,\n        max: 12,\n        message: 'Phone must be 12 characters'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n}));\nFormInfoChange.propTypes = {\n  setHideModal: PropTypes.func\n};\nFormInfoChange.defaultProps = {\n  setHideModal: () => null\n};\nexport default FormInfoChange;","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/FormInfoChange/FormInfoChange.jsx"],"names":["React","Form","Input","Button","connect","PropTypes","updateCustomer","setHideModal","selectCustomerInfo","validName","validTelephone","mapStateToProps","state","info","FormInfoChange","form","useForm","onFinish","values","results","ifEmpty","Object","telephone","resetFields","message","pattern","min","max","paddingBottom","type","propTypes","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Form, Input, Button\n} from 'antd';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateCustomer } from '../../../store/customer/middleware';\nimport { setHideModal } from '../../../store/dashBoardModal/middleware';\nimport { selectCustomerInfo } from '../../../store/customer/reducer'\nimport { validName, validTelephone } from '../../../utils/constants'\n\nconst mapStateToProps = (state) => ({\n  info: selectCustomerInfo(state)\n})\n\nconst FormInfoChange = connect(mapStateToProps, { setHideModal, updateCustomer })(({\n  setHideModal, updateCustomer\n}) => {\n  const [form] = Form.useForm();\n\n  const onFinish = (values) => {\n    let results = values;\n    const ifEmpty = Object.values(results);\n    if (values.telephone) {\n      results = {\n        ...values,\n        telephone: `+${values.telephone}`\n      }\n    }\n    updateCustomer(results, 'Your contact information has been changed');\n    setHideModal();\n    form.resetFields()\n  }\n  return (\n    <Form name=\"nest\" form={form} onFinish={onFinish} datatest-id=\"ModalFormInfo\">\n      <Form.Item\n        name=\"firstName\"\n        label=\"First name\"\n        rules={[\n          {\n            message: 'Please input your name.',\n          },\n          {\n            pattern: validName,\n            message: 'Allowed characters is a-z, а-я.'\n          },\n          {\n            min: 2,\n            max: 25,\n            message: 'First name must be beetwen 2 and 25 characters.'\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        style={{paddingBottom: '0px'}}\n        name=\"lastName\"\n        label=\"Last name\"\n        rules={[\n          {\n            message: 'Please input your last name.',\n          },\n          {\n            pattern: validName,\n            message: 'Allowed characters is a-z, а-я.'\n          },\n          {\n            min: 2,\n            max: 25,\n            message: 'Last Name must be beetwen 2 and 25 characters.'\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"telephone\"\n        label=\"New Phone\"\n        rules={[\n          {\n            type: 'string',\n            pattern: validTelephone,\n            message: 'Enter correct Phone'\n          },\n          {\n            min: 12,\n            max: 12,\n            message: 'Phone must be 12 characters',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n})\nFormInfoChange.propTypes = {\n  setHideModal: PropTypes.func,\n}\nFormInfoChange.defaultProps = {\n  setHideModal: () => null,\n}\nexport default FormInfoChange;\n"]},"metadata":{},"sourceType":"module"}