{"ast":null,"code":"/* eslint-disable no-underscore-dangle */\nexport const addCartToLS = (product, quantity) => {\n  const cartLS = JSON.parse(localStorage.getItem('cart')) || [];\n  let updatedCartLS = [];\n  const containsInCartLS = cartLS ? cartLS.find(item => item.product._id === product._id) : null;\n\n  if (containsInCartLS) {\n    updatedCartLS = cartLS.map(item => {\n      if (item.product._id === containsInCartLS.product._id) {\n        return { ...item,\n          cartQuantity: item.cartQuantity + quantity\n        };\n      }\n\n      return item;\n    });\n  } else {\n    updatedCartLS = [...cartLS, {\n      product,\n      cartQuantity: quantity\n    }];\n  }\n\n  localStorage.setItem('cart', JSON.stringify(updatedCartLS));\n};\nexport const getCartLS = () => JSON.parse(localStorage.getItem('cart')) || [];\nexport const increaseQuantityLS = productId => {\n  const cartLS = JSON.parse(localStorage.getItem('cart')) || [];\n  const containsInCartLS = cartLS.find(item => item.product._id === productId);\n  const updatedCartLS = cartLS.map(item => {\n    if (item.product._id === containsInCartLS.product._id) {\n      // eslint-disable-next-line no-param-reassign\n      item.cartQuantity += 1;\n    }\n\n    return item;\n  });\n  localStorage.setItem('cart', JSON.stringify(updatedCartLS));\n  return updatedCartLS;\n};\nexport const decreaseQuantityLS = productId => {\n  const cartLS = JSON.parse(localStorage.getItem('cart')) || [];\n  const containsInCartLS = cartLS.find(item => item.product._id === productId);\n  const updatedCartLS = cartLS.map(item => {\n    if (item.product._id === containsInCartLS.product._id) {\n      // eslint-disable-next-line no-param-reassign\n      item.cartQuantity -= 1;\n    }\n\n    return item;\n  });\n  localStorage.setItem('cart', JSON.stringify(updatedCartLS));\n  return updatedCartLS;\n};\nexport const removeFromCartLS = productId => {\n  const cartLS = JSON.parse(localStorage.getItem('cart')) || [];\n  if (!productId) return cartLS;\n  const updatedCartLS = cartLS.filter(item => item.product._id !== productId);\n  localStorage.setItem('cart', JSON.stringify(updatedCartLS));\n\n  if (updatedCartLS.length === 0) {\n    localStorage.removeItem('cart');\n  }\n\n  return updatedCartLS;\n};\nexport default addCartToLS;","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/utils/cartLS.js"],"names":["addCartToLS","product","quantity","cartLS","JSON","parse","localStorage","getItem","updatedCartLS","containsInCartLS","find","item","_id","map","cartQuantity","setItem","stringify","getCartLS","increaseQuantityLS","productId","decreaseQuantityLS","removeFromCartLS","filter","length","removeItem"],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\nexport const addCartToLS = (product, quantity) => {\n  const cartLS = JSON.parse(localStorage.getItem('cart')) || [];\n  let updatedCartLS = []\n  const containsInCartLS = cartLS ? cartLS.find((item) => item.product._id === product._id) : null\n    \n  if (containsInCartLS) {\n    updatedCartLS = cartLS.map((item) => {\n      if (item.product._id === containsInCartLS.product._id) {\n        return {\n          ...item,\n          cartQuantity: item.cartQuantity + quantity\n        }\n      }\n      return item\n    })\n  } else {\n    updatedCartLS = [\n      ...cartLS,\n      {\n        product,\n        cartQuantity: quantity,\n      }\n    ]\n  }\n  localStorage.setItem('cart', JSON.stringify(updatedCartLS))\n}\n\nexport const getCartLS = () => JSON.parse(localStorage.getItem('cart')) || []\n\nexport const increaseQuantityLS = (productId) => {\n  const cartLS = JSON.parse(localStorage.getItem('cart')) || []\n  const containsInCartLS = cartLS.find((item) => item.product._id === productId)\n  const updatedCartLS = cartLS.map((item) => {\n    if (item.product._id === containsInCartLS.product._id) {\n      // eslint-disable-next-line no-param-reassign\n      item.cartQuantity += 1\n    }\n    return item\n  })\n  localStorage.setItem('cart', JSON.stringify(updatedCartLS))\n  return updatedCartLS\n}\n\nexport const decreaseQuantityLS = (productId) => {\n  const cartLS = JSON.parse(localStorage.getItem('cart')) || []\n  const containsInCartLS = cartLS.find((item) => item.product._id === productId)\n  const updatedCartLS = cartLS.map((item) => {\n    if (item.product._id === containsInCartLS.product._id) {\n      // eslint-disable-next-line no-param-reassign\n      item.cartQuantity -= 1\n    }\n    return item\n  })\n  localStorage.setItem('cart', JSON.stringify(updatedCartLS))\n  return updatedCartLS\n}\n\nexport const removeFromCartLS = (productId) => {\n  const cartLS = JSON.parse(localStorage.getItem('cart')) || []\n  if (!productId) return cartLS;\n  const updatedCartLS = cartLS.filter((item) => item.product._id !== productId)\n  localStorage.setItem('cart', JSON.stringify(updatedCartLS));\n  if (updatedCartLS.length === 0) {\n    localStorage.removeItem('cart')\n  }\n  return updatedCartLS\n}\nexport default addCartToLS"]},"metadata":{},"sourceType":"module"}