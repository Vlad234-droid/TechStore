{"ast":null,"code":"/* eslint-disable consistent-return */\n\n/* eslint-disable array-callback-return */\nimport axios from 'axios';\nimport { DOMAIN } from '../../utils/constants';\nimport { setProductsToCatalog, setCatalogProductsQuantity, cleanCatalogProducts, setSearchProducts, setMinMaxPrice, startLoading, stopLoading } from './actionCreator';\nconst BASE_ENDPOINT = '/products';\nexport const getProductsToCatalog = param => dispatch => {\n  dispatch(cleanCatalogProducts());\n  dispatch(startLoading());\n  const res = axios.get(`${DOMAIN}${BASE_ENDPOINT}/filter${param}`).then(res => {\n    if (res.status === 200) {\n      const notAvaliable = [];\n      const inStock = res.data.products.filter(el => {\n        if (el.quantity === 0) {\n          notAvaliable.push(el);\n        } else return el;\n      });\n      dispatch(setProductsToCatalog([...inStock, ...notAvaliable]));\n      dispatch(setCatalogProductsQuantity(res.data.productsQuantity));\n      dispatch(stopLoading());\n    }\n\n    return res;\n  }).catch(error => {\n    dispatch(setCatalogProductsQuantity(0));\n    dispatch(stopLoading());\n    return error;\n  });\n  return res;\n};\nexport const getSearchProducts = searchPhrases => dispatch => {\n  axios.post(`${DOMAIN}${BASE_ENDPOINT}/search`, searchPhrases).then(({\n    data\n  }) => {\n    dispatch(setSearchProducts(data));\n  }).catch(err => err);\n};\nexport const getMinMaxPrice = () => dispatch => {\n  axios.get(BASE_ENDPOINT).then(({\n    status,\n    data\n  }) => {\n    if (status === 200) {\n      const price = [Infinity, -Infinity];\n      data.forEach(el => {\n        if (el.currentPrice < price[0]) {\n          price[0] = +el.currentPrice;\n        }\n\n        if (el.currentPrice > price[1]) {\n          price[1] = +el.currentPrice;\n        }\n      });\n      dispatch(setMinMaxPrice(price));\n    }\n  }).catch(error => error.response);\n};","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/store/catalog/middleware.js"],"names":["axios","DOMAIN","setProductsToCatalog","setCatalogProductsQuantity","cleanCatalogProducts","setSearchProducts","setMinMaxPrice","startLoading","stopLoading","BASE_ENDPOINT","getProductsToCatalog","param","dispatch","res","get","then","status","notAvaliable","inStock","data","products","filter","el","quantity","push","productsQuantity","catch","error","getSearchProducts","searchPhrases","post","err","getMinMaxPrice","price","Infinity","forEach","currentPrice","response"],"mappings":"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","sourcesContent":["/* eslint-disable consistent-return */\n/* eslint-disable array-callback-return */\nimport axios from 'axios';\nimport { DOMAIN} from '../../utils/constants';\nimport {\n  setProductsToCatalog,\n  setCatalogProductsQuantity,\n  cleanCatalogProducts,\n  setSearchProducts,\n  setMinMaxPrice,\n  startLoading,\n  stopLoading\n} from './actionCreator';\n\nconst BASE_ENDPOINT = '/products'\n\nexport const getProductsToCatalog = (param) => (dispatch) => {\n  dispatch(cleanCatalogProducts())\n  dispatch(startLoading())\n  const res = axios.get(`${DOMAIN}${BASE_ENDPOINT}/filter${param}`)\n    .then((res) => {\n      if (res.status === 200) {\n        const notAvaliable = []\n        const inStock = res.data.products.filter((el) => {\n          if (el.quantity === 0) {\n            notAvaliable.push(el)\n          } else return el\n        })\n        dispatch(setProductsToCatalog([...inStock, ...notAvaliable]))\n        dispatch(setCatalogProductsQuantity(res.data.productsQuantity))\n        dispatch(stopLoading())\n      }\n      return res\n    })\n    .catch((error) => {\n      dispatch(setCatalogProductsQuantity(0))\n      dispatch(stopLoading())\n      return error\n    })\n  return res\n}\n\nexport const getSearchProducts = (searchPhrases) => (dispatch) => {\n  axios\n    .post(`${DOMAIN}${BASE_ENDPOINT}/search`, searchPhrases)\n    .then(({data}) => {\n      dispatch(setSearchProducts(data))\n    })\n    .catch((err) => err);\n}\n\nexport const getMinMaxPrice = () => (dispatch) => {\n  axios.get(BASE_ENDPOINT)\n    .then(({status, data}) => {\n      if (status === 200) {\n        const price = [Infinity, -Infinity]\n        data.forEach((el) => {\n          if (el.currentPrice < price[0]) {\n            price[0] = +el.currentPrice\n          }\n          if (el.currentPrice > price[1]) {\n            price[1] = +el.currentPrice\n          }\n        })\n        dispatch(setMinMaxPrice(price))\n      }\n    })\n    .catch((error) => error.response)\n}"]},"metadata":{},"sourceType":"module"}