{"ast":null,"code":"import axios from 'axios';\nimport { headers } from '../headers';\nimport { setProducts, addProduct, updateProduct } from './actionCreator';\nconst BASE_ENDPOINT = '/products';\nexport const getProducts = () => dispatch => {\n  axios.get('/products').then(data => {\n    if (data.status === 200) {\n      dispatch(setProducts(data.data));\n    }\n  }).catch(error => error.response);\n};\nexport const addOneProduct = newProduct => dispatch => {\n  const res = axios.post(BASE_ENDPOINT, newProduct, {\n    headers\n  }).then(data => {\n    if (data.status === 200) {\n      dispatch(addProduct(newProduct));\n    }\n\n    return data;\n  }).catch(error => error.response);\n  return res;\n};\nexport const updatedOneProduct = (id, newProduct) => dispatch => {\n  const res = axios.put(`${BASE_ENDPOINT}/${id}`, newProduct, {\n    headers\n  }).then(data => {\n    if (data.status === 200) {\n      dispatch(updateProduct(data.data));\n    }\n\n    return data;\n  }).catch(error => error);\n  return res;\n};\nexport const getOneProduct = itemNo => {\n  const res = axios.get(`${BASE_ENDPOINT}/${itemNo}`).then(data => data).catch(error => error.response);\n  return res;\n};\nexport const getFilteredProducts = (param, actionCreator) => dispatch => {\n  let paramStr = '';\n  Object.keys(param).forEach((key, index) => {\n    if (index === 0) {\n      return paramStr += `${key}=${param[key]}`;\n    }\n\n    return paramStr += `&${key}=${param[key]}`;\n  });\n  const res = axios.get(`${BASE_ENDPOINT}/filter?${paramStr}`).then(res => {\n    if (res.status === 200) dispatch(actionCreator(res.data.products));\n  }).catch(error => console.log(error.response));\n  return res;\n};","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/store/products/middleware.js"],"names":["axios","headers","setProducts","addProduct","updateProduct","BASE_ENDPOINT","getProducts","dispatch","get","then","data","status","catch","error","response","addOneProduct","newProduct","res","post","updatedOneProduct","id","put","getOneProduct","itemNo","getFilteredProducts","param","actionCreator","paramStr","Object","keys","forEach","key","index","products","console","log"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { headers } from '../headers';\nimport { setProducts, addProduct, updateProduct } from './actionCreator';\n\nconst BASE_ENDPOINT = '/products'\n\nexport const getProducts = () => (dispatch) => {\n  axios.get('/products')\n    .then((data) => {\n      if (data.status === 200) {\n        dispatch(setProducts(data.data))\n      }\n    })\n    .catch((error) => error.response)\n}\n\nexport const addOneProduct = (newProduct) => (dispatch) => {\n  const res = axios.post(BASE_ENDPOINT, newProduct, {headers})\n    .then((data) => {\n      if (data.status === 200) {\n        dispatch(addProduct(newProduct))\n      }\n      return data\n    })\n    .catch((error) => error.response)\n  return res\n}\n\nexport const updatedOneProduct = (id, newProduct) => (dispatch) => {\n  const res = axios.put(`${BASE_ENDPOINT}/${id}`, newProduct, {headers})\n    .then((data) => {\n      if (data.status === 200) {\n        dispatch(updateProduct(data.data))\n      }\n      return data\n    })\n    .catch((error) => error)\n  return res\n}\n\nexport const getOneProduct = (itemNo) => {\n  const res = axios.get(`${BASE_ENDPOINT}/${itemNo}`)\n    .then((data) => data)\n    .catch((error) => error.response)\n  return res\n}\n\nexport const getFilteredProducts = (param, actionCreator) => (dispatch) => {\n  let paramStr = ''\n  Object.keys(param).forEach((key, index) => {\n    if (index === 0) {\n      return paramStr += `${key}=${param[key]}`\n    }\n    return paramStr += `&${key}=${param[key]}`\n  })\n  \n  const res = axios.get(`${BASE_ENDPOINT}/filter?${paramStr}`)\n    .then((res) => {\n      if (res.status === 200) dispatch(actionCreator(res.data.products))\n    })\n    .catch((error) => console.log(error.response))\n\n  return res\n}"]},"metadata":{},"sourceType":"module"}