{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/CatalogPage/CatalogFilter/CatalogFilter.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable import/no-extraneous-dependencies */\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { createRef, useCallback, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'antd';\nimport { useHistory, useLocation } from 'react-router';\nimport close from \"../../../images/filter/close.svg\"; // styles\n\nimport { StyledForm, Wrapper, FilterTitle, CloseBtn, AlignBtn, ContainerImage, GlobalStyle } from './StylesCatalogfilter';\nimport { checkFormValues } from '../../../utils/checkFormValues'; // img\n\nimport styl from \"../../../images/filter/styl.svg\";\nimport StyledButton from '../../common/Buttons/StyledButton';\nimport { FormMenu } from './FormMenu/FormMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 18\n  }\n};\n\nconst CatalogFilter = ({\n  showFilter,\n  setShowFilter,\n  setFilter,\n  filter\n}) => {\n  _s();\n\n  const {\n    pathname\n  } = useLocation();\n  const history = useHistory();\n  const formRef = /*#__PURE__*/createRef();\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    if (!Object.keys(values).length) return;\n    const refValue = checkFormValues(values);\n    setFilter({ ...refValue\n    });\n    setShowFilter(false);\n  };\n\n  const clearForm = () => {\n    form.resetFields();\n    setFilter({});\n  };\n\n  const fields = useMemo(() => [{\n    name: 'brand',\n    value: (filter === null || filter === void 0 ? void 0 : filter.brand) || null\n  }, {\n    name: 'categories',\n    value: (filter === null || filter === void 0 ? void 0 : filter.categories) || null\n  }], [filter]);\n  const checkPathToConfig = useCallback(pathname => {\n    const [key, value] = pathname.split('/').splice(2)[0].split('=');\n\n    if (value) {\n      setFilter(prev => ({ ...prev,\n        [key]: value.split(',')\n      }));\n    }\n  }, [setFilter]);\n  useEffect(() => {\n    if (pathname !== '/catalog') {\n      checkPathToConfig(pathname);\n      history.push('/catalog');\n    }\n  }, [checkPathToConfig, filter, history, pathname]);\n  return /*#__PURE__*/_jsxDEV(StyledForm, {\n    ref: formRef,\n    fields: fields,\n    form: form,\n    ...layout,\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {\n      showFilter: showFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      showFilter: showFilter,\n      children: [/*#__PURE__*/_jsxDEV(FilterTitle, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Filter By\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CloseBtn, {\n          onClick: () => setShowFilter(false),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: close,\n            alt: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormMenu, {\n        filter: filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlignBtn, {\n        children: [/*#__PURE__*/_jsxDEV(StyledButton, {\n          size: \"sm\",\n          shape: \"round\",\n          color: \"borderGrey\",\n          onClick: clearForm,\n          style: {\n            margin: 10,\n            padding: 7\n          },\n          children: \"Clear Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n          size: \"sm\",\n          shape: \"round\",\n          htmlType: \"submit\",\n          style: {\n            margin: 10,\n            padding: 7\n          },\n          children: \"Apply Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContainerImage, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: styl,\n          alt: \"styl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CatalogFilter, \"QSoDurBkQoeNQht15LsRjVtly4Y=\", false, function () {\n  return [useLocation, useHistory, Form.useForm];\n});\n\n_c = CatalogFilter;\nCatalogFilter.propTypes = {\n  filter: PropTypes.instanceOf(Object).isRequired,\n  showFilter: PropTypes.bool.isRequired,\n  setShowFilter: PropTypes.func.isRequired,\n  setFilter: PropTypes.func.isRequired\n};\nexport default CatalogFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatalogFilter\");","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/CatalogPage/CatalogFilter/CatalogFilter.jsx"],"names":["React","createRef","useCallback","useEffect","useMemo","PropTypes","Form","useHistory","useLocation","StyledForm","Wrapper","FilterTitle","CloseBtn","AlignBtn","ContainerImage","GlobalStyle","checkFormValues","StyledButton","FormMenu","layout","labelCol","span","wrapperCol","CatalogFilter","showFilter","setShowFilter","setFilter","filter","pathname","history","formRef","form","useForm","onFinish","values","Object","keys","length","refValue","clearForm","resetFields","fields","name","value","brand","categories","checkPathToConfig","key","split","splice","prev","push","close","margin","padding","styl","propTypes","instanceOf","isRequired","bool","func"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, {\n  createRef, useCallback, useEffect, useMemo\n} from 'react'\nimport PropTypes from 'prop-types';\nimport {\n  Form\n} from 'antd';\nimport { useHistory, useLocation } from 'react-router';\nimport close from '../../../images/filter/close.svg';\n// styles\nimport {\n  StyledForm, Wrapper, FilterTitle,\n  CloseBtn, AlignBtn, ContainerImage, GlobalStyle\n} from './StylesCatalogfilter';\nimport {checkFormValues} from '../../../utils/checkFormValues';\n// img\nimport styl from '../../../images/filter/styl.svg';\nimport StyledButton from '../../common/Buttons/StyledButton'\nimport {FormMenu} from './FormMenu/FormMenu';\n\nconst layout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 18 },\n};\n\nconst CatalogFilter = ({\n  showFilter, setShowFilter, setFilter, filter\n}) => {\n  const {pathname} = useLocation()\n  const history = useHistory()\n  const formRef = createRef()\n\n  const [form] = Form.useForm();\n\n  const onFinish = (values) => {\n    if (!Object.keys(values).length) return\n    const refValue = checkFormValues(values);\n    setFilter({\n      ...refValue,\n    })\n    setShowFilter(false)\n  };\n\n  const clearForm = () => {\n    form.resetFields()\n    setFilter({})\n  }\n\n  const fields = useMemo(() => ([\n    {\n      name: 'brand',\n      value: filter?.brand || null\n    },\n    {\n      name: 'categories',\n      value: filter?.categories || null\n    }\n  ]), [filter])\n\n  const checkPathToConfig = useCallback((pathname) => {\n    const [key, value] = pathname.split('/').splice(2)[0].split('=')\n    if (value) {\n      setFilter((prev) => ({\n        ...prev,\n        [key]: value.split(',')\n      }))\n    }\n  }, [setFilter])\n  \n  useEffect(() => {\n    if (pathname !== '/catalog') {\n      checkPathToConfig(pathname)\n      history.push('/catalog')\n    }\n  }, [checkPathToConfig, filter, history, pathname])\n\n  return (\n    <StyledForm ref={formRef} fields={fields} form={form} {...layout} onFinish={onFinish}>\n      <GlobalStyle showFilter={showFilter} />\n      <Wrapper showFilter={showFilter}>\n        <FilterTitle>\n          <h3>Filter By</h3>\n          <CloseBtn onClick={() => setShowFilter(false)}>\n            <img src={close} alt=\"close\" />\n          </CloseBtn>\n        </FilterTitle>\n        <FormMenu filter={filter} />\n        <AlignBtn>\n          <StyledButton\n            size=\"sm\"\n            shape=\"round\"\n            color=\"borderGrey\"\n            onClick={clearForm}\n            style={{margin: 10, padding: 7}}\n          >\n            Clear Filter\n          </StyledButton>\n          <StyledButton\n            size=\"sm\"\n            shape=\"round\"\n            htmlType=\"submit\"\n            style={{margin: 10, padding: 7}}\n          >\n            Apply Filter\n          </StyledButton>\n        </AlignBtn>\n        <ContainerImage>\n          <img src={styl} alt=\"styl\" />\n        </ContainerImage>\n      </Wrapper>\n    </StyledForm>\n  );\n}\n\nCatalogFilter.propTypes = {\n  filter: PropTypes.instanceOf(Object).isRequired,\n  showFilter: PropTypes.bool.isRequired,\n  setShowFilter: PropTypes.func.isRequired,\n  setFilter: PropTypes.func.isRequired\n}\n\nexport default CatalogFilter"]},"metadata":{},"sourceType":"module"}