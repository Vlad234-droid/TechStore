{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/FormInfoChange/FormInfoChange.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateCustomer } from '../../../store/customer/middleware';\nimport { setHideModal } from '../../../store/dashBoardModal/middleware';\nimport { selectCustomerInfo } from '../../../store/customer/reducer';\nimport { validName, validTelephone } from '../../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => ({\n  info: selectCustomerInfo(state)\n});\n\nexport const FormInfoChangeComponent = ({\n  setHideModal,\n  updateCustomer\n}) => {\n  _s();\n\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    if (Object.values(values).every(elem => elem === undefined)) {\n      setHideModal();\n      form.resetFields();\n      return;\n    }\n\n    updateCustomer(values, 'Your contact information has been changed');\n    setHideModal();\n    form.resetFields();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"nest\",\n    form: form,\n    onFinish: onFinish,\n    \"data-testid\": \"ModalFormInfo\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"firstName\",\n      label: \"First name\",\n      rules: [{\n        pattern: validName,\n        message: 'Allowed characters is a-z, а-я.'\n      }, {\n        min: 2,\n        max: 25,\n        message: 'First name must be beetwen 2 and 25 characters.'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        paddingBottom: '0px'\n      },\n      name: \"lastName\",\n      label: \"Last name\",\n      rules: [{\n        pattern: validName,\n        message: 'Allowed characters is a-z, а-я.'\n      }, {\n        min: 2,\n        max: 25,\n        message: 'Last Name must be beetwen 2 and 25 characters.'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"telephone\",\n      label: \"New Phone\",\n      rules: [{\n        pattern: validTelephone,\n        message: 'Phone number must start with \"+380\", allowed characters is 0-9.'\n      }, {\n        min: 13,\n        max: 13,\n        message: 'Phone number must contain 12 numbers.'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormInfoChangeComponent, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = FormInfoChangeComponent;\nconst FormInfoChange = connect(mapStateToProps, {\n  setHideModal,\n  updateCustomer\n})(FormInfoChangeComponent);\nFormInfoChangeComponent.propTypes = {\n  setHideModal: PropTypes.func,\n  updateCustomer: PropTypes.func\n};\nFormInfoChangeComponent.defaultProps = {\n  setHideModal: () => null,\n  updateCustomer: () => null\n};\nexport default FormInfoChange;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormInfoChangeComponent\");","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/DashBoard/FormInfoChange/FormInfoChange.jsx"],"names":["React","Form","Input","Button","connect","PropTypes","updateCustomer","setHideModal","selectCustomerInfo","validName","validTelephone","mapStateToProps","state","info","FormInfoChangeComponent","form","useForm","onFinish","values","Object","every","elem","undefined","resetFields","pattern","message","min","max","paddingBottom","FormInfoChange","propTypes","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Form, Input, Button\n} from 'antd';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateCustomer } from '../../../store/customer/middleware';\nimport { setHideModal } from '../../../store/dashBoardModal/middleware';\nimport { selectCustomerInfo } from '../../../store/customer/reducer'\nimport { validName, validTelephone } from '../../../utils/constants'\n\nconst mapStateToProps = (state) => ({\n  info: selectCustomerInfo(state)\n})\n\nexport const FormInfoChangeComponent = ({setHideModal, updateCustomer}) => {\n  const [form] = Form.useForm();\n\n  const onFinish = (values) => {\n    if (Object.values(values).every((elem) => elem === undefined)) {\n      setHideModal();\n      form.resetFields();\n      return\n    }\n    updateCustomer(values, 'Your contact information has been changed');\n    setHideModal();\n    form.resetFields()\n  }\n  return (\n    <Form name=\"nest\" form={form} onFinish={onFinish} data-testid=\"ModalFormInfo\">\n      <Form.Item\n        name=\"firstName\"\n        label=\"First name\"\n        rules={[\n          {\n            pattern: validName,\n            message: 'Allowed characters is a-z, а-я.'\n          },\n          {\n            min: 2,\n            max: 25,\n            message: 'First name must be beetwen 2 and 25 characters.'\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        style={{paddingBottom: '0px'}}\n        name=\"lastName\"\n        label=\"Last name\"\n        rules={[\n          {\n            pattern: validName,\n            message: 'Allowed characters is a-z, а-я.'\n          },\n          {\n            min: 2,\n            max: 25,\n            message: 'Last Name must be beetwen 2 and 25 characters.'\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"telephone\"\n        label=\"New Phone\"\n        rules={[\n          {\n            pattern: validTelephone,\n            message: 'Phone number must start with \"+380\", allowed characters is 0-9.'\n          },\n          {\n            min: 13,\n            max: 13,\n            message: 'Phone number must contain 12 numbers.'\n          }\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nconst FormInfoChange = connect(\n  mapStateToProps, {\n    setHideModal,\n    updateCustomer\n  }\n)(FormInfoChangeComponent)\n\nFormInfoChangeComponent.propTypes = {\n  setHideModal: PropTypes.func,\n  updateCustomer: PropTypes.func,\n}\nFormInfoChangeComponent.defaultProps = {\n  setHideModal: () => null,\n  updateCustomer: () => null,\n}\nexport default FormInfoChange;\n"]},"metadata":{},"sourceType":"module"}