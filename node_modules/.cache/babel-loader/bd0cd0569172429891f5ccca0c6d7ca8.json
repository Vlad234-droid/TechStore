{"ast":null,"code":"/* eslint-disable no-unused-vars */\nimport axios from 'axios';\nimport { message } from 'antd';\nimport { DOMAIN, getHeaders } from '../../utils/constants';\nimport { setCustomerInfo } from './actionCreator';\nconst BASE_ENDPOINT = `${DOMAIN}/customers`;\nexport const createCustomer = (credentials, history) => {\n  axios.post(BASE_ENDPOINT, credentials).then(res => {\n    if (res.status === 200) {\n      history.push('/signin');\n      message.info('New account created successfully');\n    }\n  }).catch(error => {\n    if (error.response) {\n      const requestMessage = error.response.data.message;\n      message.error(`Error: ${requestMessage}`);\n    }\n  });\n};\nexport const changePassword = passwords => {\n  const headers = getHeaders();\n  const res = axios.put(`${BASE_ENDPOINT}/password`, passwords, {\n    headers\n  }).then(data => {\n    if (data.status === 200) {\n      if (data.data.message === 'Password successfully changed') {\n        message.success('Your password have been changed');\n      }\n\n      if (data.data.password === 'Password does not match') {\n        message.error('Old password is wrong ');\n      }\n    }\n  }).catch(error => {\n    if (error.response) {\n      const requestMessage = error.response.data.message;\n      message.error(`Error: ${requestMessage}`);\n    }\n  });\n  return res;\n};\nexport const getCustomer = () => dispatch => {\n  const headers = getHeaders();\n  axios.get(`${BASE_ENDPOINT}/customer`, {\n    headers\n  }).then(data => {\n    if (data.status === 200) {\n      dispatch(setCustomerInfo(data.data));\n    }\n  }).catch(error => error.response);\n};\nexport const updateCustomer = (credentials, succesMessage) => dispatch => {\n  const headers = getHeaders();\n  axios.put(BASE_ENDPOINT, credentials, {\n    headers\n  }).then(data => {\n    if (data.status === 200) {\n      dispatch(setCustomerInfo(data.data));\n\n      if (succesMessage) {\n        message.success('Your contact information has been changed');\n      }\n    }\n  }).catch(error => error.response);\n};","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/store/customer/middleware.js"],"names":["axios","message","DOMAIN","getHeaders","setCustomerInfo","BASE_ENDPOINT","createCustomer","credentials","history","post","then","res","status","push","info","catch","error","response","requestMessage","data","changePassword","passwords","headers","put","success","password","getCustomer","dispatch","get","updateCustomer","succesMessage"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport axios from 'axios';\nimport { message } from 'antd';\nimport { DOMAIN, getHeaders } from '../../utils/constants';\nimport { setCustomerInfo } from './actionCreator';\n\nconst BASE_ENDPOINT = `${DOMAIN}/customers`;\n\nexport const createCustomer = (credentials, history) => {\n  axios.post(BASE_ENDPOINT, credentials)\n    .then((res) => {\n      if (res.status === 200) {\n        history.push('/signin')\n        message.info('New account created successfully')\n      }\n    })\n    .catch((error) => {\n      if (error.response) {\n        const requestMessage = error.response.data.message\n        message.error(`Error: ${requestMessage}`)\n      }\n    })\n}\n\nexport const changePassword = (passwords) => {\n  const headers = getHeaders();\n  const res = axios.put(`${BASE_ENDPOINT}/password`, passwords, {headers})\n    .then((data) => {\n      if (data.status === 200) {\n        if (data.data.message === 'Password successfully changed') {\n          message.success('Your password have been changed')\n        }\n        if (data.data.password === 'Password does not match') {\n          message.error('Old password is wrong ')\n        }\n      }\n    })\n    .catch((error) => {\n      if (error.response) {\n        const requestMessage = error.response.data.message\n        message.error(`Error: ${requestMessage}`)\n      }\n    })\n  return res\n}\n  \nexport const getCustomer = () => (dispatch) => {\n  const headers = getHeaders()\n  axios.get(`${BASE_ENDPOINT}/customer`, { headers })\n    .then((data) => {\n      if (data.status === 200) {\n        dispatch(setCustomerInfo(data.data))\n      }\n    })\n    .catch((error) => error.response)\n}\n\nexport const updateCustomer = (credentials, succesMessage) => (dispatch) => {\n  const headers = getHeaders();\n  axios.put(BASE_ENDPOINT, credentials, {headers})\n    .then((data) => {\n      if (data.status === 200) {\n        dispatch(setCustomerInfo(data.data))\n        if (succesMessage) {\n          message.success('Your contact information has been changed')\n        }\n      }\n    })\n    .catch((error) => error.response)\n}"]},"metadata":{},"sourceType":"module"}