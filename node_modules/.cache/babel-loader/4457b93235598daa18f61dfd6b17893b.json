{"ast":null,"code":"/* eslint-disable no-underscore-dangle */\nimport axios from 'axios';\nimport { DOMAIN, getHeaders } from '../general';\nimport updateWishlistCreator from './actionCreator';\nconst BASE_ENDPOINT = `${DOMAIN}/wishlist`;\n\nconst getParsedListFromLS = () => {\n  const check = localStorage.getItem('wishlist');\n  if (!check) localStorage.setItem('wishlist', JSON.stringify([]));\n  const items = localStorage.getItem('wishlist');\n  return JSON.parse(items);\n};\n\nconst addProductToLS = product => {\n  const prevItems = getParsedListFromLS();\n  const updatedItems = [...prevItems, product];\n  localStorage.setItem('wishlist', JSON.stringify(updatedItems));\n  return updatedItems;\n};\n\nconst removeProductFromLS = product => {\n  const prevItems = getParsedListFromLS();\n  const updatedItems = prevItems.filter(item => item._id !== product._id);\n  localStorage.setItem('wishlist', JSON.stringify(updatedItems));\n  return updatedItems;\n};\n\nexport const setWishlist = () => async (dispatch, getState) => {\n  const {\n    auth: {\n      isLogin\n    }\n  } = getState();\n  const itemsToSet = [];\n\n  if (isLogin) {\n    const headers = getHeaders();\n    await axios.get(BASE_ENDPOINT, {\n      headers\n    }).then(response => {\n      const {\n        data,\n        status\n      } = response;\n      if (data && status === 200) itemsToSet.push(...data.products);\n    }).catch(err => console.log(err.response));\n  } else {\n    itemsToSet.push(...getParsedListFromLS());\n  }\n\n  const dataToAdd = {\n    wishitstItems: itemsToSet,\n    wishitstLength: itemsToSet.length\n  };\n  dispatch(updateWishlistCreator(dataToAdd));\n};\nexport const addProductToWishlist = product => async (dispatch, getState) => {\n  if (!product || !product._id) return;\n  const productID = product._id;\n  const {\n    auth: {\n      isLogin\n    }\n  } = getState();\n  const updatedList = [];\n\n  if (isLogin) {\n    const headers = getHeaders();\n    await axios.put(`${BASE_ENDPOINT}/${productID}`, null, {\n      headers\n    }).then(response => {\n      const {\n        data,\n        status\n      } = response;\n      if (data && status === 200) updatedList.push(...data.products);\n    }).catch(err => console.log(err.response));\n  } else {\n    const updatedItems = addProductToLS(product);\n    updatedList.push(...updatedItems);\n  }\n\n  const dataToAdd = {\n    wishitstItems: updatedList,\n    wishitstLength: updatedList.length\n  };\n  dispatch(updateWishlistCreator(dataToAdd));\n};\nexport const removeProductFromWishlist = product => async (dispatch, getState) => {\n  if (!product || !product._id) return;\n  const productID = product._id;\n  const {\n    auth: {\n      isLogin\n    }\n  } = getState();\n  const updatedList = [];\n\n  if (isLogin) {\n    const headers = getHeaders();\n    await axios.delete(`${BASE_ENDPOINT}/${productID}`, {\n      headers\n    }).then(response => {\n      const {\n        data,\n        status\n      } = response;\n      if (data && status === 200) updatedList.push(...data.products);\n    }).catch(err => console.log(err.response));\n  } else {\n    const updatedItems = removeProductFromLS(product);\n    updatedList.push(...updatedItems);\n  }\n\n  const dataToAdd = {\n    wishitstItems: updatedList,\n    wishitstLength: updatedList.length\n  };\n  dispatch(updateWishlistCreator(dataToAdd));\n};","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/store/wishlist/middleware.js"],"names":["axios","DOMAIN","getHeaders","updateWishlistCreator","BASE_ENDPOINT","getParsedListFromLS","check","localStorage","getItem","setItem","JSON","stringify","items","parse","addProductToLS","product","prevItems","updatedItems","removeProductFromLS","filter","item","_id","setWishlist","dispatch","getState","auth","isLogin","itemsToSet","headers","get","then","response","data","status","push","products","catch","err","console","log","dataToAdd","wishitstItems","wishitstLength","length","addProductToWishlist","productID","updatedList","put","removeProductFromWishlist","delete"],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport axios from 'axios'\nimport { DOMAIN, getHeaders } from '../general'\nimport updateWishlistCreator from './actionCreator'\n\nconst BASE_ENDPOINT = `${DOMAIN}/wishlist`\n\nconst getParsedListFromLS = () => {\n  const check = localStorage.getItem('wishlist')\n  if (!check) localStorage.setItem('wishlist', JSON.stringify([]))\n\n  const items = localStorage.getItem('wishlist')\n  return JSON.parse(items)\n}\nconst addProductToLS = (product) => {\n  const prevItems = getParsedListFromLS()\n  const updatedItems = [...prevItems, product]\n  localStorage.setItem('wishlist', JSON.stringify(updatedItems))\n  return updatedItems\n}\nconst removeProductFromLS = (product) => {\n  const prevItems = getParsedListFromLS()\n  const updatedItems = prevItems.filter((item) => item._id !== product._id)\n  localStorage.setItem('wishlist', JSON.stringify(updatedItems))\n  return updatedItems\n}\n\nexport const setWishlist = () => async (dispatch, getState) => {\n  const {auth: { isLogin }} = getState()\n  const itemsToSet = []\n  \n  if (isLogin) {\n    const headers = getHeaders()\n    await axios.get(BASE_ENDPOINT, { headers })\n      .then((response) => {\n        const { data, status } = response\n        if (data && status === 200) itemsToSet.push(...data.products)\n      })\n      .catch((err) => console.log(err.response))\n  } else {\n    itemsToSet.push(...getParsedListFromLS())\n  }\n\n  const dataToAdd = {\n    wishitstItems: itemsToSet,\n    wishitstLength: itemsToSet.length\n  }\n  dispatch(updateWishlistCreator(dataToAdd))\n}\n\nexport const addProductToWishlist = (product) => async (dispatch, getState) => {\n  if (!product || !product._id) return\n\n  const productID = product._id\n  const {auth: { isLogin }} = getState()\n  const updatedList = []\n\n  if (isLogin) {\n    const headers = getHeaders()\n    await axios.put(`${BASE_ENDPOINT}/${productID}`, null, { headers })\n      .then((response) => {\n        const {data, status} = response\n        if (data && status === 200) updatedList.push(...data.products)\n      })\n      .catch((err) => console.log(err.response))\n  } else {\n    const updatedItems = addProductToLS(product)\n    updatedList.push(...updatedItems)\n  }\n  const dataToAdd = {\n    wishitstItems: updatedList,\n    wishitstLength: updatedList.length\n  }\n  dispatch(updateWishlistCreator(dataToAdd))\n}\n\nexport const removeProductFromWishlist = (product) => async (dispatch, getState) => {\n  if (!product || !product._id) return\n\n  const productID = product._id\n  const {auth: { isLogin }} = getState()\n  const updatedList = []\n  \n  if (isLogin) {\n    const headers = getHeaders()\n    await axios.delete(`${BASE_ENDPOINT}/${productID}`, { headers })\n      .then((response) => {\n        const { data, status } = response\n        if (data && status === 200) updatedList.push(...data.products)\n      })\n      .catch((err) => console.log(err.response))\n  } else {\n    const updatedItems = removeProductFromLS(product)\n    updatedList.push(...updatedItems)\n  }\n\n  const dataToAdd = {\n    wishitstItems: updatedList,\n    wishitstLength: updatedList.length\n  }\n  dispatch(updateWishlistCreator(dataToAdd))\n}\n"]},"metadata":{},"sourceType":"module"}