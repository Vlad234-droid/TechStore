{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/Header/UserPopUp/UserPopUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authLogOut } from '../../../store/auth/middleware';\nimport close from \"../../../images/header/Close.svg\";\nimport { NavUserContainer, Close, UlList } from './UserPopUpStyled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => ({\n  isLogin: state.auth.isLogin\n});\n\nconst UserPopUp = connect(mapStateToProps, {\n  authLogOut\n})(_s(({\n  isOpenUser,\n  setIsOpenUser,\n  isLogin,\n  authLogOut\n}) => {\n  _s();\n\n  const openSlideUser = {\n    hidden: {\n      scale: 0,\n      opacity: 0,\n      transition: {\n        delay: 0.35,\n        type: 'spring',\n        stiffness: 200,\n        damping: 40\n      }\n    },\n    show: {\n      opacity: 1,\n      scale: 1,\n      transition: {\n        delay: 0.35,\n        type: 'spring',\n        stiffness: 200,\n        damping: 40\n      }\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('click', e => {\n      if (e.target.closest('#userBtn') !== null) {\n        setIsOpenUser(() => true);\n        return;\n      }\n\n      if (isOpenUser) {\n        if (e.target.closest('#usePopUp') === null) {\n          setIsOpenUser(() => false);\n        }\n      }\n    });\n  }, [isOpenUser, setIsOpenUser]);\n  return /*#__PURE__*/_jsxDEV(NavUserContainer, {\n    id: \"usePopUp\",\n    variants: openSlideUser,\n    initial: false,\n    animate: isOpenUser ? 'show' : 'hidden',\n    children: /*#__PURE__*/_jsxDEV(UlList, {\n      children: [isLogin ? null : /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Create an Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), isLogin && /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/dashboard\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), isLogin ? /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/\",\n        onClick: authLogOut,\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"LogOut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/signin\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Close, {\n        \"data-testid\": \"closeImg\",\n        onClick: () => setIsOpenUser(false),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: close,\n          alt: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"));\nUserPopUp.propTypes = {\n  isOpenUser: PropTypes.bool.isRequired,\n  setIsOpenUser: PropTypes.func.isRequired\n};\nexport default UserPopUp;","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/Header/UserPopUp/UserPopUp.jsx"],"names":["React","useEffect","PropTypes","NavLink","connect","authLogOut","NavUserContainer","Close","UlList","mapStateToProps","state","isLogin","auth","UserPopUp","isOpenUser","setIsOpenUser","openSlideUser","hidden","scale","opacity","transition","delay","type","stiffness","damping","show","window","addEventListener","e","target","closest","close","propTypes","bool","isRequired","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,gCAA3B;;AAEA,SAASC,gBAAT,EAA2BC,KAA3B,EAAkCC,MAAlC,QAAgD,mBAAhD;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,OAAO,EAAED,KAAK,CAACE,IAAN,CAAWD;AADc,CAAZ,CAAxB;;AAIA,MAAME,SAAS,GAAGT,OAAO,CAACK,eAAD,EAAkB;AAAEJ,EAAAA;AAAF,CAAlB,CAAP,IAAyC,CAAC;AAC1DS,EAAAA,UAD0D;AAC9CC,EAAAA,aAD8C;AAC/BJ,EAAAA,OAD+B;AACtBN,EAAAA;AADsB,CAAD,KAErD;AAAA;;AACJ,QAAMW,aAAa,GAAG;AACpBC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAE,IADG;AAEVC,QAAAA,IAAI,EAAE,QAFI;AAGVC,QAAAA,SAAS,EAAE,GAHD;AAIVC,QAAAA,OAAO,EAAE;AAJC;AAHN,KADY;AAWpBC,IAAAA,IAAI,EAAE;AACJN,MAAAA,OAAO,EAAE,CADL;AAEJD,MAAAA,KAAK,EAAE,CAFH;AAGJE,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAE,IADG;AAEVC,QAAAA,IAAI,EAAE,QAFI;AAGVC,QAAAA,SAAS,EAAE,GAHD;AAIVC,QAAAA,OAAO,EAAE;AAJC;AAHR;AAXc,GAAtB;AAsBAvB,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAkCC,CAAD,IAAO;AACtC,UAAIA,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB,UAAjB,MAAiC,IAArC,EAA2C;AACzCf,QAAAA,aAAa,CAAC,MAAM,IAAP,CAAb;AACA;AACD;;AACD,UAAID,UAAJ,EAAgB;AACd,YAAIc,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB,WAAjB,MAAkC,IAAtC,EAA4C;AAC1Cf,UAAAA,aAAa,CAAC,MAAM,KAAP,CAAb;AACD;AACF;AACF,KAVD;AAWD,GAZQ,EAYN,CAACD,UAAD,EAAaC,aAAb,CAZM,CAAT;AAaA,sBACE,QAAC,gBAAD;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,QAAQ,EAAEC,aAFZ;AAGE,IAAA,OAAO,EAAE,KAHX;AAIE,IAAA,OAAO,EAAEF,UAAU,GAAG,MAAH,GAAY,QAJjC;AAAA,2BAME,QAAC,MAAD;AAAA,iBACGH,OAAO,GAAG,IAAH,gBACN,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC,SAAZ;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFJ,EAMGA,OAAO,iBAEJ,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC,YAAZ;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARN,EAYGA,OAAO,gBAEJ,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC,GAAZ;AAAgB,QAAA,OAAO,EAAEN,UAAzB;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFI,gBAMJ,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC,SAAZ;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlBN,eAsBE,QAAC,KAAD;AAAO,uBAAY,UAAnB;AAA8B,QAAA,OAAO,EAAE,MAAMU,aAAa,CAAC,KAAD,CAA1D;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEgB,KAAV;AAAiB,UAAA,GAAG,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CAzEiB,kCAAlB;AA0EAlB,SAAS,CAACmB,SAAV,GAAsB;AACpBlB,EAAAA,UAAU,EAAEZ,SAAS,CAAC+B,IAAV,CAAeC,UADP;AAEpBnB,EAAAA,aAAa,EAAEb,SAAS,CAACiC,IAAV,CAAeD;AAFV,CAAtB;AAKA,eAAerB,SAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authLogOut } from '../../../store/auth/middleware';\nimport close from '../../../images/header/Close.svg';\nimport { NavUserContainer, Close, UlList } from './UserPopUpStyled';\n\nconst mapStateToProps = (state) => ({\n  isLogin: state.auth.isLogin\n})\n\nconst UserPopUp = connect(mapStateToProps, { authLogOut })(({\n  isOpenUser, setIsOpenUser, isLogin, authLogOut\n}) => {\n  const openSlideUser = {\n    hidden: {\n      scale: 0,\n      opacity: 0,\n      transition: {\n        delay: 0.35,\n        type: 'spring',\n        stiffness: 200,\n        damping: 40\n      }\n    },\n    show: {\n      opacity: 1,\n      scale: 1,\n      transition: {\n        delay: 0.35,\n        type: 'spring',\n        stiffness: 200,\n        damping: 40\n      }\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('click', (e) => {\n      if (e.target.closest('#userBtn') !== null) {\n        setIsOpenUser(() => true);\n        return\n      }\n      if (isOpenUser) {\n        if (e.target.closest('#usePopUp') === null) {\n          setIsOpenUser(() => false)\n        }\n      }\n    })\n  }, [isOpenUser, setIsOpenUser])\n  return (\n    <NavUserContainer\n      id=\"usePopUp\"\n      variants={openSlideUser}\n      initial={false}\n      animate={isOpenUser ? 'show' : 'hidden'}\n    >\n      <UlList>\n        {isLogin ? null : (\n          <NavLink to=\"/signup\">\n            <li>Create an Account</li>\n          </NavLink>\n        )}\n        {isLogin\n          && (\n            <NavLink to=\"/dashboard\">\n              <li>Dashboard</li>\n            </NavLink>\n          )}\n        {isLogin\n          ? (\n            <NavLink to=\"/\" onClick={authLogOut}>\n              <li>LogOut</li>\n            </NavLink>\n          ) : (\n            <NavLink to=\"/signin\">\n              <li>Sign In</li>\n            </NavLink>\n          )}\n        <Close data-testid=\"closeImg\" onClick={() => setIsOpenUser(false)}>\n          <img src={close} alt=\"close\" />\n        </Close>\n      </UlList>\n    </NavUserContainer>\n  );\n})\nUserPopUp.propTypes = {\n  isOpenUser: PropTypes.bool.isRequired,\n  setIsOpenUser: PropTypes.func.isRequired\n}\n\nexport default UserPopUp;"]},"metadata":{},"sourceType":"module"}