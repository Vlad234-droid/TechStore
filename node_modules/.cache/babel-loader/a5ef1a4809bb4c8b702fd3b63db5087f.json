{"ast":null,"code":"/* eslint-disable no-underscore-dangle */\nimport { message } from 'antd';\nimport axios from 'axios';\nimport { addCartToLS, decreaseQuantityLS, getCartLS, increaseQuantityLS, removeFromCartLS } from '../../utils/cartLS';\nimport { setCart, decreaseQuantityCreator, addToCartCreator, removeFromCartCreator, clearCartCreator, increaseQuantityCreator, getBranches, getShippingCostCreator, getOrderCreator, clearOrderCreator } from './actionCreator';\nimport { DOMAIN, getHeaders } from '../general';\nconst BASE_ENDPOINT = `${DOMAIN}/cart`;\nexport const addToCart = (product, quantity) => (dispatch, getStore) => {\n  const {\n    cart: {\n      products\n    }\n  } = getStore();\n  const productId = product._id;\n  let updatedCart = [];\n  const isExistInCart = products ? products.find(el => el.product._id === productId) : null;\n\n  if (isExistInCart) {\n    updatedCart = products.map(el => {\n      if (el.product._id === isExistInCart.product._id) {\n        return { ...el,\n          cartQuantity: el.cartQuantity + quantity\n        };\n      }\n\n      return el;\n    });\n  } else {\n    updatedCart = [...products, {\n      product: productId,\n      cartQuantity: quantity\n    }];\n  }\n\n  const headers = getHeaders();\n  axios.put(BASE_ENDPOINT, {\n    products: updatedCart\n  }, {\n    headers\n  }).then(updatedCart => {\n    if (updatedCart.status === 200) {\n      console.log(updatedCart.data);\n      dispatch(addToCartCreator(updatedCart.data));\n      message.success('Product added to cart!');\n    }\n  }).catch(error => {\n    if (error.response.status === 401) {\n      addCartToLS(product, quantity);\n      message.success('Product added to cart!');\n    }\n  });\n};\nexport const getCart = () => dispatch => {\n  const headers = getHeaders();\n  axios.get(BASE_ENDPOINT, {\n    headers\n  }).then(cart => {\n    if (cart.data !== null) {\n      dispatch(setCart(cart.data));\n    }\n  }).catch(err => {\n    if (err.response.status === 401) {\n      dispatch(setCart({\n        products: getCartLS()\n      }));\n    }\n  });\n};\nexport const increaseQuantity = product => dispatch => {\n  const headers = getHeaders();\n  axios.put(`${BASE_ENDPOINT}/${product._id}`, null, {\n    headers\n  }).then(updatedCart => {\n    if (updatedCart.status === 200) {\n      dispatch(increaseQuantityCreator(updatedCart.data));\n    }\n  }).catch(error => {\n    if (error.response.status === 401) {\n      dispatch(increaseQuantityCreator({\n        products: increaseQuantityLS(product._id)\n      }));\n    }\n  });\n};\nexport const decreaseQuantity = productID => dispatch => {\n  const headers = getHeaders();\n  axios.delete(`${BASE_ENDPOINT}/product/${productID}`, {\n    headers\n  }).then(updatedCart => {\n    if (updatedCart.status === 200) {\n      dispatch(decreaseQuantityCreator(updatedCart.data));\n    }\n  }).catch(error => {\n    if (error.response.status === 401) {\n      dispatch(decreaseQuantityCreator({\n        products: decreaseQuantityLS(productID)\n      }));\n    }\n  });\n};\nexport const removeFromCart = productID => dispatch => {\n  const headers = getHeaders();\n  axios.delete(`${BASE_ENDPOINT}/${productID}`, {\n    headers\n  }).then(result => {\n    if (result.status === 200) {\n      dispatch(removeFromCartCreator(result.data));\n    }\n  }).catch(error => {\n    if (error.response.status === 401) {\n      dispatch(removeFromCartCreator({\n        products: removeFromCartLS(productID)\n      }));\n    }\n  });\n};\nexport const clearCart = isLogin => dispatch => {\n  const headers = getHeaders();\n  axios.delete(BASE_ENDPOINT, {\n    headers\n  }).then(() => {\n    if (isLogin) dispatch(clearCartCreator());\n  }).catch(err => {\n    if (err.response.status === 401) {\n      dispatch(clearCartCreator());\n      localStorage.removeItem('cart');\n    }\n  });\n};\nexport const getCity = props => dispatch => {\n  axios.post('https://api.novaposhta.ua/v2.0/json/', {\n    modelName: 'AddressGeneral',\n    calledMethod: 'getWarehouses',\n    methodProperties: {\n      Language: 'ru',\n      CityRef: props\n    },\n    apiKey: '469ae707669208ac6f2d113fc7edbe13'\n  }).then(data => {\n    const dataBranches = data.data.data.map(item => ({\n      branchName: item.DescriptionRu,\n      branchRef: item.Ref\n    }));\n    dispatch(getBranches(dataBranches));\n  }).catch(error => error.response);\n};\nexport const getShippingCost = recipientCityRef => dispatch => {\n  axios.post('https://api.novaposhta.ua/v2.0/json/', {\n    modelName: 'InternetDocument',\n    calledMethod: 'getDocumentPrice',\n    methodProperties: {\n      CitySender: '8d5a980d-391c-11dd-90d9-001a92567626',\n      CityRecipient: recipientCityRef.current.props.value,\n      Weight: '10',\n      ServiceType: 'DoorsDoors',\n      Cost: '100',\n      CargoType: 'Cargo',\n      SeatsAmount: '10',\n      PackCalculate: {\n        PackCount: '1',\n        PackRef: '1499fa4a-d26e-11e1-95e4-0026b97ed48a'\n      },\n      RedeliveryCalculate: {\n        CargoType: 'Money',\n        Amount: '100'\n      }\n    },\n    apiKey: '469ae707669208ac6f2d113fc7edbe13'\n  }).then(data => {\n    dispatch(getShippingCostCreator(data.data.data[0].Cost));\n  }).catch(error => error.response);\n};\nexport const PlaceOrder = (products, isLogin, values, customer, shippingCost, valuePaymentInfo) => dispatch => {\n  dispatch(clearOrderCreator()); // eslint-disable-next-line prefer-const\n\n  let body = {\n    canceled: false,\n    deliveryAddress: JSON.stringify({\n      country: values.country,\n      city: values.recipientCity,\n      branch: values.recipientBranch\n    }),\n    shipping: JSON.stringify(shippingCost),\n    paymentInfo: JSON.stringify(valuePaymentInfo),\n    status: 'not shipped',\n    email: values.email,\n    mobile: values.phoneNumber,\n    firstName: values.firstName,\n    letterSubject: `${values.firstName}, thank you for order!`,\n    letterHtml: '<h1>Your order is placed. OrderNo and details about order in your dashboard.</h1>'\n  };\n\n  if (isLogin) {\n    body.customerId = customer;\n  } else {\n    body.products = JSON.stringify(products);\n  }\n\n  axios.post('/orders', body).then(newOrder => {\n    dispatch(getOrderCreator(newOrder.data.order));\n    clearCart(isLogin)(dispatch);\n  }).catch(err => err.response);\n};\nexport default addToCart;","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/store/cart/middleware.js"],"names":["message","axios","addCartToLS","decreaseQuantityLS","getCartLS","increaseQuantityLS","removeFromCartLS","setCart","decreaseQuantityCreator","addToCartCreator","removeFromCartCreator","clearCartCreator","increaseQuantityCreator","getBranches","getShippingCostCreator","getOrderCreator","clearOrderCreator","DOMAIN","getHeaders","BASE_ENDPOINT","addToCart","product","quantity","dispatch","getStore","cart","products","productId","_id","updatedCart","isExistInCart","find","el","map","cartQuantity","headers","put","then","status","console","log","data","success","catch","error","response","getCart","get","err","increaseQuantity","decreaseQuantity","productID","delete","removeFromCart","result","clearCart","isLogin","localStorage","removeItem","getCity","props","post","modelName","calledMethod","methodProperties","Language","CityRef","apiKey","dataBranches","item","branchName","DescriptionRu","branchRef","Ref","getShippingCost","recipientCityRef","CitySender","CityRecipient","current","value","Weight","ServiceType","Cost","CargoType","SeatsAmount","PackCalculate","PackCount","PackRef","RedeliveryCalculate","Amount","PlaceOrder","values","customer","shippingCost","valuePaymentInfo","body","canceled","deliveryAddress","JSON","stringify","country","city","recipientCity","branch","recipientBranch","shipping","paymentInfo","email","mobile","phoneNumber","firstName","letterSubject","letterHtml","customerId","newOrder","order"],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport { message } from 'antd'\nimport axios from 'axios'\nimport {\n  addCartToLS, decreaseQuantityLS, getCartLS, increaseQuantityLS, removeFromCartLS\n} from '../../utils/cartLS'\nimport {\n  setCart,\n  decreaseQuantityCreator,\n  addToCartCreator,\n  removeFromCartCreator,\n  clearCartCreator,\n  increaseQuantityCreator,\n  getBranches,\n  getShippingCostCreator,\n  getOrderCreator,\n  clearOrderCreator\n} from './actionCreator'\nimport { DOMAIN, getHeaders } from '../general'\n\nconst BASE_ENDPOINT = `${DOMAIN}/cart`\n\nexport const addToCart = (product, quantity) => (dispatch, getStore) => {\n  const { cart: { products } } = getStore()\n\n  const productId = product._id\n\n  let updatedCart = []\n  const isExistInCart = products ? products.find((el) => el.product._id === productId) : null\n\n  if (isExistInCart) {\n    updatedCart = products.map((el) => {\n      if (el.product._id === isExistInCart.product._id) {\n        return {\n          ...el,\n          cartQuantity: el.cartQuantity + quantity\n        }\n      }\n      return el\n    })\n  } else {\n    updatedCart = [\n      ...products,\n      {\n        product: productId,\n        cartQuantity: quantity,\n      }\n    ]\n  }\n\n  const headers = getHeaders()\n  axios.put(BASE_ENDPOINT, {products: updatedCart}, { headers })\n    .then((updatedCart) => {\n      if (updatedCart.status === 200) {\n        console.log(updatedCart.data)\n        dispatch(addToCartCreator(updatedCart.data));\n        message.success('Product added to cart!')\n      }\n    })\n    .catch((error) => {\n      if (error.response.status === 401) {\n        addCartToLS(product, quantity)\n        message.success('Product added to cart!')\n      }\n    })\n}\n\nexport const getCart = () => (dispatch) => {\n  const headers = getHeaders()\n  axios.get(BASE_ENDPOINT, { headers })\n    .then((cart) => {\n      if (cart.data !== null) {\n        dispatch(setCart(cart.data))\n      }\n    })\n    .catch((err) => {\n      if (err.response.status === 401) {\n        dispatch(setCart({products: getCartLS()}))\n      }\n    });\n}\n\nexport const increaseQuantity = (product) => (dispatch) => {\n  const headers = getHeaders()\n  axios.put(`${BASE_ENDPOINT}/${product._id}`, null, { headers })\n    .then((updatedCart) => {\n      if (updatedCart.status === 200) {\n        dispatch(increaseQuantityCreator(updatedCart.data));\n      }\n    })\n    .catch((error) => {\n      if (error.response.status === 401) {\n        dispatch(increaseQuantityCreator({products: increaseQuantityLS(product._id)}))\n      }\n    })\n}\n\nexport const decreaseQuantity = (productID) => (dispatch) => {\n  const headers = getHeaders()\n  axios.delete(`${BASE_ENDPOINT}/product/${productID}`, { headers })\n    .then((updatedCart) => {\n      if (updatedCart.status === 200) {\n        dispatch(decreaseQuantityCreator(updatedCart.data))\n      }\n    })\n    .catch((error) => {\n      if (error.response.status === 401) {\n        dispatch(decreaseQuantityCreator({products: decreaseQuantityLS(productID)}))\n      }\n    })\n}\n\nexport const removeFromCart = (productID) => (dispatch) => {\n  const headers = getHeaders()\n  axios.delete(`${BASE_ENDPOINT}/${productID}`, { headers })\n    .then((result) => {\n      if (result.status === 200) {\n        dispatch(removeFromCartCreator(result.data))\n      }\n    })\n    .catch((error) => {\n      if (error.response.status === 401) {\n        dispatch(removeFromCartCreator({products: removeFromCartLS(productID)}))\n      }\n    })\n}\n\nexport const clearCart = (isLogin) => (dispatch) => {\n  const headers = getHeaders()\n  axios.delete(BASE_ENDPOINT, { headers })\n    .then(() => {\n      if (isLogin) dispatch(clearCartCreator())\n    })\n    .catch((err) => {\n      if (err.response.status === 401) {\n        dispatch(clearCartCreator())\n        localStorage.removeItem('cart')\n      }\n    })\n}\n\nexport const getCity = (props) => (dispatch) => {\n  axios.post('https://api.novaposhta.ua/v2.0/json/', {\n    modelName: 'AddressGeneral',\n    calledMethod: 'getWarehouses',\n    methodProperties: {\n      Language: 'ru',\n      CityRef: props,\n    },\n    apiKey: '469ae707669208ac6f2d113fc7edbe13'\n  })\n    .then((data) => {\n      const dataBranches = data.data.data.map((item) => ({\n        branchName: item.DescriptionRu,\n        branchRef: item.Ref\n      }))\n      dispatch(getBranches(dataBranches))\n    })\n    .catch((error) => error.response)\n}\n\nexport const getShippingCost = (recipientCityRef) => (dispatch) => {\n  axios.post('https://api.novaposhta.ua/v2.0/json/', {\n    modelName: 'InternetDocument',\n    calledMethod: 'getDocumentPrice',\n    methodProperties: {\n      CitySender: '8d5a980d-391c-11dd-90d9-001a92567626',\n      CityRecipient: recipientCityRef.current.props.value,\n      Weight: '10',\n      ServiceType: 'DoorsDoors',\n      Cost: '100',\n      CargoType: 'Cargo',\n      SeatsAmount: '10',\n      PackCalculate: {\n        PackCount: '1',\n        PackRef: '1499fa4a-d26e-11e1-95e4-0026b97ed48a'\n      },\n      RedeliveryCalculate: {\n        CargoType: 'Money',\n        Amount: '100'\n      }\n    },\n    apiKey: '469ae707669208ac6f2d113fc7edbe13'\n  })\n    .then((data) => {\n      dispatch(getShippingCostCreator(data.data.data[0].Cost))\n    })\n    .catch((error) => error.response)\n}\n\nexport const PlaceOrder = (\n  products, isLogin, values, customer, shippingCost, valuePaymentInfo,\n) => (dispatch) => {\n  dispatch(clearOrderCreator())\n  // eslint-disable-next-line prefer-const\n  let body = {\n    canceled: false,\n    deliveryAddress: JSON.stringify({\n      country: values.country,\n      city: values.recipientCity,\n      branch: values.recipientBranch,\n    }),\n    shipping: JSON.stringify(shippingCost),\n    paymentInfo: JSON.stringify(valuePaymentInfo),\n    status: 'not shipped',\n    email: values.email,\n    mobile: values.phoneNumber,\n    firstName: values.firstName,\n    letterSubject: `${values.firstName}, thank you for order!`,\n    letterHtml: '<h1>Your order is placed. OrderNo and details about order in your dashboard.</h1>'\n  }\n  if (isLogin) {\n    body.customerId = customer\n  } else {\n    body.products = JSON.stringify(products)\n  }\n  \n  axios\n    .post('/orders', body)\n    .then((newOrder) => {\n      dispatch(getOrderCreator(newOrder.data.order))\n      clearCart(isLogin)(dispatch)\n    })\n    .catch((err) => err.response)\n}\n\nexport default addToCart;"]},"metadata":{},"sourceType":"module"}