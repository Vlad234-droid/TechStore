{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/TechStore/src/components/ProductPage/ProductRate/ProductRate.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { message, Rate } from 'antd';\nimport { connect } from 'react-redux';\nimport { RateBox, ReviewsCount } from './StylesProductRate';\nimport { updateOneProduct } from '../../../store/products/middleware';\nimport rateCalculator from '../../../utils/rateCalculator';\nimport { selectIsLogin } from '../../../store/auth/reducer';\nimport { showAuthModal } from '../../../store/authModal/middleware';\nimport { checkIsCustomerRatedProduct } from './utils/checkIsCustomerRateProduct';\nimport { getUpdatedProductTeamplate } from './utils/getUpdatedProductTeamplate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => ({\n  isLogin: selectIsLogin(state)\n});\n\nconst ProductRate = connect(mapStateToProps, {\n  updateOneProduct,\n  showAuthModal\n})(_s(({\n  reviews,\n  productID,\n  itemNo,\n  updateOneProduct,\n  isLogin,\n  showAuthModal\n}) => {\n  _s();\n\n  const {\n    rating,\n    reviewsQuantity\n  } = rateCalculator(reviews);\n  const [rate, setRate] = useState(rating);\n  const [reviewsCount, setReviewsCount] = useState(reviewsQuantity);\n  const handleChange = useCallback(async currentRate => {\n    const value = currentRate !== 0 ? currentRate : rate;\n\n    if (!isLogin) {\n      showAuthModal('Please, log in to rate this product.');\n      return;\n    }\n\n    const checkIsRated = await checkIsCustomerRatedProduct(itemNo);\n\n    if (checkIsRated === null) {\n      message.info('Some problem happened on server, please try again.');\n      return;\n    }\n\n    if (checkIsRated) {\n      message.info('You have rated this item before.');\n      return;\n    }\n\n    setRate(value);\n    const updatedProduct = await getUpdatedProductTeamplate(itemNo, value);\n    const result = await updateOneProduct(productID, updatedProduct);\n    if (!result || result.status !== 200) return;\n    const newReviewsArr = result.data.reviews;\n    const {\n      reviewsQuantity\n    } = rateCalculator(newReviewsArr);\n    setReviewsCount(reviewsQuantity);\n  }, [isLogin, itemNo, productID, rate, showAuthModal, updateOneProduct]);\n  const desc = ['terrible', 'bad', 'normal', 'good', 'wonderful'];\n  return /*#__PURE__*/_jsxDEV(RateBox, {\n    children: [/*#__PURE__*/_jsxDEV(ReviewsCount, {\n      children: [\"Reviews (\", reviewsCount, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(Rate, {\n        tooltips: desc,\n        onChange: handleChange,\n        value: rate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}, \"teJ4Y6jvC0m120OYYIo/Qlx72Ew=\"));\nexport default ProductRate;","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/TechStore/src/components/ProductPage/ProductRate/ProductRate.jsx"],"names":["React","useCallback","useState","message","Rate","connect","RateBox","ReviewsCount","updateOneProduct","rateCalculator","selectIsLogin","showAuthModal","checkIsCustomerRatedProduct","getUpdatedProductTeamplate","mapStateToProps","state","isLogin","ProductRate","reviews","productID","itemNo","rating","reviewsQuantity","rate","setRate","reviewsCount","setReviewsCount","handleChange","currentRate","value","checkIsRated","info","updatedProduct","result","status","newReviewsArr","data","desc"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react'\nimport { message, Rate } from 'antd'\nimport { connect } from 'react-redux'\nimport { RateBox, ReviewsCount } from './StylesProductRate'\nimport { updateOneProduct } from '../../../store/products/middleware'\nimport rateCalculator from '../../../utils/rateCalculator'\nimport { selectIsLogin } from '../../../store/auth/reducer'\nimport { showAuthModal } from '../../../store/authModal/middleware'\nimport { checkIsCustomerRatedProduct } from './utils/checkIsCustomerRateProduct'\nimport { getUpdatedProductTeamplate } from './utils/getUpdatedProductTeamplate'\n\nconst mapStateToProps = (state) => ({isLogin: selectIsLogin(state)})\n\nconst ProductRate = connect(mapStateToProps, { updateOneProduct, showAuthModal })(({\n  reviews,\n  productID,\n  itemNo,\n  updateOneProduct,\n  isLogin,\n  showAuthModal\n}) => {\n  const { rating, reviewsQuantity } = rateCalculator(reviews)\n\n  const [rate, setRate] = useState(rating)\n  const [reviewsCount, setReviewsCount] = useState(reviewsQuantity)\n  \n  const handleChange = useCallback(async (currentRate) => {\n    const value = currentRate !== 0 ? currentRate : rate\n\n    if (!isLogin) {\n      showAuthModal('Please, log in to rate this product.')\n      return\n    }\n    const checkIsRated = await checkIsCustomerRatedProduct(itemNo)\n    if (checkIsRated === null) {\n      message.info('Some problem happened on server, please try again.')\n      return\n    }\n    if (checkIsRated) {\n      message.info('You have rated this item before.')\n      return\n    }\n    \n    setRate(value)\n    const updatedProduct = await getUpdatedProductTeamplate(itemNo, value)\n    const result = await updateOneProduct(productID, updatedProduct)\n    if (!result || result.status !== 200) return\n    \n    const newReviewsArr = result.data.reviews\n    const { reviewsQuantity } = rateCalculator(newReviewsArr)\n    setReviewsCount(reviewsQuantity)\n  }, [isLogin, itemNo, productID, rate, showAuthModal, updateOneProduct])\n  const desc = ['terrible', 'bad', 'normal', 'good', 'wonderful']\n\n  return (\n    <RateBox>\n      <ReviewsCount>\n        Reviews (\n        {reviewsCount}\n        )\n      </ReviewsCount>\n      <span>\n        <Rate tooltips={desc} onChange={handleChange} value={rate} />\n      </span>\n    </RateBox>\n  )\n})\n\nexport default ProductRate"]},"metadata":{},"sourceType":"module"}