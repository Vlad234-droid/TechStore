{"ast":null,"code":"/* eslint-disable no-underscore-dangle */\nimport { message } from 'antd';\nimport axios from 'axios';\nimport { setCart, decreaseQuantityCreator, addToCartCreator, removeFromCartCreator, clearCartCreator, increaseQuantityCreator, getBranches, getShippingCostCreator, getOrderCreator, clearOrderCreator } from './actionCreator';\nimport { DOMAIN, getHeaders } from '../general';\nconst BASE_ENDPOINT = `${DOMAIN}/cart`;\nexport const addToCart = (productId, quantity) => (dispatch, getStore) => {\n  const {\n    cart: {\n      products\n    }\n  } = getStore();\n  let updatedCart = [];\n  const isExistInCart = products ? products.find(el => el.product._id === productId) : null;\n\n  if (isExistInCart) {\n    updatedCart = products.map(el => {\n      if (el.product._id === isExistInCart.product._id) {\n        return { ...el,\n          cartQuantity: el.cartQuantity + quantity\n        };\n      }\n\n      return el;\n    });\n  } else {\n    updatedCart = [...products, {\n      product: productId,\n      cartQuantity: quantity\n    }];\n  }\n\n  const headers = getHeaders();\n  axios.put(BASE_ENDPOINT, {\n    products: updatedCart\n  }, {\n    headers\n  }).then(updatedCart => {\n    if (updatedCart.status === 200) {\n      dispatch(addToCartCreator(updatedCart.data));\n      message.success('The product has been added to cart!');\n    }\n  }).catch(error => error.response);\n};\nexport const getCart = () => dispatch => {\n  const headers = getHeaders();\n  axios.get(BASE_ENDPOINT, {\n    headers\n  }).then(carts => {\n    if (carts.status === 200) {\n      dispatch(setCart(carts.data));\n    }\n  }).catch(err => err.response);\n};\nexport const increaseQuantity = productId => dispatch => {\n  const headers = getHeaders();\n  axios.put(`${BASE_ENDPOINT}/${productId}`, null, {\n    headers\n  }).then(updatedCart => {\n    if (updatedCart.status === 200) {\n      dispatch(increaseQuantityCreator(updatedCart.data));\n    }\n  }).catch(error => error.response);\n};\nexport const decreaseQuantity = productID => dispatch => {\n  const headers = getHeaders();\n  const res = axios.delete(`${BASE_ENDPOINT}/product/${productID}`, {\n    headers\n  }).then(updatedCart => {\n    if (updatedCart.status === 200) {\n      dispatch(decreaseQuantityCreator(updatedCart.data));\n    }\n  }).catch(err => err.response);\n  return res;\n};\nexport const removeFromCart = productID => dispatch => {\n  const headers = getHeaders();\n  axios.delete(`${BASE_ENDPOINT}/${productID}`, {\n    headers\n  }).then(result => {\n    if (result.status === 200) {\n      dispatch(removeFromCartCreator(result.data));\n    }\n  }).catch(err => err.response);\n};\nexport const clearCart = () => dispatch => {\n  const headers = getHeaders();\n  axios.delete(BASE_ENDPOINT, {\n    headers\n  }).then(() => dispatch(clearCartCreator())).catch(err => err.response);\n};\nexport const getCity = props => dispatch => {\n  axios.post('https://api.novaposhta.ua/v2.0/json/', {\n    modelName: 'AddressGeneral',\n    calledMethod: 'getWarehouses',\n    methodProperties: {\n      Language: 'ru',\n      CityRef: props\n    },\n    apiKey: '469ae707669208ac6f2d113fc7edbe13'\n  }).then(data => {\n    const dataBranches = data.data.data.map(item => ({\n      branchName: item.DescriptionRu,\n      branchRef: item.Ref\n    }));\n    dispatch(getBranches(dataBranches));\n  }).catch(error => error.response);\n};\nexport const getShippingCost = recipientCityRef => dispatch => {\n  axios.post('https://api.novaposhta.ua/v2.0/json/', {\n    modelName: 'InternetDocument',\n    calledMethod: 'getDocumentPrice',\n    methodProperties: {\n      CitySender: '8d5a980d-391c-11dd-90d9-001a92567626',\n      CityRecipient: recipientCityRef.current.props.value,\n      Weight: '10',\n      ServiceType: 'DoorsDoors',\n      Cost: '100',\n      CargoType: 'Cargo',\n      SeatsAmount: '10',\n      PackCalculate: {\n        PackCount: '1',\n        PackRef: '1499fa4a-d26e-11e1-95e4-0026b97ed48a'\n      },\n      RedeliveryCalculate: {\n        CargoType: 'Money',\n        Amount: '100'\n      }\n    },\n    apiKey: '469ae707669208ac6f2d113fc7edbe13'\n  }).then(data => {\n    dispatch(getShippingCostCreator(data.data.data[0].Cost));\n  }).catch(error => error.response);\n};\nexport const PlaceOrder = (values, customer, shippingCost, valuePaymentInfo) => dispatch => {\n  const headers = getHeaders();\n  dispatch(clearOrderCreator());\n  axios.post('/orders', {\n    canceled: false,\n    customerId: {\n      _id: customer._id\n    },\n    deliveryAddress: JSON.stringify({\n      country: values.country,\n      city: values.recipientCity,\n      branch: values.recipientBranch\n    }),\n    shipping: JSON.stringify(shippingCost),\n    paymentInfo: JSON.stringify(valuePaymentInfo),\n    status: 'not shipped',\n    email: customer.email,\n    mobile: customer.telephone,\n    letterSubject: 'Thank you for order! You are welcome!',\n    letterHtml: '<h1>Your order is placed. OrderNo and details about order in your dashboard.</h1>'\n  }, {\n    headers\n  }).then(newOrder => {\n    dispatch(getOrderCreator(newOrder.data.order));\n    clearCart()(dispatch);\n  }).catch(err => err.response);\n};\nexport default addToCart;","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/store/cart/middleware.js"],"names":["message","axios","setCart","decreaseQuantityCreator","addToCartCreator","removeFromCartCreator","clearCartCreator","increaseQuantityCreator","getBranches","getShippingCostCreator","getOrderCreator","clearOrderCreator","DOMAIN","getHeaders","BASE_ENDPOINT","addToCart","productId","quantity","dispatch","getStore","cart","products","updatedCart","isExistInCart","find","el","product","_id","map","cartQuantity","headers","put","then","status","data","success","catch","error","response","getCart","get","carts","err","increaseQuantity","decreaseQuantity","productID","res","delete","removeFromCart","result","clearCart","getCity","props","post","modelName","calledMethod","methodProperties","Language","CityRef","apiKey","dataBranches","item","branchName","DescriptionRu","branchRef","Ref","getShippingCost","recipientCityRef","CitySender","CityRecipient","current","value","Weight","ServiceType","Cost","CargoType","SeatsAmount","PackCalculate","PackCount","PackRef","RedeliveryCalculate","Amount","PlaceOrder","values","customer","shippingCost","valuePaymentInfo","canceled","customerId","deliveryAddress","JSON","stringify","country","city","recipientCity","branch","recipientBranch","shipping","paymentInfo","email","mobile","telephone","letterSubject","letterHtml","newOrder","order"],"mappings":"AAAA;AACA,SAASA,OAAT,QAAwB,MAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,OADF,EAEEC,uBAFF,EAGEC,gBAHF,EAIEC,qBAJF,EAKEC,gBALF,EAMEC,uBANF,EAOEC,WAPF,EAQEC,sBARF,EASEC,eATF,EAUEC,iBAVF,QAWO,iBAXP;AAYA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,YAAnC;AAEA,MAAMC,aAAa,GAAI,GAAEF,MAAO,OAAhC;AAEA,OAAO,MAAMG,SAAS,GAAG,CAACC,SAAD,EAAYC,QAAZ,KAAyB,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACxE,QAAM;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAAR,MAAyBF,QAAQ,EAAvC;AAEA,MAAIG,WAAW,GAAG,EAAlB;AACA,QAAMC,aAAa,GAAGF,QAAQ,GAAGA,QAAQ,CAACG,IAAT,CAAeC,EAAD,IAAQA,EAAE,CAACC,OAAH,CAAWC,GAAX,KAAmBX,SAAzC,CAAH,GAAyD,IAAvF;;AAEA,MAAIO,aAAJ,EAAmB;AACjBD,IAAAA,WAAW,GAAGD,QAAQ,CAACO,GAAT,CAAcH,EAAD,IAAQ;AACjC,UAAIA,EAAE,CAACC,OAAH,CAAWC,GAAX,KAAmBJ,aAAa,CAACG,OAAd,CAAsBC,GAA7C,EAAkD;AAChD,eAAO,EACL,GAAGF,EADE;AAELI,UAAAA,YAAY,EAAEJ,EAAE,CAACI,YAAH,GAAkBZ;AAF3B,SAAP;AAID;;AACD,aAAOQ,EAAP;AACD,KARa,CAAd;AASD,GAVD,MAUO;AACLH,IAAAA,WAAW,GAAG,CACZ,GAAGD,QADS,EAEZ;AACEK,MAAAA,OAAO,EAAEV,SADX;AAEEa,MAAAA,YAAY,EAAEZ;AAFhB,KAFY,CAAd;AAOD;;AAED,QAAMa,OAAO,GAAGjB,UAAU,EAA1B;AACAZ,EAAAA,KAAK,CAAC8B,GAAN,CAAUjB,aAAV,EAAyB;AAACO,IAAAA,QAAQ,EAAEC;AAAX,GAAzB,EAAkD;AAAEQ,IAAAA;AAAF,GAAlD,EACGE,IADH,CACSV,WAAD,IAAiB;AACrB,QAAIA,WAAW,CAACW,MAAZ,KAAuB,GAA3B,EAAgC;AAC9Bf,MAAAA,QAAQ,CAACd,gBAAgB,CAACkB,WAAW,CAACY,IAAb,CAAjB,CAAR;AACAlC,MAAAA,OAAO,CAACmC,OAAR,CAAgB,qCAAhB;AACD;AACF,GANH,EAOGC,KAPH,CAOUC,KAAD,IAAWA,KAAK,CAACC,QAP1B;AAQD,CAnCM;AAqCP,OAAO,MAAMC,OAAO,GAAG,MAAOrB,QAAD,IAAc;AACzC,QAAMY,OAAO,GAAGjB,UAAU,EAA1B;AACAZ,EAAAA,KAAK,CAACuC,GAAN,CAAU1B,aAAV,EAAyB;AAAEgB,IAAAA;AAAF,GAAzB,EACGE,IADH,CACSS,KAAD,IAAW;AACf,QAAIA,KAAK,CAACR,MAAN,KAAiB,GAArB,EAA0B;AACxBf,MAAAA,QAAQ,CAAChB,OAAO,CAACuC,KAAK,CAACP,IAAP,CAAR,CAAR;AACD;AACF,GALH,EAMGE,KANH,CAMUM,GAAD,IAAUA,GAAG,CAACJ,QANvB;AAOD,CATM;AAWP,OAAO,MAAMK,gBAAgB,GAAI3B,SAAD,IAAgBE,QAAD,IAAc;AAC3D,QAAMY,OAAO,GAAGjB,UAAU,EAA1B;AACAZ,EAAAA,KAAK,CAAC8B,GAAN,CAAW,GAAEjB,aAAc,IAAGE,SAAU,EAAxC,EAA2C,IAA3C,EAAiD;AAAEc,IAAAA;AAAF,GAAjD,EACGE,IADH,CACSV,WAAD,IAAiB;AACrB,QAAIA,WAAW,CAACW,MAAZ,KAAuB,GAA3B,EAAgC;AAC9Bf,MAAAA,QAAQ,CAACX,uBAAuB,CAACe,WAAW,CAACY,IAAb,CAAxB,CAAR;AACD;AACF,GALH,EAMGE,KANH,CAMUC,KAAD,IAAWA,KAAK,CAACC,QAN1B;AAOD,CATM;AAWP,OAAO,MAAMM,gBAAgB,GAAIC,SAAD,IAAgB3B,QAAD,IAAc;AAC3D,QAAMY,OAAO,GAAGjB,UAAU,EAA1B;AACA,QAAMiC,GAAG,GAAG7C,KAAK,CAAC8C,MAAN,CAAc,GAAEjC,aAAc,YAAW+B,SAAU,EAAnD,EAAsD;AAAEf,IAAAA;AAAF,GAAtD,EACTE,IADS,CACHV,WAAD,IAAiB;AACrB,QAAIA,WAAW,CAACW,MAAZ,KAAuB,GAA3B,EAAgC;AAC9Bf,MAAAA,QAAQ,CAACf,uBAAuB,CAACmB,WAAW,CAACY,IAAb,CAAxB,CAAR;AACD;AACF,GALS,EAMTE,KANS,CAMFM,GAAD,IAASA,GAAG,CAACJ,QANV,CAAZ;AAOA,SAAOQ,GAAP;AACD,CAVM;AAYP,OAAO,MAAME,cAAc,GAAIH,SAAD,IAAgB3B,QAAD,IAAc;AACzD,QAAMY,OAAO,GAAGjB,UAAU,EAA1B;AACAZ,EAAAA,KAAK,CAAC8C,MAAN,CAAc,GAAEjC,aAAc,IAAG+B,SAAU,EAA3C,EAA8C;AAAEf,IAAAA;AAAF,GAA9C,EACGE,IADH,CACSiB,MAAD,IAAY;AAChB,QAAIA,MAAM,CAAChB,MAAP,KAAkB,GAAtB,EAA2B;AACzBf,MAAAA,QAAQ,CAACb,qBAAqB,CAAC4C,MAAM,CAACf,IAAR,CAAtB,CAAR;AACD;AACF,GALH,EAMGE,KANH,CAMUM,GAAD,IAASA,GAAG,CAACJ,QANtB;AAOD,CATM;AAWP,OAAO,MAAMY,SAAS,GAAG,MAAOhC,QAAD,IAAc;AAC3C,QAAMY,OAAO,GAAGjB,UAAU,EAA1B;AACAZ,EAAAA,KAAK,CAAC8C,MAAN,CAAajC,aAAb,EAA4B;AAAEgB,IAAAA;AAAF,GAA5B,EACGE,IADH,CACQ,MAAMd,QAAQ,CAACZ,gBAAgB,EAAjB,CADtB,EAEG8B,KAFH,CAEUM,GAAD,IAASA,GAAG,CAACJ,QAFtB;AAGD,CALM;AAOP,OAAO,MAAMa,OAAO,GAAIC,KAAD,IAAYlC,QAAD,IAAc;AAC9CjB,EAAAA,KAAK,CAACoD,IAAN,CAAW,sCAAX,EAAmD;AACjDC,IAAAA,SAAS,EAAE,gBADsC;AAEjDC,IAAAA,YAAY,EAAE,eAFmC;AAGjDC,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,QAAQ,EAAE,IADM;AAEhBC,MAAAA,OAAO,EAAEN;AAFO,KAH+B;AAOjDO,IAAAA,MAAM,EAAE;AAPyC,GAAnD,EASG3B,IATH,CASSE,IAAD,IAAU;AACd,UAAM0B,YAAY,GAAG1B,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAeN,GAAf,CAAoBiC,IAAD,KAAW;AACjDC,MAAAA,UAAU,EAAED,IAAI,CAACE,aADgC;AAEjDC,MAAAA,SAAS,EAAEH,IAAI,CAACI;AAFiC,KAAX,CAAnB,CAArB;AAIA/C,IAAAA,QAAQ,CAACV,WAAW,CAACoD,YAAD,CAAZ,CAAR;AACD,GAfH,EAgBGxB,KAhBH,CAgBUC,KAAD,IAAWA,KAAK,CAACC,QAhB1B;AAiBD,CAlBM;AAoBP,OAAO,MAAM4B,eAAe,GAAIC,gBAAD,IAAuBjD,QAAD,IAAc;AACjEjB,EAAAA,KAAK,CAACoD,IAAN,CAAW,sCAAX,EAAmD;AACjDC,IAAAA,SAAS,EAAE,kBADsC;AAEjDC,IAAAA,YAAY,EAAE,kBAFmC;AAGjDC,IAAAA,gBAAgB,EAAE;AAChBY,MAAAA,UAAU,EAAE,sCADI;AAEhBC,MAAAA,aAAa,EAAEF,gBAAgB,CAACG,OAAjB,CAAyBlB,KAAzB,CAA+BmB,KAF9B;AAGhBC,MAAAA,MAAM,EAAE,IAHQ;AAIhBC,MAAAA,WAAW,EAAE,YAJG;AAKhBC,MAAAA,IAAI,EAAE,KALU;AAMhBC,MAAAA,SAAS,EAAE,OANK;AAOhBC,MAAAA,WAAW,EAAE,IAPG;AAQhBC,MAAAA,aAAa,EAAE;AACbC,QAAAA,SAAS,EAAE,GADE;AAEbC,QAAAA,OAAO,EAAE;AAFI,OARC;AAYhBC,MAAAA,mBAAmB,EAAE;AACnBL,QAAAA,SAAS,EAAE,OADQ;AAEnBM,QAAAA,MAAM,EAAE;AAFW;AAZL,KAH+B;AAoBjDtB,IAAAA,MAAM,EAAE;AApByC,GAAnD,EAsBG3B,IAtBH,CAsBSE,IAAD,IAAU;AACdhB,IAAAA,QAAQ,CAACT,sBAAsB,CAACyB,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAe,CAAf,EAAkBwC,IAAnB,CAAvB,CAAR;AACD,GAxBH,EAyBGtC,KAzBH,CAyBUC,KAAD,IAAWA,KAAK,CAACC,QAzB1B;AA0BD,CA3BM;AA6BP,OAAO,MAAM4C,UAAU,GAAG,CACxBC,MADwB,EAChBC,QADgB,EACNC,YADM,EACQC,gBADR,KAEpBpE,QAAD,IAAc;AACjB,QAAMY,OAAO,GAAGjB,UAAU,EAA1B;AACAK,EAAAA,QAAQ,CAACP,iBAAiB,EAAlB,CAAR;AACAV,EAAAA,KAAK,CACFoD,IADH,CACQ,SADR,EACmB;AACfkC,IAAAA,QAAQ,EAAE,KADK;AAEfC,IAAAA,UAAU,EAAE;AACV7D,MAAAA,GAAG,EAAEyD,QAAQ,CAACzD;AADJ,KAFG;AAKf8D,IAAAA,eAAe,EAAEC,IAAI,CAACC,SAAL,CAAe;AAC9BC,MAAAA,OAAO,EAAET,MAAM,CAACS,OADc;AAE9BC,MAAAA,IAAI,EAAEV,MAAM,CAACW,aAFiB;AAG9BC,MAAAA,MAAM,EAAEZ,MAAM,CAACa;AAHe,KAAf,CALF;AAUfC,IAAAA,QAAQ,EAAEP,IAAI,CAACC,SAAL,CAAeN,YAAf,CAVK;AAWfa,IAAAA,WAAW,EAAER,IAAI,CAACC,SAAL,CAAeL,gBAAf,CAXE;AAYfrD,IAAAA,MAAM,EAAE,aAZO;AAafkE,IAAAA,KAAK,EAAEf,QAAQ,CAACe,KAbD;AAcfC,IAAAA,MAAM,EAAEhB,QAAQ,CAACiB,SAdF;AAefC,IAAAA,aAAa,EAAE,uCAfA;AAgBfC,IAAAA,UAAU,EAAE;AAhBG,GADnB,EAkBK;AAACzE,IAAAA;AAAD,GAlBL,EAmBGE,IAnBH,CAmBSwE,QAAD,IAAc;AAClBtF,IAAAA,QAAQ,CAACR,eAAe,CAAC8F,QAAQ,CAACtE,IAAT,CAAcuE,KAAf,CAAhB,CAAR;AACAvD,IAAAA,SAAS,GAAGhC,QAAH,CAAT;AACD,GAtBH,EAuBGkB,KAvBH,CAuBUM,GAAD,IAASA,GAAG,CAACJ,QAvBtB;AAwBD,CA7BM;AA+BP,eAAevB,SAAf","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport { message } from 'antd'\nimport axios from 'axios'\nimport {\n  setCart,\n  decreaseQuantityCreator,\n  addToCartCreator,\n  removeFromCartCreator,\n  clearCartCreator,\n  increaseQuantityCreator,\n  getBranches,\n  getShippingCostCreator,\n  getOrderCreator,\n  clearOrderCreator\n} from './actionCreator'\nimport { DOMAIN, getHeaders } from '../general'\n\nconst BASE_ENDPOINT = `${DOMAIN}/cart`\n\nexport const addToCart = (productId, quantity) => (dispatch, getStore) => {\n  const { cart: { products } } = getStore()\n\n  let updatedCart = []\n  const isExistInCart = products ? products.find((el) => el.product._id === productId) : null\n\n  if (isExistInCart) {\n    updatedCart = products.map((el) => {\n      if (el.product._id === isExistInCart.product._id) {\n        return {\n          ...el,\n          cartQuantity: el.cartQuantity + quantity\n        }\n      }\n      return el\n    })\n  } else {\n    updatedCart = [\n      ...products,\n      {\n        product: productId,\n        cartQuantity: quantity,\n      }\n    ]\n  }\n\n  const headers = getHeaders()\n  axios.put(BASE_ENDPOINT, {products: updatedCart}, { headers })\n    .then((updatedCart) => {\n      if (updatedCart.status === 200) {\n        dispatch(addToCartCreator(updatedCart.data));\n        message.success('The product has been added to cart!')\n      }\n    })\n    .catch((error) => error.response)\n}\n\nexport const getCart = () => (dispatch) => {\n  const headers = getHeaders()\n  axios.get(BASE_ENDPOINT, { headers })\n    .then((carts) => {\n      if (carts.status === 200) {\n        dispatch(setCart(carts.data))\n      }\n    })\n    .catch((err) => (err.response));\n}\n\nexport const increaseQuantity = (productId) => (dispatch) => {\n  const headers = getHeaders()\n  axios.put(`${BASE_ENDPOINT}/${productId}`, null, { headers })\n    .then((updatedCart) => {\n      if (updatedCart.status === 200) {\n        dispatch(increaseQuantityCreator(updatedCart.data));\n      }\n    })\n    .catch((error) => error.response)\n}\n\nexport const decreaseQuantity = (productID) => (dispatch) => {\n  const headers = getHeaders()\n  const res = axios.delete(`${BASE_ENDPOINT}/product/${productID}`, { headers })\n    .then((updatedCart) => {\n      if (updatedCart.status === 200) {\n        dispatch(decreaseQuantityCreator(updatedCart.data))\n      }\n    })\n    .catch((err) => err.response);\n  return res;\n}\n\nexport const removeFromCart = (productID) => (dispatch) => {\n  const headers = getHeaders()\n  axios.delete(`${BASE_ENDPOINT}/${productID}`, { headers })\n    .then((result) => {\n      if (result.status === 200) {\n        dispatch(removeFromCartCreator(result.data))\n      }\n    })\n    .catch((err) => err.response);\n}\n\nexport const clearCart = () => (dispatch) => {\n  const headers = getHeaders()\n  axios.delete(BASE_ENDPOINT, { headers })\n    .then(() => dispatch(clearCartCreator()))\n    .catch((err) => err.response);\n}\n\nexport const getCity = (props) => (dispatch) => {\n  axios.post('https://api.novaposhta.ua/v2.0/json/', {\n    modelName: 'AddressGeneral',\n    calledMethod: 'getWarehouses',\n    methodProperties: {\n      Language: 'ru',\n      CityRef: props,\n    },\n    apiKey: '469ae707669208ac6f2d113fc7edbe13'\n  })\n    .then((data) => {\n      const dataBranches = data.data.data.map((item) => ({\n        branchName: item.DescriptionRu,\n        branchRef: item.Ref\n      }))\n      dispatch(getBranches(dataBranches))\n    })\n    .catch((error) => error.response)\n}\n\nexport const getShippingCost = (recipientCityRef) => (dispatch) => {\n  axios.post('https://api.novaposhta.ua/v2.0/json/', {\n    modelName: 'InternetDocument',\n    calledMethod: 'getDocumentPrice',\n    methodProperties: {\n      CitySender: '8d5a980d-391c-11dd-90d9-001a92567626',\n      CityRecipient: recipientCityRef.current.props.value,\n      Weight: '10',\n      ServiceType: 'DoorsDoors',\n      Cost: '100',\n      CargoType: 'Cargo',\n      SeatsAmount: '10',\n      PackCalculate: {\n        PackCount: '1',\n        PackRef: '1499fa4a-d26e-11e1-95e4-0026b97ed48a'\n      },\n      RedeliveryCalculate: {\n        CargoType: 'Money',\n        Amount: '100'\n      }\n    },\n    apiKey: '469ae707669208ac6f2d113fc7edbe13'\n  })\n    .then((data) => {\n      dispatch(getShippingCostCreator(data.data.data[0].Cost))\n    })\n    .catch((error) => error.response)\n}\n\nexport const PlaceOrder = (\n  values, customer, shippingCost, valuePaymentInfo\n) => (dispatch) => {\n  const headers = getHeaders()\n  dispatch(clearOrderCreator())\n  axios\n    .post('/orders', {\n      canceled: false,\n      customerId: {\n        _id: customer._id\n      },\n      deliveryAddress: JSON.stringify({\n        country: values.country,\n        city: values.recipientCity,\n        branch: values.recipientBranch,\n      }),\n      shipping: JSON.stringify(shippingCost),\n      paymentInfo: JSON.stringify(valuePaymentInfo),\n      status: 'not shipped',\n      email: customer.email,\n      mobile: customer.telephone,\n      letterSubject: 'Thank you for order! You are welcome!',\n      letterHtml: '<h1>Your order is placed. OrderNo and details about order in your dashboard.</h1>'\n    }, {headers})\n    .then((newOrder) => {\n      dispatch(getOrderCreator(newOrder.data.order))\n      clearCart()(dispatch)\n    })\n    .catch((err) => err.response);\n}\n\nexport default addToCart;"]},"metadata":{},"sourceType":"module"}