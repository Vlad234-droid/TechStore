{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/TechStore/src/components/CatalogPage/CatalogFilter/FormMenu/FormMenu.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport { Checkbox, Form, Menu, Slider } from 'antd';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { brands as defBrands, categories as defCategories, checkFilterConfig } from '../../filterConfig';\nimport { StyledCheckbox } from '../StylesCatalogfilter';\nimport makeConfigFromUrl from '../../../../utils/makeConfigFromUrl';\nimport { selectMinMaxPrice } from '../../../../store/catalog/reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layout = {\n  wrapperCol: {\n    span: 24\n  }\n};\n\nconst mapStateToProps = state => ({\n  minMaxPrice: selectMinMaxPrice(state)\n});\n\nexport const FormMenu = connect(mapStateToProps)(_s(({\n  minMaxPrice\n}) => {\n  _s();\n\n  const {\n    search\n  } = useLocation();\n  const config = useMemo(() => search ? makeConfigFromUrl(search) : {}, [search]);\n  const [{\n    brand,\n    categories\n  }, setConfig] = useState({\n    brand: defBrands,\n    categories: defCategories\n  });\n\n  const checkConfig = async (search = {}) => {\n    const newConfig = search.categories ? await checkFilterConfig(search) : {};\n\n    if (Object.keys(newConfig).length) {\n      setConfig(prev => ({ ...prev,\n        ...newConfig\n      }));\n    } else setConfig({\n      brand: defBrands,\n      categories: defCategories\n    });\n  };\n\n  useEffect(() => {\n    checkConfig(config);\n  }, [config]);\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    defaultOpenKeys: ['сategories', 'brands', 'price'],\n    mode: \"inline\",\n    children: [/*#__PURE__*/_jsxDEV(Menu.SubMenu, {\n      title: \"\\u0421ategories\",\n      children: /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"categories\",\n        noStyle: true,\n        children: /*#__PURE__*/_jsxDEV(Checkbox.Group, {\n          style: {\n            width: '100%'\n          },\n          children: categories === null || categories === void 0 ? void 0 : categories.map(({\n            value,\n            title\n          }) => /*#__PURE__*/_jsxDEV(StyledCheckbox, {\n            value: value,\n            children: title\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, \"сategories\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu.SubMenu, {\n      title: \"Brand\",\n      children: /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"brand\",\n        noStyle: true,\n        children: /*#__PURE__*/_jsxDEV(Checkbox.Group, {\n          style: {\n            width: '100%'\n          },\n          children: brand === null || brand === void 0 ? void 0 : brand.map(({\n            value,\n            title\n          }) => /*#__PURE__*/_jsxDEV(StyledCheckbox, {\n            value: value,\n            children: title\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, \"brands\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu.SubMenu, {\n      title: \"Price\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '20px 20px 0'\n        },\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"price\",\n          ...layout,\n          children: /*#__PURE__*/_jsxDEV(StyledSlider, {\n            step: 100,\n            range: true,\n            min: minMaxPrice[0],\n            max: minMaxPrice[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, \"price\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}, \"1xShqFfctnyum2tizt0bWDaNZ2o=\", false, function () {\n  return [useLocation];\n}));\nconst StyledSlider = styled(Slider)`\n`;\n_c = StyledSlider;\nexport default FormMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"StyledSlider\");","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/TechStore/src/components/CatalogPage/CatalogFilter/FormMenu/FormMenu.jsx"],"names":["Checkbox","Form","Menu","Slider","React","useEffect","useMemo","useState","useLocation","styled","connect","brands","defBrands","categories","defCategories","checkFilterConfig","StyledCheckbox","makeConfigFromUrl","selectMinMaxPrice","layout","wrapperCol","span","mapStateToProps","state","minMaxPrice","FormMenu","search","config","brand","setConfig","checkConfig","newConfig","Object","keys","length","prev","width","map","value","title","padding","StyledSlider"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport {\n  Checkbox, Form, Menu, Slider\n} from 'antd'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { brands as defBrands, categories as defCategories, checkFilterConfig } from '../../filterConfig'\nimport { StyledCheckbox } from '../StylesCatalogfilter'\nimport makeConfigFromUrl from '../../../../utils/makeConfigFromUrl';\nimport { selectMinMaxPrice } from '../../../../store/catalog/reducer';\n\nconst layout = {\n  wrapperCol: { span: 24 }\n}\n\nconst mapStateToProps = (state) => ({\n  minMaxPrice: selectMinMaxPrice(state)\n})\n\nexport const FormMenu = connect(mapStateToProps)(({minMaxPrice}) => {\n  const {search} = useLocation()\n  const config = useMemo(() => (search ? makeConfigFromUrl(search) : {}), [search])\n  const [{brand, categories}, setConfig] = useState({brand: defBrands, categories: defCategories})\n\n  const checkConfig = async (search = {}) => {\n    const newConfig = search.categories ? await checkFilterConfig(search) : {}\n    if (Object.keys(newConfig).length) {\n      setConfig((prev) => ({\n        ...prev,\n        ...newConfig\n      }))\n    } else setConfig({brand: defBrands, categories: defCategories})\n  }\n\n  useEffect(() => {\n    checkConfig(config)\n  }, [config])\n\n  return (\n    <Menu defaultOpenKeys={['сategories', 'brands', 'price']} mode=\"inline\">\n      <Menu.SubMenu key=\"сategories\" title=\"Сategories\">\n        <Form.Item name=\"categories\" noStyle>\n          <Checkbox.Group style={{width: '100%'}}>\n            {categories?.map(({value, title}) => (\n              <StyledCheckbox\n                key={value}\n                value={value}\n              >\n                {title}\n              </StyledCheckbox>\n            ))}\n          </Checkbox.Group>\n        </Form.Item>\n      </Menu.SubMenu>\n      <Menu.SubMenu key=\"brands\" title=\"Brand\">\n        <Form.Item name=\"brand\" noStyle>\n          <Checkbox.Group style={{width: '100%'}}>\n            {brand?.map(({value, title}) => (\n              <StyledCheckbox\n                key={value}\n                value={value}\n              >\n                {title}\n              </StyledCheckbox>\n            ))}\n          </Checkbox.Group>\n        </Form.Item>\n      </Menu.SubMenu>\n      <Menu.SubMenu key=\"price\" title=\"Price\">\n        <div style={{padding: '20px 20px 0'}}>\n          <Form.Item name=\"price\" {...layout}>\n            <StyledSlider\n              step={100}\n              range\n              min={minMaxPrice[0]}\n              max={minMaxPrice[1]}\n            />\n          </Form.Item>\n        </div>\n      </Menu.SubMenu>\n    </Menu>\n  )\n})\n\nconst StyledSlider = styled(Slider)`\n`\n\nexport default FormMenu"]},"metadata":{},"sourceType":"module"}