{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/ProductPage/CartGroup/CartGroup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { CartGroupBox, FlexBox, AvilableQuantityBox } from './StylesCartGroup';\nimport InputGroup from './InputGroup/InputGroup';\nimport StyledButton from '../../common/Buttons/StyledButton';\nimport checkValue from '../../../utils/checkValue';\nimport { addToCart } from '../../../store/cart/middleware';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartGroup = connect(null, {\n  addToCart\n})(_s(({\n  productID,\n  avilableQuantity,\n  addToCart\n}) => {\n  _s();\n\n  const [quantity, setQuanity] = useState(avilableQuantity > 0 ? 1 : 0);\n\n  const inputHandler = e => {\n    const value = +e.target.value.trim();\n    if (!checkValue(value, avilableQuantity)) return;\n    setQuanity(() => value);\n  };\n\n  const increaseHandler = () => {\n    const isValid = checkValue(quantity + 1, avilableQuantity);\n    return isValid ? setQuanity(prevValue => prevValue + 1) : null;\n  };\n\n  const decreaseHandler = () => {\n    const isValid = checkValue(quantity - 1, avilableQuantity);\n    return isValid ? setQuanity(prevValue => prevValue - 1) : null;\n  };\n\n  const isAvilable = avilableQuantity > 0;\n  return /*#__PURE__*/_jsxDEV(CartGroupBox, {\n    children: [/*#__PURE__*/_jsxDEV(AvilableQuantityBox, {\n      children: isAvilable ? `Avilable quantity: ${avilableQuantity} pc.` : ' The item is out of stock.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlexBox, {\n      children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n        decreaseHandler: decreaseHandler,\n        increaseHandler: increaseHandler,\n        inputHandler: inputHandler,\n        quantity: quantity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n        size: \"lg\",\n        shape: \"round\",\n        disabled: !isAvilable,\n        onClick: () => addToCart(productID, quantity),\n        children: \"Add to cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}, \"Um+E1/wkXb9VB64Lu5Mh61ofptE=\"));\nCartGroup.propTypes = {\n  productID: PropTypes.string.isRequired,\n  avilableQuantity: PropTypes.number.isRequired,\n  addToCart: PropTypes.func\n};\nexport default CartGroup;","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/ProductPage/CartGroup/CartGroup.jsx"],"names":["React","useState","PropTypes","connect","CartGroupBox","FlexBox","AvilableQuantityBox","InputGroup","StyledButton","checkValue","addToCart","CartGroup","productID","avilableQuantity","quantity","setQuanity","inputHandler","e","value","target","trim","increaseHandler","isValid","prevValue","decreaseHandler","isAvilable","propTypes","string","isRequired","number","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,OAAvB,EAAgCC,mBAAhC,QAA2D,mBAA3D;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAAQC,SAAR,QAAwB,gCAAxB;;AAEA,MAAMC,SAAS,GAAGR,OAAO,CAAC,IAAD,EAAO;AAAEO,EAAAA;AAAF,CAAP,CAAP,IAA6B,CAAC;AAAEE,EAAAA,SAAF;AAAaC,EAAAA,gBAAb;AAA+BH,EAAAA;AAA/B,CAAD,KAAgD;AAAA;;AAC7F,QAAM,CAACI,QAAD,EAAWC,UAAX,IAAyBd,QAAQ,CAACY,gBAAgB,GAAG,CAAnB,GAAuB,CAAvB,GAA2B,CAA5B,CAAvC;;AACA,QAAMG,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAMC,KAAK,GAAG,CAACD,CAAC,CAACE,MAAF,CAASD,KAAT,CAAeE,IAAf,EAAf;AACA,QAAI,CAACX,UAAU,CAACS,KAAD,EAAQL,gBAAR,CAAf,EAA0C;AAC1CE,IAAAA,UAAU,CAAC,MAAMG,KAAP,CAAV;AACD,GAJD;;AAMA,QAAMG,eAAe,GAAG,MAAM;AAC5B,UAAMC,OAAO,GAAGb,UAAU,CAACK,QAAQ,GAAG,CAAZ,EAAeD,gBAAf,CAA1B;AACA,WAAOS,OAAO,GAAGP,UAAU,CAAEQ,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAAb,GAA8C,IAA5D;AACD,GAHD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC5B,UAAMF,OAAO,GAAGb,UAAU,CAACK,QAAQ,GAAG,CAAZ,EAAeD,gBAAf,CAA1B;AACA,WAAOS,OAAO,GAAGP,UAAU,CAAEQ,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAAb,GAA8C,IAA5D;AACD,GAHD;;AAKA,QAAME,UAAU,GAAGZ,gBAAgB,GAAG,CAAtC;AACA,sBACE,QAAC,YAAD;AAAA,4BACE,QAAC,mBAAD;AAAA,gBACGY,UAAU,GAAI,sBAAqBZ,gBAAiB,MAA1C,GAAkD;AAD/D;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,OAAD;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,eAAe,EAAEW,eADnB;AAEE,QAAA,eAAe,EAAEH,eAFnB;AAGE,QAAA,YAAY,EAAEL,YAHhB;AAIE,QAAA,QAAQ,EAAEF;AAJZ;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAC,IAAnB;AAAwB,QAAA,KAAK,EAAC,OAA9B;AAAsC,QAAA,QAAQ,EAAE,CAACW,UAAjD;AAA6D,QAAA,OAAO,EAAE,MAAMf,SAAS,CAACE,SAAD,EAAYE,QAAZ,CAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAlCiB,kCAAlB;AAoCAH,SAAS,CAACe,SAAV,GAAsB;AACpBd,EAAAA,SAAS,EAAEV,SAAS,CAACyB,MAAV,CAAiBC,UADR;AAEpBf,EAAAA,gBAAgB,EAAEX,SAAS,CAAC2B,MAAV,CAAiBD,UAFf;AAGpBlB,EAAAA,SAAS,EAAER,SAAS,CAAC4B;AAHD,CAAtB;AAMA,eAAenB,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { CartGroupBox, FlexBox, AvilableQuantityBox } from './StylesCartGroup'\nimport InputGroup from './InputGroup/InputGroup'\nimport StyledButton from '../../common/Buttons/StyledButton'\nimport checkValue from '../../../utils/checkValue'\nimport {addToCart} from '../../../store/cart/middleware'\n\nconst CartGroup = connect(null, { addToCart })(({ productID, avilableQuantity, addToCart }) => {\n  const [quantity, setQuanity] = useState(avilableQuantity > 0 ? 1 : 0)\n  const inputHandler = (e) => {\n    const value = +e.target.value.trim()\n    if (!checkValue(value, avilableQuantity)) return\n    setQuanity(() => value)\n  }\n  \n  const increaseHandler = () => {\n    const isValid = checkValue(quantity + 1, avilableQuantity)\n    return isValid ? setQuanity((prevValue) => prevValue + 1) : null\n  }\n  const decreaseHandler = () => {\n    const isValid = checkValue(quantity - 1, avilableQuantity)\n    return isValid ? setQuanity((prevValue) => prevValue - 1) : null\n  }\n  \n  const isAvilable = avilableQuantity > 0\n  return (\n    <CartGroupBox>\n      <AvilableQuantityBox>\n        {isAvilable ? `Avilable quantity: ${avilableQuantity} pc.` : ' The item is out of stock.'}\n      </AvilableQuantityBox>\n      <FlexBox>\n        <InputGroup\n          decreaseHandler={decreaseHandler}\n          increaseHandler={increaseHandler}\n          inputHandler={inputHandler}\n          quantity={quantity}\n        />\n        <StyledButton size=\"lg\" shape=\"round\" disabled={!isAvilable} onClick={() => addToCart(productID, quantity)}>Add to cart</StyledButton>\n      </FlexBox>\n    </CartGroupBox>\n  )\n})\n\nCartGroup.propTypes = {\n  productID: PropTypes.string.isRequired,\n  avilableQuantity: PropTypes.number.isRequired,\n  addToCart: PropTypes.func\n}\n\nexport default CartGroup"]},"metadata":{},"sourceType":"module"}