{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/LogIn/AuthForm/AuthForm.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport { React, useState } from 'react';\nimport styled from 'styled-components';\nimport { Button, Form, Input, message } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport { connect } from 'react-redux';\nimport { authLogIn } from '../../../store/auth/middleware';\nimport { compareLSItemsAndDBItems } from '../../../store/wishlist/middleware';\nimport { setRefreshTimer } from '../../../store/auth/actionCreator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = connect(null, {\n  authLogIn,\n  setRefreshTimer,\n  compareLSItemsAndDBItems\n})(_s(({\n  authLogIn,\n  compareLSItemsAndDBItems,\n  setRefreshTimer\n}) => {\n  _s();\n\n  const startInterval = () => setInterval(() => {\n    authLogIn(JSON.parse(localStorage.getItem('credentials')));\n  }, 1800000);\n\n  const formLayout = 'vertical';\n  const [error, setError] = useState({});\n  const history = useHistory();\n\n  const onFinish = async values => {\n    const {\n      status,\n      data\n    } = await authLogIn(values);\n\n    if (status === 200) {\n      setRefreshTimer(startInterval());\n      localStorage.setItem('token', data.token);\n      history.push('/');\n      compareLSItemsAndDBItems();\n    }\n\n    if (status === 400) {\n      message.error(data.password);\n      setError(data);\n    }\n\n    if (status === 404) {\n      message.error(data.loginOrEmail);\n      setError(data);\n    }\n  };\n\n  const onChange = () => {\n    setError({});\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"authorization\",\n    layout: formLayout,\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onChange: onChange,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Login or Email\",\n      name: \"loginOrEmail\",\n      ...(error.loginOrEmail && {\n        help: error.loginOrEmail,\n        validateStatus: 'error'\n      }),\n      rules: [{\n        required: true,\n        message: 'Please input your login or email!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Your Login or Email\",\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Password\",\n      name: \"password\",\n      ...(error.password && {\n        help: error.password,\n        validateStatus: 'error'\n      }),\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }, {\n        pattern: /^[a-zÐ°0-9]+$/i,\n        message: 'Allowed characters is a-z, 0-9'\n      }, {\n        min: 8,\n        message: 'Password length must be at least 8 symbols.'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {\n        placeholder: \"Your password\",\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(ButtonStyled, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        shape: \"round\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}, \"v/h+eR03/SdMKkCzNY2OpbNdKCQ=\", false, function () {\n  return [useHistory];\n}));\nconst ButtonStyled = styled(Button)`\n  width: 151px;\n  height: 50px;\n  background-color: rgba(1,86,255,1);\n`;\n_c = ButtonStyled;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonStyled\");","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/Final_project_Online-store/src/components/LogIn/AuthForm/AuthForm.jsx"],"names":["React","useState","styled","Button","Form","Input","message","useHistory","connect","authLogIn","compareLSItemsAndDBItems","setRefreshTimer","AuthForm","startInterval","setInterval","JSON","parse","localStorage","getItem","formLayout","error","setError","history","onFinish","values","status","data","setItem","token","push","password","loginOrEmail","onChange","remember","help","validateStatus","required","pattern","min","ButtonStyled"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport { React, useState} from 'react';\nimport styled from 'styled-components'\nimport {\n  Button,\n  Form, Input, message\n} from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport { connect } from 'react-redux';\nimport {authLogIn} from '../../../store/auth/middleware';\nimport { compareLSItemsAndDBItems } from '../../../store/wishlist/middleware';\nimport {setRefreshTimer} from '../../../store/auth/actionCreator'\n\nconst AuthForm = connect(null, {\n  authLogIn,\n  setRefreshTimer,\n  compareLSItemsAndDBItems\n})((\n  {\n    authLogIn,\n    compareLSItemsAndDBItems,\n    setRefreshTimer,\n  }\n) => {\n  const startInterval = () => (\n    setInterval(() => {\n      authLogIn(JSON.parse(localStorage.getItem('credentials')))\n    }, 1800000)\n  )\n\n  const formLayout = 'vertical'\n  const [error, setError] = useState({})\n  const history = useHistory()\n\n  const onFinish = async (values) => {\n    const {status, data} = await authLogIn(values)\n\n    if (status === 200) {\n      setRefreshTimer(startInterval())\n      localStorage.setItem('token', data.token)\n      history.push('/')\n      compareLSItemsAndDBItems()\n    }\n\n    if (status === 400) {\n      message.error(data.password)\n      setError(data)\n    }\n\n    if (status === 404) {\n      message.error(data.loginOrEmail)\n      setError(data)\n    }\n  };\n\n  const onChange = () => {\n    setError({})\n  }\n  \n  return (\n    <Form\n      name=\"authorization\"\n      layout={formLayout}\n      initialValues={{\n        remember: true,\n      }}\n      onFinish={onFinish}\n      onChange={onChange}\n    >\n      <Form.Item\n        label=\"Login or Email\"\n        name=\"loginOrEmail\"\n        {...error.loginOrEmail && {\n          help: error.loginOrEmail,\n          validateStatus: 'error',\n        }}\n        rules={[\n          {\n            required: true,\n            message: 'Please input your login or email!',\n          },\n        ]}\n      >\n        <Input placeholder=\"Your Login or Email\" size=\"large\" />\n      </Form.Item>\n  \n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        {...error.password && {\n          help: error.password,\n          validateStatus: 'error',\n        }}\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n          {\n            pattern: /^[a-zÐ°0-9]+$/i,\n            message: 'Allowed characters is a-z, 0-9'\n          },\n          {\n            min: 8,\n            message: 'Password length must be at least 8 symbols.',\n          },\n        ]}\n      >\n        <Input.Password placeholder=\"Your password\" size=\"large\" />\n      </Form.Item>\n        \n      <Form.Item>\n        <ButtonStyled type=\"primary\" htmlType=\"submit\" shape=\"round\">\n          Sign In\n        </ButtonStyled>\n      </Form.Item>\n    </Form>\n  );\n});\n\nconst ButtonStyled = styled(Button)`\n  width: 151px;\n  height: 50px;\n  background-color: rgba(1,86,255,1);\n`\n\nexport default AuthForm"]},"metadata":{},"sourceType":"module"}